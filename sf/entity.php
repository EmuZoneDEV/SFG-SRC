<?php
// Monster class:
// ($lvl, $class, $str, $agi, $int, $wit, $luck, $dmg_min, $dmg_max, $hp, $armor, $id, $exp, $weapon_id, $shield_id = 0)

//base entity with nothing more than base stats
//base for simulator
class Entity{

	//DB player ID, monster ID, and what not to display in fight correctly
	public $ID;

	//used for simulator
	public $hp;

	public $maxHp;

	public $class;
	public $lvl;

	protected $baseStats = [
	"str" => "0",
	"dex" => "0",
	"int" => "0",
	"wit" => "0",
	"luck" => "0"];

	//dmg range
	public $dmg_min;
	public $dmg_max;

	//block/dodge chance, range 1-100, 0 = no dodge/block
	public $block;

	//crit chance, float? tbd
	public $crit;

	//items shown in fights
	public $weapon;
	public $shield;
	
	// armor
	public $armor;

	function __construct(){
		$this->NewEntity();
	}
	
	//sets hp based on lvl, stats etc	
	public function NewEntity(){

		if($this->class == 1)
			$this->maxHp = $this->getTotalStats()['wit'] * 5 * ($this->lvl + 1);
		else if($this->class == 2)
			$this->maxHp = $this->getTotalStats()['wit'] * 2 * ($this->lvl + 1);
		else  
			$this->maxHp = $this->getTotalStats()['wit'] * 4 * ($this->lvl + 1);

		$this->hp = $this->maxHp;

		//TODO: delete this later
		$this->crit = 50;
	}

	//used for simulation
	public function dmg($dmg){
		$this->hp -= $dmg;
	}

	//in case i need to reset for simulations
	public function resetHp(){
		$this->hp = $this->maxHp;
	}

	//override in subclasses, to add equipstats
	public function getTotalStats(){
		return $this->baseStats;
	}

	public static function getStatName($index){
		switch($index){
			case 1:
				return "str";
				break;
			case 2:
				return "dex";
				break;
			case 3:
				return "int";
				break;
			case 4:
				return "wit";
				break;
			case 5:
				return "luck";
				break;
		}
	}
}

class dungeonFaces
{
	public static function getFaces($dungs, $dung = true, $shadow = true)
	{
		// Rework by Greg
		
		$faces = [
			[129, 112, 6, 84, 31, 74, 116, 114, 4, 166],
			[131, 38, 112, 86, 51, 102, 23, 67, 92, 169],
			[28, 3, 57, 94, 140, 78, 93, 162, 142, 170],
			[124, 45, 94, 107, 46, 39, 141, 47, 137, 172],
			[9, 150, 36, 153, 17, 151, 161, 118, 160, 171],
			[128, 86, 77, 81, 89, 16, 88, 30, 87, 167],
			[66, 97, 82, 52, 158, 135, 102, 52, 149, 168],
			[38, 143, 147, 144, 99, 154, 146, 98, 156, 164],
			[136, 125, 99, 37, 129, 138, 90, 42, 74, -1],
			[101, 115, 159, 21, 61, 163, 161, 159, 158, 165],
			[173, 174, 175, 176, 177, 178, 179, 180, 181, 182],
			[183, 184, 185, 186, 187, 188, 189, 190, 191, 192],
			[243, 244, 245, 246, 247, 248, 249, 250, 251, 252],
			[600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619]
		];
		
		$dungeonfaces = [];
		if ($dung)
		{
			for($i = 1; $i <= 14; $i++){
				$d = $dungs['d'.$i];
				if($d > 1)
					$d -= 2;
				if( ($d == 10 && $i < 14) || $d == 20 )
					$d--;
				$dungeonfaces[] = $faces[$i-1][$d];
			}
		}
		
		$shadowfaces = [];
		if ($shadow)
		{
			for($i = 1; $i <= 14; $i++){
				$d = $dungs['dd'.$i];
				if($d > 1)
					$d -= 2;
				if(($d == 10 && $i < 14) || $d == 20)
					$d--;
				$shadowfaces[] = $faces[$i-1][$d];
			}
			
			// Twister by Greg
			$twister = Monster::getDungMonster(15, ($dungs['d15'] - 1));
			
			if($twister == null)
				$shadowfaces[] = 0;
			else
				$shadowfaces[] = $twister->ID * -1;
		}
		
		$d16_normal = Monster::getDungMonster(16, ($dungs['d16'] - 1));
		$d16_shadow = Monster::getDungMonster(16, ($dungs['dd16'] - 1));
		
		$dungeonfaces[] = 0;
		$dungeonfaces[] = ($d16_normal->ID ?? 0) * -1;
		
		$shadowfaces[] = ($d16_shadow->ID ?? 0) * -1;
		
		return [$dungeonfaces, $shadowfaces];
	}
}

//dungeon monsters, maybe quest monsters?
class Monster extends Entity{

	public $exp;
	public $gold;
	public $weaponID;
	public $ID2;


	function __construct($lvl, $class, $str, $agi, $int, $wit, $luck, $dmg_min, $dmg_max, $hp, $armor, $id, $exp, $weapon_id, $shield_id = 5){
		$this->lvl = $lvl;
		$this->class = $class;
		$this->baseStats['str'] = $str;
		$this->baseStats['dex'] = $agi;
		$this->baseStats['int'] = $int;
		$this->baseStats['wit'] = $wit;
		$this->baseStats['luck'] = $luck;

		$this->hp = $hp;
		$this->maxHp = $hp;

		$this->dmg_min = $dmg_min;
		$this->dmg_max = $dmg_max;

		$this->armor = $armor;

		$this->ID = $id;
		if($id>0)
			$this->ID *= -1;
		
		$this->ID2 = $this->ID;

		$this->exp = $exp;

		$this->weaponID = $weapon_id;

		if($this->class == 1){
			if($shield_id > 0){
				$this->block = 25;
				$this->shield = $shield_id;
			}
		}else if($this->class == 3){
			$this->block = 50;
			// $mainStat = "dex";
		}else{
			$this->block = 0;
			// $mainStat = "int";
		}

		//temporary
		$this->crit = 25;

	}

	//temp shit, buffs the mob to dark zone status
	public function buff(){
		$this->maxHp += 10000000;
		$this->hp = $this->maxHp;

		$this->dmg_min += 1000000;
		$this->dmg_max += 1500000;

		$this->baseStats['str'] += 5000;
		$this->baseStats['dex'] += 5000;
		$this->baseStats['int'] += 5000;
		$this->baseStats['wit'] += 5000;
		$this->baseStats['luck'] += 5000;

		$this->lvl += 100;

	}
	
	public function convertToMyPet()
	{
		$this->ID2 = $this->ID;
		$this->ID = 100000;
	}

	public function getFightHeader(){

		$ret = [];
		for($i = 0; $i < 47; $i++)
			$ret[] = 0;

		$ret[47] = "";

		$ret[0] = $this->ID;
		$ret[1] = 0;
		$ret[2] = $this->lvl;
		$ret[3] = $this->maxHp;
		$ret[4] = $this->hp;
		$ret[5] = $this->baseStats['str'];
		$ret[6] = $this->baseStats['dex'];
		$ret[7] = $this->baseStats['int'];
		$ret[8] = $this->baseStats['wit'];
		$ret[9] = $this->baseStats['luck'];
		$ret[10] = abs($this->ID2) * -1;
		$ret[11] = 0;
		$ret[12] = 0;
		$ret[13] = 0;
		$ret[14] = 0;
		$ret[15] = 0;
		$ret[16] = 0;
		$ret[17] = 0;
		$ret[18] = 0;
		$ret[19] = 0;
		$ret[20] = 0;
		$ret[21] = 0;

		//weapon type
		$ret[22] = 1;

		//weapon id, if weapon is an item, 23 = 1 and 24 = item_id, else 23 is hittype
		if ($this->weaponID == 65535)
			$ret[23] = 65535; // Pet is my bitch
		else if ($this->weaponID > 0){
			$ret[23] = 1;
			$ret[24] = $this->weaponID;
		}else{
			$ret[23] = $this->weaponID;
		}


		$ret[25] = 0;
		$ret[26] = 0;
		$ret[27] = 0;
		$ret[28] = 0;
		$ret[29] = 0;
		$ret[30] = 0;
		$ret[31] = 0;
		$ret[32] = 0;
		$ret[33] = 0;
		$ret[34] = 0;
		$ret[35] = 2;
		$ret[36] = 5;
		$ret[37] = 0;
		$ret[38] = 0;
		$ret[39] = 0;
		$ret[40] = 0;
		$ret[41] = 0;
		$ret[42] = 0;
		$ret[43] = 0;
		$ret[44] = 0;
		$ret[45] = 0;
		$ret[46] = 0;

		return join("/", $ret);
	}
	
	public static function getDungMonster($dung, $stage){
		switch ($dung) {
			case 1:
				switch ($stage) {
					case 1:
						return new Monster(10, 2, 48, 52, 104, 77, 470, 342, 513, 1694, 85, 129, 1287, -2);
					case 2:
						return new Monster(12, 1, 120, 6, 59, 101, 51, 208, 312, 6565, 510, 112, 1785, -1);
					case 3:
						return new Monster(14, 1, 149, 78, 69, 124, 65, 302, 445, 9300, 595, 6, 2395, -1);
					case 4:
						return new Monster(16, 3, 84, 195, 83, 131, 94, 554, 820, 8908, 340, 84, 3146, -1);
					case 5:
						return new Monster(18, 1, 97, 99, 303, 198, 137, 2097, 3130, 9108, 187, 31, 4050, -1);
					case 6:
						return new Monster(22, 2, 97, 99, 303, 198, 137, 2097, 3130, 9108, 187, 74, 6412, -2);
					case 7:
						return new Monster(26, 1, 359, 135, 122, 260, 142, 1292, 1956, 35100, 1105, 116, 9631, 24);
					case 8:
						return new Monster(30, 2, 126, 130, 460, 279, 193, 4277, 6439, 17298, 255, 114, 13952, 1004);
					case 9:
						return new Monster(40, 1, 614, 207, 191, 445, 238, 3370, 5054, 91225, 1700, 4, 30909, -1);
					case 10:
						return new Monster(50, 3, 221, 847, 213, 561, 292, 7284, 10884, 114444, 1065, 166, 60343, -1);
				}
			case 2:
				switch ($stage) {
					case 1:
						return new Monster(20, 3, 101, 264, 101, 174, 119, 932, 1397, 14616, 425, 131, 2124, -1);
					case 2:
						return new Monster(24, 1, 317, 126, 117, 238, 130, 1046, 1570, 29750, 1020, 38, 7909, -5);
					case 3:
						return new Monster(28, 1, 393, 138, 125, 284, 152, 1531, 2297, 41180, 1190, 112, 11652, -1);
					case 4:
						return new Monster(34, 3, 143, 554, 144, 303, 216, 3215, 4850, 42420, 722, 86, 19539, -1);
					case 5:
						return new Monster(38, 1, 592, 178, 162, 398, 195, 3070, 4635, 77610, 1615, 51, 26652, -1);
					case 6:
						return new Monster(44, 2, 191, 190, 780, 411, 259, 10586, 15879, 36990, 374, 102, 40886, -2);
					case 7:
						return new Monster(48, 1, 744, 243, 230, 563, 246, 4901, 7314, 137935, 2040, 23, 53228, -4);
					case 8:
						return new Monster(56, 3, 250, 960, 240, 680, 345, 9215, 13774, 155040, 1190, 67, 86309, 9);
					case 9:
						return new Monster(66, 3, 300, 1160, 290, 880, 420, 13104, 19656, 233840, 1420, 92, 148282, 8);
					case 10:
						return new Monster(70, 1, 1240, 385, 360, 960, 340, 11875, 17750, 340800, 2975, 169, 181085, -2);
				}
			case 3:
				switch ($stage) {
					case 1:
						return new Monster(32, 3, 155, 486, 161, 276, 205, 2678, 4018, 36432, 680, 28, 16557, -1);
					case 2:
						return new Monster(36, 3, 141, 602, 149, 344, 230, 3733, 5569, 50912, 765, 3, 22893, -1);
					case 3:
						return new Monster(42, 3, 205, 726, 224, 403, 247, 5226, 7875, 69316, 892, 57, 35642, -1);
					case 4:
						return new Monster(54, 1, 920, 265, 240, 640, 260, 6789, 10230, 176000, 2295, 94, 46757, 9);
					case 5:
						return new Monster(46, 1, 768, 215, 183, 539, 249, 4824, 7235, 126665, 1955, 140, 76872, 7);
					case 6:
						return new Monster(60, 3, 270, 1040, 260, 760, 375, 10710, 16065, 185440, 1275, 78, 108013, -1);
					case 7:
						return new Monster(64, 1, 1120, 340, 315, 840, 310, 9831, 14690, 273000, 2720, 93, 133734, 9);
					case 8:
						return new Monster(76, 3, 350, 1360, 340, 1080, 495, 17673, 26441, 332640, 1615, 162, 240784, -1);
					case 9:
						return new Monster(86, 1, 1560, 505, 480, 1280, 420, 18212, 27475, 556800, 3655, 142, 374041, 7);
					case 10:
						return new Monster(90, 1, 1640, 535, 510, 1360, 440, 20130, 30195, 618800, 3825, 170, 441608, 50);
				}
			case 4:
				switch ($stage) {
					case 1:
						return new Monster(52, 3, 230, 880, 220, 601, 315, 7832, 11748, 127412, 1105, 124, 68234, -2);
					case 2:
						return new Monster(58, 3, 260, 1000, 250, 720, 360, 9898, 14847, 169920, 1232, 45, 96706, 7);
					case 3:
						return new Monster(62, 1, 1080, 325, 300, 800, 300, 9156, 13734, 252000, 2635, 94, 120287, 9);
					case 4:
						return new Monster(68, 1, 1200, 370, 345, 920, 330, 11132, 16698, 317400, 2890, 107, 163994, -1);
					case 5:
						return new Monster(74, 1, 1320, 415, 390, 1040, 360, 13300, 19950, 390000, 3145, 46, 163994, 21);
					case 6:
						return new Monster(82, 3, 380, 1480, 370, 1200, 540, 20711, 31141, 398400, 1742, 39, 315135, 9);
					case 7:
						return new Monster(84, 1, 1520, 490, 465, 1240, 410, 17442, 26163, 527000, 3570, 141, 343618, 7);
					case 8:
						return new Monster(102, 3, 480, 1880, 470, 1600, 690, 32697, 49140, 659200, 2167, 47, 560797, 21);
					case 9:
						return new Monster(96, 1, 1760, 580, 555, 1480, 470, 23010, 34515, 717800, 4080, 137, 704509, -1);
					case 10:
						return new Monster(110, 3, 520, 2040, 510, 1760, 750, 38335, 57400, 781440, 2337, 172, 940791, 24);
				}
			case 5:
				switch ($stage) {
					case 1:
						return new Monster(72, 3, 330, 1280, 320, 1000, 465, 15738, 23607, 292000, 1530, 9, 199497, -1);
					case 2:
						return new Monster(78, 3, 360, 1400, 350, 1120, 510, 18612, 27918, 353920, 1657, 150, 263817, 27);
					case 3:
						return new Monster(80, 3, 370, 1440, 360, 1160, 525, 19720, 29580, 375840, 1700, 36, 288496, -1);
					case 4:
						return new Monster(88, 3, 410, 1600, 400, 1320, 585, 23989, 36064, 469920, 1870, 153, 406744, 27);
					case 5:
						return new Monster(94, 1, 1720, 565, 540, 1440, 460, 21971, 33043, 684000, 3995, 17, 518518, -1);
					case 6:
						return new Monster(100, 3, 470, 1840, 460, 1560, 675, 31450, 47175, 630240, 2125, 151, 653687, 27);
					case 7:
						return new Monster(108, 1, 2000, 670, 645, 1720, 530, 29346, 44220, 937400, 4590, 161, 876584, -1);
					case 8:
						return new Monster(114, 2, 520, 540, 2200, 1760, 775, 76908, 115583, 404800, 969, 118, 1081088, -1);
					case 9:
						return new Monster(122, 1, 2280, 775, 750, 2000, 600, 37785, 56792, 1230000, 5185, 160, 1412064, -1);
					case 10:
						return new Monster(130, 3, 620, 2440, 610, 2160, 900, 54145, 81095, 1131840, 2762, 171, 1821461, 20);
				}
			case 6:
				switch ($stage) {
					case 1:
						return new Monster(92, 1, 1680, 550, 525, 1400, 450, 21125, 31603, 651000, 3910, 128, 478738, -1);
					case 2:
						return new Monster(98, 3, 460, 1800, 450, 1520, 660, 30046, 45069, 601920, 2082, 86, 605700, -1);
					case 3:
						return new Monster(104, 2, 470, 490, 2000, 1560, 700, 63918, 95877, 327600, 884, 77, 758451, -1);
					case 4:
						return new Monster(106, 3, 500, 1960, 490, 1680, 720, 35460, 53190, 719040, 2252, 81, 815853, -3);
					case 5:
						return new Monster(118, 3, 560, 2200, 520, 1920, 810, 44200, 66300, 913920, 2507, 89, 1237696, -1);
					case 6:
						return new Monster(124, 1, 2320, 790, 765, 2040, 610, 39144, 58716, 1275000, 5270, 16, 1506706, -1);
					case 7:
						return new Monster(128, 3, 610, 2400, 600, 2120, 885, 52297, 78566, 1093920, 2720, 88, 1710914, -1);
					case 8:
						return new Monster(136, 2, 630, 650, 2640, 2200, 940, 110240, 165360, 602800, 1156, 30, 2187846, -1);
					case 9:
						return new Monster(144, 3, 690, 2720, 680, 2440, 1005, 66612, 100191, 1415200, 3060, 87, 2767832, -1);
					case 10:
						return new Monster(150, 3, 720, 2840, 710, 2560, 1050, 72675, 108870, 1546240, 3187, 167, 3280697, -1);
				}
			case 7:
				switch ($stage) {
					case 1:
						return new Monster(112, 3, 530, 2080, 520, 1800, 765, 39710, 59565, 813600, 2380, 66, 1009041, -1);
					case 2:
						return new Monster(116, 3, 550, 2160, 540, 1880, 795, 42749, 64015, 879840, 2465, 97, 1157092, -1);
					case 3:
						return new Monster(120, 2, 550, 570, 2320, 1880, 820, 85511, 128150, 454960, 1020, 82, 1322625, -3);
					case 4:
						return new Monster(126, 1, 2360, 805, 780, 2080, 620, 40527, 60909, 1320800, 5355, 52, 1606255, -6);
					case 5:
						return new Monster(138, 1, 2600, 895, 870, 2320, 680, 48807, 73341, 1612400, 5865, 158, 2059369, -1);
					case 6:
						return new Monster(134, 1, 2520, 865, 840, 2240, 660, 46046, 69069, 1512000, 5695, 135, 2322552, -1);
					case 7:
						return new Monster(142, 2, 660, 680, 2760, 2320, 985, 120218, 180327, 663520, 1207, 102, 2612278, -2);
					case 8:
						return new Monster(146, 1, 2760, 955, 930, 2480, 720, 54846, 82269, 1822800, 6205, 52, 2930646, -6);
					case 9:
						return new Monster(148, 1, 2800, 970, 945, 2520, 730, 56481, 84581, 1877400, 6290, 149, 3101774, -1);
					case 10:
						return new Monster(170, 1, 3240, 1135, 1110, 2960, 840, 75075, 112450, 2530800, 7225, 168, 5583708, -6);
				}
			case 8:
				switch ($stage) {
					case 1:
						return new Monster(132, 1, 2480, 850, 825, 2200, 650, 44571, 66981, 1463000, 5610, 38, 1937541, -5);
					case 2:
						return new Monster(140, 3, 670, 2640, 660, 2360, 975, 63070, 94605, 1331040, 2975, 143, 2463717, -2);
					case 3:
						return new Monster(154, 1, 2920, 1015, 990, 2640, 760, 61237, 92002, 2046000, 6545, 147, 3663979, -1);
					case 4:
						return new Monster(158, 3, 760, 3000, 750, 2720, 1110, 80668, 121002, 1729920, 3357, 144, 4082943, -2);
					case 5:
						return new Monster(164, 3, 790, 3120, 780, 2840, 1155, 87014, 130834, 1874400, 3485, 99, 4785109, -1);
					case 6:
						return new Monster(168, 2, 790, 810, 3280, 2840, 1180, 169106, 253659, 959920, 1428, 154, 5306545, -3);
					case 7:
						return new Monster(172, 1, 3280, 1150, 1125, 3000, 850, 76657, 115150, 2595000, 7310, 146, 5873522, -1);
					case 8:
						return new Monster(180, 3, 870, 3340, 860, 3160, 1275, 102510, 153765, 2287840, 3825, 98, 7157815, -1);
					case 9:
						return new Monster(185, 2, 875, 895, 3620, 3180, 1305, 205458, 308187, 1182960, 1572, 156, 8070081, -3);
					case 10:
						return new Monster(200, 2, 950, 970, 3920, 3480, 1410, 240516, 360774, 1398960, 1700, 164, 11412835, 2051);
				}
			case 9:
				switch ($stage) {
					case 1:
						return new Monster(152, 1, 2880, 1000, 975, 2600, 750, 59534, 89590, 1989000, 6460, 136, 3467701, -1);
					case 2:
						return new Monster(156, 2, 730, 750, 3040, 2600, 1090, 145485, 218380, 816400, 1326, 125, 3868959, -2);
					case 3:
						return new Monster(160, 3, 770, 3040, 760, 2760, 1125, 82960, 124440, 1777440, 3400, 99, 4307201, -1);
					case 4:
						return new Monster(162, 1, 3080, 1075, 1050, 2800, 800, 67980, 101970, 2282000, 6885, 37, 4541147, -5);
					case 5:
						return new Monster(166, 2, 780, 800, 3240, 2800, 1165, 164775, 247325, 935200, 1411, 129, 5040468, -2);
					case 6:
						return new Monster(174, 1, 3320, 1165, 1140, 3040, 860, 78588, 117882, 2660000, 7395, 138, 6175189, 2004);
					case 7:
						return new Monster(176, 3, 850, 3360, 840, 3080, 1245, 100763, 150976, 2180640, 3740, 90, 6489101, 8);
					case 8:
						return new Monster(178, 3, 860, 3400, 850, 3120, 1260, 102982, 154473, 2233920, 3782, 42, 6816906, 9);
					case 9:
						return new Monster(190, 2, 900, 920, 3720, 3280, 1340, 216713, 325256, 1252960, 1615, 74, 9081081, -2);
				}
			case 10:
				switch ($stage) {
					case 1:
						return new Monster(205, 3, 995, 3940, 985, 3660, 1450, 137460, 206190, 3015840, 4356, 101, 12751538, 24);
					case 2:
						return new Monster(210, 1, 4040, 1420, 1395, 3760, 1010, 115425, 173340, 3966800, 8925, 115, 14222021, 24);
					case 3:
						return new Monster(215, 1, 4140, 1455, 1430, 3860, 1030, 121180, 181770, 4168800, 9137, 159, 15824529, 13);
					case 4:
						return new Monster(220, 1, 4240, 1490, 1465, 3960, 1050, 127075, 190400, 4375800, 9350, 21, 17581974, -4);
					case 5:
						return new Monster(225, 3, 1095, 4340, 1085, 4060, 1590, 166170, 249255, 3670240, 4781, 61, 19491852, -1);
					case 6:
						return new Monster(230, 3, 1120, 4440, 1110, 4160, 1615, 173995, 260770, 3843840, 4887, 163, 21576743, -1);
					case 7:
						return new Monster(235, 2, 1125, 1145, 4620, 4180, 1655, 332897, 499114, 1972960, 1997, 161, 23839326, -1);
					case 8:
						return new Monster(240, 1, 4640, 1630, 1605, 4360, 1130, 151590, 227385, 5253800, 10200, 159, 26302843, 13);
					case 9:
						return new Monster(245, 1, 4740, 1665, 1640, 4460, 1150, 158175, 237025, 5485800, 10412, 158, 28966329, -1);
					case 10:
						return new Monster(250, 1, 4840, 1700, 1675, 4560, 1170, 164900, 247350, 5722800, 10625, 165, 31862139, 10);
				}
			case 11:
				switch ($stage) {
					case 1:
						return new Monster(255, 1, 4940, 1735, 1710, 4660, 1190, 171270, 257400, 5964800, 10837, 173, 34985806, 20);
					case 2:
						return new Monster(260, 3, 1270, 5040, 1260, 4760, 1835, 223210, 334815, 4969440, 5525, 174, 38369989, 7);
					case 3:
						return new Monster(265, 1, 5140, 1805, 1780, 4860, 1230, 185400, 278100, 6463800, 11262, 175, 42016588, 12);
					case 4:
						return new Monster(270, 1, 5240, 1840, 1815, 4960, 1250, 192675, 288750, 6720800, 11475, 176, 45958126, 6);
					case 5:
						return new Monster(275, 2, 1325, 1345, 5420, 4980, 1935, 456663, 685266, 2748960, 2337, 177, 50191950, -1);
					case 6:
						return new Monster(280, 3, 1370, 5440, 1360, 5160, 1975, 259420, 389130, 5799840, 5950, 178, 54764133, -4);
					case 7:
						return new Monster(285, 1, 5540, 1945, 1920, 5260, 1310, 214785, 322455, 7521800, 12112, 179, 59666036, 20);
					case 8:
						return new Monster(290, 3, 1420, 5640, 1410, 5360, 2045, 278545, 417535, 6239040, 6162, 180, 64942539, 29);
					case 9:
						return new Monster(295, 2, 1425, 1445, 5820, 5380, 2075, 525866, 789382, 3184960, 2507, 181, 70595045, 6);
					case 10:
						return new Monster(300, 1, 5840, 2050, 2025, 5560, 1370, 238680, 358020, 8367800, 12750, 182, 76669139, -1);
				}
			case 12:
				switch ($stage) {
					case 1:
						return new Monster(305, 2, 1475, 1495, 6020, 5580, 2145, 562599, 843597, 3414960, 2592, 183, 83158305, -1);
					case 2:
						return new Monster(310, 2, 1500, 1520, 6120, 5680, 2180, 581124, 871686, 3532960, 2635, 184, 90125436, -1);
					case 3:
						return new Monster(315, 1, 6140, 2155, 2130, 5860, 1430, 263220, 394830, 9258800, 13387, 185, 97556858, -1);
					case 4:
						return new Monster(320, 3, 1570, 6240, 1560, 5960, 2255, 340000, 510000, 7652640, 6800, 186, 105514978, -5);
					case 5:
						return new Monster(325, 2, 1575, 1595, 6420, 5980, 2285, 639142, 958713, 3898960, 2762, 187, 113997992, -1);
					case 6:
						return new Monster(330, 1, 6440, 2260, 2235, 6160, 1490, 288960, 434085, 10194800, 14025, 188, 123067419, 30);
					case 7:
						return new Monster(335, 3, 1645, 6540, 1635, 6260, 2360, 372695, 559370, 8413440, 7118, 189, 132712488, -1);
					case 8:
						return new Monster(340, 1, 6640, 2330, 2305, 6360, 1530, 307230, 460845, 10843800, 14450, 190, 143018630, -5);
					case 9:
						return new Monster(345, 1, 6740, 2365, 2340, 6460, 1150, 316575, 474525, 11175800, 14662, 191, 153964246, 53);
					case 10:
						return new Monster(350, 1, 6840, 2400, 2375, 6560, 1570, 326060, 489090, 11512800, 14875, 192, 165631756, 51);
				}
			case 13:
				switch ($stage) {
					case 1:
						return new Monster(355, 1, 7570, 2655, 2630, 7290, 1716, 365356, 548792, 12976200, 15087, 243, 178017293, -1);
					case 2:
						return new Monster(360, 2, 1970, 1990, 8000, 7560, 2838, 881901, 1323252, 5458320, 3060, 244, 191202824, 1003);
					case 3:
						return new Monster(365, 1, 8290, 2908, 2882, 8010, 1860, 411680, 617520, 14658300, 15512, 245, 205171015, -1);
					case 4:
						return new Monster(370, 2, 2160, 2180, 8760, 8320, 3104, 992764, 1489146, 6173440, 3145, 246, 220033230, 1008);
					case 5:
						return new Monster(375, 1, 9340, 3275, 3250, 9060, 2070, 476850, 715275, 17032800, 15937, 247, 235758967, 0);
					case 6:
						return new Monster(380, 3, 2682, 10690, 2672, 10410, 3812, 691220, 1036830, 15864840, 8075, 248, 252458197, 2056);
					case 7:
						return new Monster(385, 2, 2888, 2908, 11670, 11230, 4122, 1375904, 2063856, 8669560, 3272, 249, 270120546, 1056);
					case 8:
						return new Monster(390, 1, 12540, 4395, 4370, 12260, 2710, 665150, 997725, 23968300, 16575, 250, 288853442, 55);
					case 9:
						return new Monster(395, 1, 13540, 4724, 4720, 13260, 2910, 727635, 1090775, 26254800, 16787, 251, 308630400, 11);
					case 10:
						return new Monster(400, 1, 16840, 5900, 5875, 16540, 3570, 916640, 1374960, 33162700, 17000, 252, 329599075, 22);
				}
			case 14:
				switch($stage){
					// ($lvl, $class, $str, $agi, $int, $wit, $luck, $dmg_min, $dmg_max, $hp, $armor, $id, $exp, $weapon_id, $shield_id = 0)
					case 1:
						return new Monster(310, 1, 6400, 2120, 2095, 5760, 1410, 2000000, 2500000, 8956800, 1, 600, 457813975, 0);
					case 2:
						return new Monster(320, 1, 6240, 2190, 2165, 5960, 1450, 2100000, 2600000, 9565800, 1, 601, 535810100, 0);
					case 3:
						return new Monster(330, 2, 3200, 3240, 13040, 12160, 4640, 4000000, 4500000, 8049920, 1, 602, 624697260, 0);
					case 4:
						return new Monster(340, 1, 13280, 4660, 4610, 12720, 3060, 2200000, 2700000, 21687600, 1, 603, 725704305, 0);
					case 5:
						return new Monster(350, 1, 13680, 4800, 4750, 13120, 3140, 2300000, 2800000, 23025600, 1, 604, 856843923, 0);
					case 6:
						return new Monster(360, 2, 5910, 5970, 24000, 22680, 8514, 4100000, 4600000, 16374960, 1, 605, 1079507006, 0);
					case 7:
						return new Monster(370, 3, 6540, 26040, 6510, 25200, 9327, 3000000, 4000000, 37396800, 1, 606, 1315913016, 0);
					case 8:
						return new Monster(380, 1, 32070, 11244, 11166, 31230, 7020, 2400000, 2900000, 59493152, 1, 607, 1604090624, 0);
					case 9:
						return new Monster(390, 1, 50160, 17580, 17480, 49040, 10840, 2500000, 3000000, 95873200, 1, 608, 1955377520, 0);
					case 10:
						return new Monster(400, 2, 16800, 16800, 67680, 65920, 23840, 4300000, 4800000, 52867840, 1, 609, 2383594286, 0);
					case 11:
						return new Monster(410, 1, 64000, 21200, 20950, 57600, 14100, 2600000, 3100000, 89568000, 1, 610, 2905588134, 0);
					case 12:
						return new Monster(420, 1, 62400, 21900, 21650, 59600, 14500, 2700000, 3200000, 95658000, 1, 611, 3541895722, 0);
					case 13:
						return new Monster(430, 2, 32000, 32400, 130400, 121600, 46400, 4300000, 4800000, 26833067, 1, 612, 4317551121, 0);
					case 14:
						return new Monster(440, 1, 132800, 46600, 46100, 127200, 30600, 2800000, 3300000, 216876000, 1, 613, 5263070725, 0);
					case 15:
						return new Monster(450, 1, 136800, 48000, 47500, 131200, 31400, 2900000, 3400000, 230256000, 1, 614, 6415653845, 0);
					case 16:
						return new Monster(460, 2, 59100, 59700, 240000, 226800, 85140, 4800000, 5200000, 54583200, 1, 615, 7820646238, 0);
					case 17:
						return new Monster(470, 3, 65400, 260400, 65100, 252000, 93270, 4300000, 4800000, 186984000, 1, 616, 9533324125, 0);
					case 18:
						return new Monster(480, 1, 320700, 112440, 111660, 312300, 70200, 3000000, 3500000, 594931520, 1, 617, 11621068912, 0);
					case 19:
						return new Monster(490, 1, 501600, 175800, 174480, 490400, 108400, 3100000, 3600000, 958732000, 1, 618, 14166018158, 0);
					case 20:
						return new Monster(500, 2, 168000, 168000, 676800, 659200, 238400, 6000000, 7000000, 176226133, 1, 619, 17268297088, 0);
				}
			case 15:
				switch($stage){
					// Twister monsters - minified for space :D
					case 1:return new Monster(100, 1, 1840, 610, 585, 2179, 490, 32005, 53095, 1100395, 1, 493, 10000, 50, 0);case 2:return new Monster(105, 2, 480, 500, 2040, 1680, 715, 106395, 130585, 356160, 1, 813, 10000, 1050, 0);case 3:return new Monster(110, 3, 520, 2040, 510, 1848, 750, 55145, 80565, 820512, 1, 899, 10000, 2050, 0);case 4:return new Monster(115, 3, 550, 2160, 540, 1974, 795, 60977, 89187, 915936, 1, 565, 10000, 2050, 0);case 5:return new Monster(120, 2, 550, 570, 2320, 1974, 820, 138169, 169857, 477708, 1, 489, 10000, 1050, 0);case 6:return new Monster(125, 3, 600, 2360, 590, 2184, 870, 72522, 105702, 1100736, 1, 210, 10000, 2050, 0);case 7:return new Monster(130, 3, 620, 2440, 610, 2268, 900, 77910, 113680, 1188432, 1, 589, 10000, 2050, 0);case 8:return new Monster(135, 3, 650, 2560, 640, 2394, 945, 84810, 123874, 1302336, 1, 45, 10000, 2050, 0);case 9:return new Monster(140, 2, 650, 670, 2720, 2394, 970, 188916, 232050, 675108, 1, 455, 10000, 1050, 0);case 10:return new Monster(145, 3, 700, 2760, 690, 2604, 1020, 98335, 143209, 1520736, 1, 860, 10000, 2050, 0);case 11:return new Monster(150, 2, 700, 720, 2920, 2604, 1045, 217406, 266630, 786408, 1, 533, 10000, 1050, 0);case 12:return new Monster(152, 2, 710, 730, 2960, 2646, 1060, 223344, 273834, 809676, 1, 800, 10000, 1050, 0);case 13:return new Monster(154, 1, 2920, 1015, 990, 3687, 760, 78817, 129213, 2857425, 1, 2, 10000, 50, 0);case 14:return new Monster(156, 1, 2960, 1030, 1005, 3742, 770, 80784, 132462, 2937470, 1, 6, 10000, 50, 0);case 15:return new Monster(158, 1, 3000, 1045, 1020, 3799, 780, 83076, 136052, 3020205, 1, 186, 10000, 50, 0);case 16:return new Monster(160, 2, 750, 770, 3120, 2814, 1120, 247583, 303923, 906108, 1, 540, 10000, 1050, 0);case 17:return new Monster(162, 1, 3080, 1075, 1050, 3910, 800, 87138, 143376, 3186650, 1, 180, 10000, 50, 0);case 18:return new Monster(164, 2, 770, 790, 3200, 2898, 1150, 260331, 319395, 956340, 1, 510, 10000, 1050, 0);case 19:return new Monster(166, 1, 3160, 1105, 1080, 4022, 820, 91613, 150575, 3358370, 1, 250, 10000, 50, 0);case 20:return new Monster(168, 1, 3200, 1120, 1095, 4078, 830, 94053, 154401, 3445910, 1, 562, 10000, 50, 0);case 21:return new Monster(170, 2, 800, 820, 3320, 3024, 1195, 280053, 343323, 1034208, 1, 451, 10000, 1050, 0);case 22:return new Monster(172, 2, 810, 830, 3360, 3066, 1210, 286787, 351491, 1060836, 1, 847, 10000, 1050, 0);case 23:return new Monster(174, 2, 820, 840, 3400, 3108, 1225, 293601, 359755, 1087800, 1, 407, 10000, 1050, 0);case 24:return new Monster(176, 2, 830, 850, 2440, 3150, 1240, 213395, 261415, 1115100, 1, 522, 10000, 1050, 0);case 25:return new Monster(178, 3, 860, 3400, 850, 3276, 1260, 148676, 216194, 2345616, 1, 84, 10000, 2050, 0);case 26:return new Monster(180, 3, 870, 3440, 860, 3318, 1275, 151800, 221490, 2402232, 1, 538, 10000, 2050, 0);case 27:return new Monster(182, 2, 875, 895, 3620, 3339, 1305, 326700, 400752, 1222074, 1, 53, 10000, 1050, 0);case 28:return new Monster(184, 2, 875, 895, 3620, 3339, 1305, 330330, 405108, 1235430, 1, 887, 10000, 1050, 0);case 29:return new Monster(186, 2, 900, 920, 3720, 3444, 1340, 343160, 420744, 1288056, 1, 510, 10000, 1050, 0);case 30:return new Monster(188, 1, 3640, 1280, 1255, 4692, 930, 119720, 196370, 4433940, 1, 860, 10000, 50, 0);case 31:return new Monster(190, 1, 3640, 1280, 1255, 4692, 930, 120815, 198195, 4480860, 1, 801, 10000, 50, 0);case 32:return new Monster(192, 1, 3740, 1315, 1290, 4832, 950, 125625, 205875, 4662880, 1, 101, 10000, 50, 0);case 33:return new Monster(194, 2, 925, 945, 3820, 3549, 1375, 367680, 450408, 1384110, 1, 475, 10000, 1050, 0);case 34:return new Monster(196, 2, 950, 970, 3920, 3654, 1410, 381210, 466884, 1439676, 1, 61, 10000, 1050, 0);case 35:return new Monster(198, 2, 950, 970, 3920, 3654, 1410, 385140, 471600, 1454292, 1, 46, 10000, 1050, 0);case 36:return new Monster(200, 2, 950, 970, 3920, 3654, 1410, 388677, 476709, 1468908, 1, 17, 10000, 1050, 0);case 37:return new Monster(201, 3, 995, 3940, 985, 3843, 1450, 194340, 282820, 3105144, 1, 49, 10000, 2050, 0);case 38:return new Monster(202, 3, 995, 3940, 985, 3843, 1450, 195130, 284400, 3120516, 1, 569, 10000, 2050, 0);case 39:return new Monster(203, 2, 975, 995, 4020, 3759, 1445, 404612, 495690, 1533672, 1, 883, 10000, 1050, 0);case 40:return new Monster(204, 3, 995, 3940, 985, 3843, 1450, 197105, 287165, 3151260, 1, 425, 10000, 2050, 0);case 41:return new Monster(205, 3, 995, 3940, 985, 3843, 1450, 198290, 288350, 3166632, 1, 510, 10000, 2050, 0);case 42:return new Monster(206, 1, 4040, 1420, 1395, 5251, 1010, 145395, 238545, 5434785, 1, 29, 10000, 50, 0);case 43:return new Monster(207, 1, 4040, 1420, 1395, 5251, 1010, 146610, 239760, 5461040, 1, 518, 10000, 50, 0);case 44:return new Monster(208, 2, 1000, 1020, 4120, 3864, 1480, 424977, 520793, 1615152, 1, 544, 10000, 1050, 0);case 45:return new Monster(209, 3, 1020, 4040, 1010, 3948, 1485, 207360, 301320, 3316320, 1, 491, 10000, 2050, 0);case 46:return new Monster(210, 2, 1000, 1020, 4120, 3864, 1480, 429107, 525749, 1630608, 1, 225, 10000, 1050, 0);case 47:return new Monster(211, 3, 1045, 4140, 1035, 4053, 1520, 214140, 312080, 3436944, 1, 472, 10000, 2050, 0);case 48:return new Monster(212, 2, 1025, 1045, 4220, 3969, 1515, 443727, 543555, 1690794, 1, 505, 10000, 1050, 0);case 49:return new Monster(213, 1, 4140, 1455, 1430, 5391, 1030, 153965, 252735, 5768370, 1, 505, 10000, 50, 0);case 50:return new Monster(214, 1, 4140, 1455, 1430, 5391, 1030, 155210, 253980, 5795325, 1, 894, 10000, 50, 0);case 51:return new Monster(215, 3, 1045, 4140, 1035, 4053, 1520, 218290, 317890, 3501792, 1, 555, 10000, 2050, 0);case 52:return new Monster(216, 3, 1070, 4240, 1060, 4158, 1555, 224825, 326825, 3609144, 1, 198, 10000, 2050, 0);case 53:return new Monster(217, 2, 1050, 1070, 4320, 4074, 1550, 464609, 569395, 1776264, 1, 811, 10000, 1050, 0);case 54:return new Monster(218, 1, 4240, 1490, 1465, 5530, 1050, 161925, 264775, 6055350, 1, 840, 10000, 50, 0);case 55:return new Monster(219, 2, 1050, 1070, 4320, 4074, 1550, 468939, 574591, 1792560, 1, 202, 10000, 1050, 0);case 56:return new Monster(220, 1, 4240, 1490, 1465, 5530, 1050, 162775, 267325, 6110650, 1, 139, 10000, 50, 0);case 57:return new Monster(221, 1, 4340, 1525, 1500, 5670, 1070, 167910, 274920, 6293700, 1, 73, 10000, 50, 0);case 58:return new Monster(222, 2, 1075, 1095, 4420, 4179, 1585, 486414, 596278, 1863834, 1, 840, 10000, 1050, 0);case 59:return new Monster(223, 3, 1095, 4340, 1085, 4263, 1590, 237510, 345390, 3819648, 1, 542, 10000, 2050, 0);case 60:return new Monster(224, 3, 1095, 4340, 1085, 4263, 1590, 238380, 347130, 3836700, 1, 213, 10000, 2050, 0);case 61:return new Monster(225, 2, 1075, 1095, 4420, 4179, 1585, 493059, 603809, 1888908, 1, 518, 10000, 1050, 0);case 62:return new Monster(226, 3, 1120, 4440, 1110, 4368, 1625, 246085, 358225, 3966144, 1, 13, 10000, 2050, 0);case 63:return new Monster(227, 2, 1100, 1120, 4520, 4284, 1620, 508719, 622875, 1953504, 1, 861, 10000, 1050, 0);case 64:return new Monster(228, 1, 4440, 1560, 1535, 5810, 1090, 177110, 290140, 6652450, 1, 29, 10000, 50, 0);case 65:return new Monster(229, 1, 4440, 1560, 1535, 5810, 1090, 178000, 291030, 6681500, 1, 812, 10000, 50, 0);case 66:return new Monster(230, 2, 1100, 1120, 4520, 4284, 1620, 515514, 631482, 1979208, 1, 94, 10000, 1050, 0);case 67:return new Monster(231, 2, 1125, 1145, 4620, 4389, 1655, 528746, 648200, 2036496, 1, 477, 10000, 1050, 0);case 68:return new Monster(232, 2, 1125, 1145, 4620, 4389, 1655, 531524, 650978, 2045274, 1, 492, 10000, 1050, 0);case 69:return new Monster(233, 1, 4540, 1595, 1570, 5949, 1110, 184730, 303030, 6960330, 1, 470, 10000, 50, 0);case 70:return new Monster(234, 2, 1125, 1145, 4620, 4389, 1655, 536154, 656534, 2062830, 1, 801, 10000, 1050, 0);case 71:return new Monster(235, 1, 4540, 1595, 1570, 5949, 1110, 186550, 305760, 7019820, 1, 155, 10000, 50, 0);case 72:return new Monster(236, 1, 4640, 1630, 1605, 6089, 1130, 191580, 313410, 7215465, 1, 548, 10000, 50, 0);case 73:return new Monster(237, 3, 1170, 4640, 1160, 4578, 1695, 269700, 392460, 4358256, 1, 857, 10000, 2050, 0);case 74:return new Monster(238, 3, 1170, 4640, 1160, 4578, 1695, 271095, 393855, 4376568, 1, 458, 10000, 2050, 0);case 75:return new Monster(239, 3, 1170, 4640, 1160, 4578, 1695, 272025, 395715, 4394880, 1, 143, 10000, 2050, 0);case 76:return new Monster(240, 1, 4640, 1630, 1605, 6089, 1130, 194835, 319455, 7337245, 1, 53, 10000, 50, 0);case 77:return new Monster(241, 2, 1175, 1195, 4820, 4599, 1725, 575736, 705180, 2225916, 1, 479, 10000, 1050, 0);case 78:return new Monster(242, 1, 4740, 1665, 1640, 6229, 1150, 200450, 328700, 7568235, 1, 204, 10000, 50, 0);case 79:return new Monster(243, 3, 1195, 4740, 1185, 4683, 1730, 282625, 410875, 4570608, 1, 498, 10000, 2050, 0);case 80:return new Monster(244, 2, 1175, 1195, 4820, 4599, 1725, 582981, 714357, 2253510, 1, 540, 10000, 1050, 0);case 81:return new Monster(245, 3, 1195, 4740, 1185, 4683, 1730, 285000, 414200, 4608072, 1, 241, 10000, 2050, 0);case 82:return new Monster(246, 2, 1200, 1220, 4920, 4704, 1760, 599981, 735063, 2323776, 1, 165, 10000, 1050, 0);case 83:return new Monster(247, 1, 4840, 1700, 1675, 6368, 1170, 209520, 342410, 7896320, 1, 223, 10000, 50, 0);case 84:return new Monster(248, 2, 1200, 1220, 4920, 4704, 1760, 604911, 740979, 2342592, 1, 148, 10000, 1050, 0);case 85:return new Monster(249, 2, 1200, 1220, 4920, 4704, 1760, 607376, 743444, 2352000, 1, 899, 10000, 1050, 0);case 86:return new Monster(250, 2, 1200, 1220, 4920, 4704, 1760, 609841, 746895, 2361408, 1, 816, 10000, 1050, 0);case 87:return new Monster(251, 3, 1220, 4840, 1210, 4788, 1765, 297790, 433590, 4807152, 1, 414, 10000, 2050, 0);case 88:return new Monster(251, 1, 4860, 1707, 1682, 6396, 1174, 213306, 349666, 8058960, 1, 863, 10000, 50, 0);case 89:return new Monster(252, 1, 4880, 1714, 1689, 6424, 1178, 215160, 352080, 8126360, 1, 421, 10000, 50, 0);case 90:return new Monster(252, 2, 1210, 1230, 4960, 4746, 1774, 619759, 758919, 2401476, 1, 890, 10000, 1050, 0);case 91:return new Monster(252, 1, 4880, 1714, 1689, 6424, 1178, 215160, 352080, 8126360, 1, 203, 10000, 50, 0);case 92:return new Monster(253, 2, 1215, 1235, 4980, 4767, 1781, 624249, 764967, 2421636, 1, 831, 10000, 1050, 0);case 93:return new Monster(254, 1, 4920, 1728, 1703, 6480, 1186, 218892, 357918, 8262000, 1, 99, 10000, 50, 0);case 94:return new Monster(254, 1, 4920, 1728, 1703, 6480, 1186, 218892, 357918, 8262000, 1, 234, 10000, 50, 0);case 95:return new Monster(254, 3, 1240, 4920, 1230, 4872, 1793, 306646, 445672, 4969440, 1, 425, 10000, 2050, 0);case 96:return new Monster(255, 1, 4940, 1735, 1710, 6508, 1190, 220275, 360855, 8330240, 1, 599, 10000, 50, 0);case 97:return new Monster(256, 2, 1230, 1250, 5040, 4830, 1802, 639835, 783255, 2482620, 1, 214, 10000, 1050, 0);case 98:return new Monster(256, 3, 1250, 4960, 1240, 4914, 1807, 311619, 452767, 5051592, 1, 434, 10000, 2050, 0);case 99:return new Monster(256, 1, 4960, 1742, 1717, 6535, 1194, 222159, 363307, 8397475, 1, 124, 10000, 50, 0);case 100:return new Monster(257, 2, 1235, 1255, 5060, 4851, 1809, 644397, 789399, 2503116, 1, 853, 10000, 1050, 0);case 101:return new Monster(258, 3, 1273, 5050, 1263, 5005, 1839, 319792, 464508, 5185180, 1, 891, 10000, 2050, 0);case 102:return new Monster(258, 1, 5100, 1791, 1766, 6724, 1226, 230461, 376607, 8707580, 1, 505, 10000, 50, 0);case 103:return new Monster(258, 2, 1277, 1298, 5232, 5018, 1870, 669403.4, 819324.6, 2599324, 1, 489, 10000, 1050, 0);case 104:return new Monster(259, 2, 1295, 1316, 5304, 5088, 1896, 680723.4, 833766.6, 2645760, 1, 523, 10000, 1050, 0);case 105:return new Monster(260, 3, 1334, 5292, 1323, 5248, 1927, 337207.2, 490965.2, 5478912, 1, 448, 10000, 2050, 0);case 106:return new Monster(260, 2, 1325, 1346, 5427, 5209, 1940, 699198.2, 856871.2, 2719098, 1, 598, 10000, 1050, 0);case 107:return new Monster(260, 2, 1338, 1359, 5478, 5258, 1958, 705756.8, 864908.8, 2744676, 1, 251, 10000, 1050, 0);case 108:return new Monster(261, 2, 1355, 1377, 5551, 5330, 1984, 717925.1, 879194.1, 2792920, 1, 62, 10000, 1050, 0);case 109:return new Monster(262, 1, 5537, 1945, 1917, 7307, 1328, 253497.9, 415470.3, 9608705, 1, 125, 10000, 50, 0);case 110:return new Monster(262, 2, 1386, 1408, 5676, 5452, 2028, 736905.6, 902936.8, 2867752, 1, 519, 10000, 1050, 0);case 111:return new Monster(262, 3, 1421, 5639, 1410, 5594, 2052, 362100.9, 527051.7, 5884888, 1, 548, 10000, 2050, 0);case 112:return new Monster(263, 3, 1439, 5712, 1428, 5668, 2079, 368496.8, 535579.2, 5985408, 1, 416, 10000, 2050, 0);case 113:return new Monster(264, 3, 1458, 5786, 1446, 5742, 2105, 374421.6, 544824, 6086520, 1, 862, 10000, 2050, 0);case 114:return new Monster(264, 1, 5837, 2050, 2021, 7705, 1398, 269546.7, 441448.5, 10209125, 1, 204, 10000, 50, 0);case 115:return new Monster(264, 1, 5888, 2068, 2039, 7773, 1410, 271897.8, 445299, 10299225, 1, 488, 10000, 50, 0);case 116:return new Monster(265, 1, 5962, 2094, 2065, 7873, 1427, 276503.6, 452080.4, 10471090, 1, 114, 10000, 50, 0);case 117:return new Monster(266, 2, 1498, 1521, 6131, 5897, 2190, 808155.6, 989929.2, 3148998, 1, 836, 10000, 1050, 0);case 118:return new Monster(266, 1, 6089, 2138, 2109, 8041, 1456, 282993.6, 463524, 10734735, 1, 588, 10000, 50, 0);case 119:return new Monster(266, 2, 1523, 1547, 6236, 5998, 2228, 821973.6, 1006855.2, 3202932, 1, 229, 10000, 1050, 0);case 120:return new Monster(267, 3, 1566, 6216, 1554, 6174, 2261, 407180.4, 591470, 6618528, 1, 24, 10000, 2050, 0);case 121:return new Monster(268, 1, 6292, 2209, 2176, 8314, 1503, 294933.6, 482733.2, 11182330, 1, 28, 10000, 50, 0);case 122:return new Monster(268, 3, 1598, 6344, 1586, 6302, 2307, 416822.4, 606171.6, 6780952, 1, 559, 10000, 2050, 0);case 123:return new Monster(268, 3, 1611, 6396, 1599, 6355, 2326, 420233.6, 611132.4, 6837980, 1, 848, 10000, 2050, 0);case 124:return new Monster(269, 2, 1606, 1631, 6572, 6327, 2347, 876064.2, 1072207.8, 3416580, 1, 119, 10000, 1050, 0);case 125:return new Monster(270, 1, 6550, 2300, 2269, 8658, 1562, 309632, 506432, 11731590, 1, 494, 10000, 50, 0);case 126:return new Monster(270, 3, 1663, 6602, 1651, 6563, 2400, 437053.2, 635413.2, 7114292, 1, 597, 10000, 2050, 0);case 127:return new Monster(270, 1, 6655, 2337, 2305, 8797, 1588, 314588, 514538, 11919935, 1, 806, 10000, 50, 0);case 128:return new Monster(271, 2, 1670, 1696, 6835, 6586, 2441, 917230, 1123949, 3582784, 1, 852, 10000, 1050, 0);case 129:return new Monster(272, 2, 1690, 1716, 6914, 6664, 2469, 931970.4, 1141075.2, 3638544, 1, 897, 10000, 1050, 0);case 130:return new Monster(272, 1, 6864, 2410, 2378, 9077, 1635, 326515, 534109.8, 12390105, 1, 212, 10000, 50, 0);case 131:return new Monster(272, 2, 1716, 1742, 7022, 6767, 2507, 946507.2, 1158873.6, 3694782, 1, 17, 10000, 1050, 0);case 132:return new Monster(273, 1, 6996, 2457, 2424, 9255, 1666, 333485.6, 546468, 12679350, 1, 197, 10000, 50, 0);case 133:return new Monster(274, 2, 1756, 1782, 7182, 6927, 2564, 975235.2, 1193872, 3809850, 1, 881, 10000, 1050, 0);case 134:return new Monster(274, 3, 1796, 7129, 1782, 7092, 2590, 479026.9, 696052.5, 7801200, 1, 874, 10000, 2050, 0);case 135:return new Monster(274, 3, 1809, 7182, 1796, 7144, 2610, 482583.2, 701220, 7858400, 1, 542, 10000, 2050, 0);case 136:return new Monster(275, 2, 1802, 1829, 7371, 7112, 2632, 1003816, 1229674.6, 3925824, 1, 196, 10000, 1050, 0);case 137:return new Monster(276, 1, 7343, 2578, 2544, 9719, 1745, 354414.6, 579416.4, 13460815, 1, 579, 10000, 50, 0);case 138:return new Monster(276, 1, 7397, 2597, 2563, 9789, 1758, 357017.4, 583671.6, 13557765, 1, 548, 10000, 50, 0);case 139:return new Monster(276, 2, 1849, 1876, 7562, 7298, 2699, 1034335.2, 1266038.4, 4043092, 1, 860, 10000, 1050, 0);case 140:return new Monster(277, 3, 1897, 7532, 1883, 7497, 2736, 511347.6, 743641.2, 8336664, 1, 570, 10000, 2050, 0);case 141:return new Monster(278, 2, 1889, 1918, 7727, 7461, 2758, 1064611.2, 1302910.8, 4163238, 1, 248, 10000, 1050, 0);case 142:return new Monster(278, 1, 7668, 2692, 2657, 10154, 1820, 373150.8, 609633.2, 14164830, 1, 524, 10000, 50, 0);case 143:return new Monster(278, 1, 7722, 2711, 2676, 10225, 1833, 375775.2, 613920.8, 14263875, 1, 873, 10000, 50, 0);case 144:return new Monster(279, 2, 1937, 1966, 7920, 7650, 2827, 1094340, 1340170, 4284000, 1, 196, 10000, 1050, 0);case 145:return new Monster(280, 2, 1957, 1986, 8004, 7734, 2856, 1109939, 1359975.8, 4346508, 1, 514, 10000, 1050, 0);case 146:return new Monster(280, 3, 2000, 7942, 1986, 7911, 2883, 544712, 792814.4, 8891964, 1, 59, 10000, 2050, 0);case 147:return new Monster(280, 3, 2014, 7997, 1999, 7964, 2903, 548479.5, 798297.9, 8951536, 1, 415, 10000, 2050, 0);case 148:return new Monster(281, 2, 2005, 2035, 8199, 7925, 2926, 1141051, 1397171.8, 4469700, 1, 148, 10000, 1050, 0);case 149:return new Monster(282, 3, 2056, 8165, 2041, 8135, 2964, 564075, 820770, 9208820, 1, 105, 10000, 2050, 0);case 150:return new Monster(282, 2, 2040, 2070, 8340, 8064, 2976, 1164825, 1427015, 4564224, 1, 475, 10000, 1050, 0);case 151:return new Monster(282, 3, 2084, 8275, 2069, 8245, 3003, 571665, 831814, 9333340, 1, 170, 10000, 2050, 0);case 152:return new Monster(283, 2, 2075, 2105, 8482, 8204, 3026, 1188880, 1455528.8, 4659872, 1, 845, 10000, 1050, 0);case 153:return new Monster(284, 3, 2127, 8446, 2111, 8418, 3065, 587692, 854901.6, 9596520, 1, 233, 10000, 2050, 0);case 154:return new Monster(284, 2, 2110, 2141, 8624, 8343, 3077, 1213077, 1485911.4, 4755510, 1, 200, 10000, 1050, 0);case 155:return new Monster(284, 3, 2155, 8556, 2139, 8528, 3105, 595337, 866022.6, 9721920, 1, 551, 10000, 2050, 0);case 156:return new Monster(285, 2, 2145, 2176, 8767, 8485, 3128, 1237557, 1514910.2, 4853420, 1, 847, 10000, 1050, 0);case 157:return new Monster(286, 1, 8729, 3065, 3025, 11576, 2063, 436076.1, 713976.3, 16611560, 1, 41, 10000, 50, 0);case 158:return new Monster(286, 1, 8785, 3084, 3045, 11650, 2076, 438870.5, 718551.5, 16717750, 1, 402, 10000, 50, 0);case 159:return new Monster(286, 1, 8840, 3104, 3064, 11723, 2089, 441615, 723045, 16822504, 1, 31, 10000, 50, 0);case 160:return new Monster(287, 2, 2216, 2248, 9056, 8770, 3230, 1287372, 1575670.8, 5051520, 1, 17, 10000, 1050, 0);case 161:return new Monster(288, 3, 2270, 9016, 2254, 8993, 3270, 636333, 925165, 10395908, 1, 829, 10000, 2050, 0);case 162:return new Monster(288, 2, 2252, 2284, 9202, 8913, 3282, 1312710, 1607494, 5151714, 1, 63, 10000, 1050, 0);case 163:return new Monster(288, 3, 2298, 9128, 2282, 9106, 3311, 644229, 936645, 10526536, 1, 864, 10000, 2050, 0);case 164:return new Monster(289, 3, 2321, 9217, 2304, 9196, 3342, 653271.6, 948535.6, 10667360, 1, 897, 10000, 2050, 0);case 165:return new Monster(290, 2, 2310, 2343, 9438, 9148, 3366, 1355788, 1660013.6, 5324136, 1, 481, 10000, 1050, 0);case 166:return new Monster(290, 1, 9362, 3287, 3245, 12426, 2208, 475160.4, 776938.8, 18079830, 1, 471, 10000, 50, 0);case 167:return new Monster(290, 2, 2338, 2371, 9552, 9259, 3407, 1372147, 1680043.4, 5388738, 1, 810, 10000, 1050, 0);case 168:return new Monster(291, 1, 9509, 3338, 3296, 12621, 2241, 483565.2, 791980.8, 18426660, 1, 516, 10000, 50, 0);case 169:return new Monster(292, 3, 2417, 9599, 2400, 9582, 3480, 687043.5, 998375.1, 11230104, 1, 431, 10000, 2050, 0);case 170:return new Monster(292, 1, 9656, 3390, 3347, 12819, 2275, 492966, 806144.4, 18779836, 1, 817, 10000, 50, 0);case 171:return new Monster(292, 1, 9713, 3410, 3367, 12895, 2288, 495873, 810898.2, 18891176, 1, 503, 10000, 50, 0);case 172:return new Monster(293, 1, 9804, 3442, 3399, 13019, 2308, 501495.4, 821431.8, 19137930, 1, 860, 10000, 50, 0);case 173:return new Monster(294, 1, 9896, 3474, 3431, 13143, 2329, 509168.4, 832104, 19385924, 1, 428, 10000, 50, 0);case 174:return new Monster(294, 3, 2506, 9953, 2488, 9939, 3607, 717336, 1042129.8, 11728020, 1, 409, 10000, 2050, 0);case 175:return new Monster(294, 3, 2520, 10010, 2502, 9996, 3628, 721440, 1048092, 11795280, 1, 538, 10000, 2050, 0);case 176:return new Monster(295, 3, 2543, 10102, 2526, 10091, 3661, 730086.4, 1061760, 11947744, 1, 199, 10000, 2050, 0);case 177:return new Monster(296, 3, 2567, 10195, 2549, 10185, 3694, 739862.5, 1074586.5, 12099780, 1, 529, 10000, 2050, 0);case 178:return new Monster(296, 2, 2545, 2581, 10395, 10093, 3706, 1524332.5, 1865616.5, 5995242, 1, 461, 10000, 1050, 0);case 179:return new Monster(296, 1, 10310, 3619, 3575, 13698, 2424, 533544, 872040, 20341530, 1, 581, 10000, 50, 0);case 180:return new Monster(297, 1, 10404, 3652, 3607, 13825, 2444, 540486.6, 884148.6, 20599250, 1, 513, 10000, 50, 0);case 181:return new Monster(298, 3, 2643, 10498, 2625, 10491, 3803, 767084, 1113848, 12547236, 1, 491, 10000, 2050, 0);case 182:return new Monster(298, 1, 10556, 3706, 3660, 14030, 2479, 550488.6, 899166.6, 20974850, 1, 534, 10000, 50, 0);case 183:return new Monster(298, 3, 2672, 10614, 2654, 10607, 3845, 775552, 1126144, 12685972, 1, 211, 10000, 2050, 0);case 184:return new Monster(299, 3, 2696, 10709, 2677, 10704, 3879, 784630.8, 1140501.6, 12844800, 1, 847, 10000, 2050, 0);case 185:return new Monster(300, 1, 10804, 3793, 3746, 14365, 2535, 566653.6, 927841.2, 21619324, 1, 581, 10000, 50, 0);case 186:return new Monster(300, 1, 10862, 3813, 3767, 14443, 2548, 569692.8, 932817.6, 21736716, 1, 17, 10000, 50, 0);case 187:return new Monster(300, 1, 10921, 3834, 3787, 14520, 2562, 572784.4, 937879.8, 21852600, 1, 160, 10000, 50, 0);case 188:return new Monster(301, 3, 2773, 11017, 2754, 11015, 3989, 812689.9, 1180991.7, 13306120, 1, 516, 10000, 2050, 0);case 189:return new Monster(301, 3, 2788, 11075, 2769, 11073, 4011, 816964.5, 1187203.5, 13376184, 1, 207, 10000, 2050, 0);case 190:return new Monster(301, 2, 2764, 2802, 11286, 10973, 4022, 1681974.4, 2059260.8, 6627692, 1, 510, 10000, 1050, 0);case 191:return new Monster(302, 1, 11231, 3942, 3894, 14937, 2632, 592400.7, 970098.3, 22629556, 1, 112, 10000, 50, 0);case 192:return new Monster(302, 1, 11290, 3963, 3915, 15015, 2646, 595510, 975190, 22747724, 1, 83, 10000, 50, 0);case 193:return new Monster(302, 2, 2818, 2856, 11503, 11187, 4099, 1720042.2, 2106879, 6779322, 1, 426, 10000, 1050, 0);case 194:return new Monster(303, 3, 2881, 11446, 2861, 11448, 4144, 850035.2, 1234956.8, 13920768, 1, 515, 10000, 2050, 0);case 195:return new Monster(303, 2, 2857, 2896, 11661, 11343, 4155, 1749482.9, 2141628.5, 6896544, 1, 852, 10000, 1050, 0);case 196:return new Monster(303, 1, 11564, 4059, 4010, 15384, 2709, 612264.6, 1001151, 23383680, 1, 834, 10000, 50, 0);case 197:return new Monster(304, 2, 2896, 2935, 11820, 11501, 4212, 1779232, 2179086, 7015610, 1, 460, 10000, 1050, 0);case 198:return new Monster(304, 1, 11722, 4114, 4065, 15595, 2744, 622969.2, 1019510.8, 23782376, 1, 806, 10000, 50, 0);case 199:return new Monster(304, 2, 2925, 2965, 11940, 11617, 4255, 1797280, 2201190, 7086370, 1, 166, 10000, 1050, 0);case 200:return new Monster(305, 1, 11880, 4170, 4120, 15809, 2780, 633737, 1035619, 24187770, 1, 182, 10000, 50, 0);case 201:return new Monster(305, 1, 11939, 4191, 4141, 15888, 2794, 636881.7, 1040757.9, 24308640, 1, 35, 10000, 50, 0);case 202:return new Monster(305, 2, 2980, 3020, 12160, 11836, 4333, 1836453, 2247799, 7243632, 1, 425, 10000, 1050, 0);case 203:return new Monster(306, 2, 3004, 3045, 12261, 11936, 4369, 1857829.4, 2275043.4, 7328704, 1, 38, 10000, 1050, 0);case 204:return new Monster(306, 1, 12158, 4268, 4217, 16181, 2844, 649771.2, 1063483.2, 24837836, 1, 436, 10000, 50, 0);case 205:return new Monster(306, 1, 12218, 4289, 4237, 16260, 2858, 652975.2, 1068727.2, 24959100, 1, 182, 10000, 50, 0);case 206:return new Monster(307, 1, 12319, 4324, 4272, 16398, 2880, 662067.3, 1081253.3, 25252920, 1, 885, 10000, 50, 0);case 207:return new Monster(307, 3, 3115, 12379, 3095, 12389, 4479, 931652.8, 1352878.8, 15263248, 1, 235, 10000, 2050, 0);case 208:return new Monster(307, 1, 12438, 4366, 4314, 16556, 2908, 668457.6, 1091689.6, 25496240, 1, 193, 10000, 50, 0);case 209:return new Monster(308, 1, 12540, 4402, 4349, 16696, 2930, 675190, 1104400, 25795320, 1, 416, 10000, 50, 0);case 210:return new Monster(308, 2, 3129, 3171, 12768, 12436, 4549, 1947367.2, 2384374.8, 7685448, 1, 199, 10000, 1050, 0);case 211:return new Monster(308, 3, 3186, 12660, 3165, 12672, 4581, 955318, 1388632, 15662592, 1, 825, 10000, 2050, 0);case 212:return new Monster(309, 2, 3169, 3212, 12932, 12599, 4607, 1978831.8, 2421448.2, 7811380, 1, 596, 10000, 1050, 0);case 213:return new Monster(309, 2, 3184, 3227, 12993, 12659, 4628, 1988158.7, 2432861.3, 7848580, 1, 146, 10000, 1050, 0);case 214:return new Monster(309, 3, 3242, 12883, 3221, 12898, 4661, 976000.1, 1416940.7, 15993520, 1, 163, 10000, 2050, 0);case 215:return new Monster(310, 3, 3268, 12986, 3246, 13003, 4698, 986396.4, 1433458.8, 16175732, 1, 482, 10000, 2050, 0);case 216:return new Monster(310, 2, 3240, 3283, 13219, 12882, 4709, 2029328.6, 2484406.2, 8012604, 1, 564, 10000, 1050, 0);case 217:return new Monster(310, 1, 13107, 4600, 4546, 17455, 3060, 710941.4, 1162166.2, 27142524, 1, 495, 10000, 50, 0);case 218:return new Monster(311, 1, 13211, 4637, 4582, 17596, 3083, 717900.3, 1175346.9, 27449760, 1, 881, 10000, 50, 0);case 219:return new Monster(311, 2, 3296, 3340, 13447, 13107, 4790, 2069686.6, 2535298.8, 8178768, 1, 502, 10000, 1050, 0);case 220:return new Monster(311, 1, 13332, 4679, 4624, 17757, 3111, 724470.6, 1186103.8, 27700920, 1, 442, 10000, 50, 0);case 221:return new Monster(312, 3, 3381, 13437, 3359, 13459, 4860, 1027350.8, 1492617, 16850668, 1, 472, 10000, 2050, 0);case 222:return new Monster(312, 2, 3352, 3397, 13675, 13333, 4871, 2112964, 2586465, 8346458, 1, 801, 10000, 1050, 0);case 223:return new Monster(312, 1, 13558, 4759, 4703, 18062, 3162, 739456, 1208908.8, 28267030, 1, 201, 10000, 50, 0);case 224:return new Monster(313, 2, 3394, 3438, 13843, 13501, 4930, 2144444.4, 2626528.8, 8478628, 1, 860, 10000, 1050, 0);case 225:return new Monster(313, 1, 13725, 4817, 4761, 18288, 3200, 749931, 1227909, 28712160, 1, 480, 10000, 50, 0);case 226:return new Monster(313, 1, 13786, 4839, 4782, 18370, 3214, 753261.6, 1233362.4, 28840900, 1, 193, 10000, 50, 0);case 227:return new Monster(314, 1, 13892, 4876, 4819, 18513, 3237, 763219.8, 1247009.4, 29157976, 1, 461, 10000, 50, 0);case 228:return new Monster(314, 1, 13954, 4897, 4840, 18594, 3251, 766623.6, 1252570.8, 29285550, 1, 415, 10000, 50, 0);case 229:return new Monster(314, 2, 3481, 3527, 14198, 13850, 5056, 2207923.2, 2702361.6, 8725500, 1, 542, 10000, 1050, 0);case 230:return new Monster(315, 1, 14122, 4956, 4899, 18822, 3289, 777260, 1271880, 29738760, 1, 533, 10000, 50, 0);case 231:return new Monster(315, 1, 14183, 4978, 4920, 18904, 3303, 780615, 1277370, 29868320, 1, 582, 10000, 50, 0);case 232:return new Monster(315, 3, 3584, 14245, 3561, 14275, 5150, 1099060.5, 1597985.5, 18043600, 1, 74, 10000, 2050, 0);case 233:return new Monster(316, 1, 14353, 5037, 4979, 19132, 3341, 792837.6, 1295542.6, 30324220, 1, 223, 10000, 50, 0);case 234:return new Monster(316, 2, 3580, 3627, 14602, 14251, 5199, 2285316.8, 2796736.8, 9035134, 1, 599, 10000, 1050, 0);case 235:return new Monster(316, 3, 3643, 14476, 3619, 14509, 5233, 1121216.4, 1628226.4, 18397412, 1, 599, 10000, 2050, 0);case 236:return new Monster(316, 1, 14538, 5102, 5043, 19378, 3384, 803049.6, 1312229.6, 30714130, 1, 548, 10000, 50, 0);case 237:return new Monster(317, 3, 3685, 14647, 3662, 14682, 5295, 1137383.2, 1653309.6, 18675504, 1, 888, 10000, 2050, 0);case 238:return new Monster(317, 1, 14708, 5162, 5103, 19610, 3422, 815377.2, 1333450.8, 31179900, 1, 202, 10000, 50, 0);case 239:return new Monster(317, 2, 3669, 3716, 14961, 14606, 5327, 2347452.8, 2874432, 9289416, 1, 247, 10000, 1050, 0);case 240:return new Monster(318, 3, 3744, 14880, 3720, 14918, 5378, 1159931, 1684059, 19035368, 1, 52, 10000, 2050, 0);case 241:return new Monster(318, 3, 3760, 14942, 3736, 14980, 5401, 1164760.8, 1691071.2, 19114480, 1, 212, 10000, 2050, 0);case 242:return new Monster(318, 3, 3775, 15004, 3751, 15042, 5423, 1169590.6, 1698083.4, 19193592, 1, 573, 10000, 2050, 0);case 243:return new Monster(319, 3, 3803, 15115, 3779, 15156, 5463, 1181262.5, 1716687.5, 19399680, 1, 829, 10000, 2050, 0);case 244:return new Monster(319, 2, 3770, 3819, 15372, 15013, 5473, 2427279.6, 2971802.4, 9608320, 1, 868, 10000, 1050, 0);case 245:return new Monster(319, 1, 15239, 5348, 5287, 20323, 3543, 849369.3, 1389183.9, 32516800, 1, 595, 10000, 50, 0);case 246:return new Monster(320, 1, 15350, 5387, 5326, 20475, 3567, 858624, 1405440, 32862376, 1, 554, 10000, 50, 0);case 247:return new Monster(320, 2, 3829, 3878, 15610, 15250, 5558, 2472646, 3028718, 9790500, 1, 513, 10000, 1050, 0);case 248:return new Monster(320, 3, 3894, 15475, 3869, 15520, 5592, 1212475.5, 1763741.5, 19927680, 1, 96, 10000, 2050, 0);case 249:return new Monster(321, 1, 15587, 5471, 5408, 20793, 3620, 874991.7, 1430244.9, 33476730, 1, 812, 10000, 50, 0);case 250:return new Monster(321, 2, 3888, 3938, 15850, 15488, 5642, 2518568, 3083184, 9974272, 1, 231, 10000, 1050, 0);case 251:return new Monster(321, 1, 15713, 5514, 5452, 20960, 3650, 882060.3, 1441799.1, 33745600, 1, 49, 10000, 50, 0);case 252:return new Monster(322, 3, 3982, 15826, 3956, 15876, 5718, 1247876.8, 1814805.6, 20511792, 1, 528, 10000, 2050, 0);case 253:return new Monster(322, 3, 3997, 15888, 3972, 15939, 5741, 1252762.4, 1821910.8, 20593188, 1, 836, 10000, 2050, 0);case 254:return new Monster(322, 3, 4013, 15951, 3988, 16002, 5763, 1257726.8, 1829130.6, 20674584, 1, 452, 10000, 2050, 0);case 255:return new Monster(323, 1, 16065, 5638, 5574, 21439, 3728, 906630, 1482115, 34731180, 1, 139, 10000, 50, 0);case 256:return new Monster(323, 3, 4058, 16128, 4032, 16182, 5827, 1276515.8, 1854256.2, 20971872, 1, 845, 10000, 2050, 0);case 257:return new Monster(323, 1, 16191, 5682, 5618, 21607, 3757, 913736.4, 1493732.2, 35003340, 1, 899, 10000, 50, 0);case 258:return new Monster(324, 3, 4102, 16306, 4076, 16362, 5890, 1293858.8, 1881234.8, 21270600, 1, 197, 10000, 2050, 0);case 259:return new Monster(324, 2, 4066, 4118, 16576, 16208, 5900, 2658735.8, 3255831.8, 10535200, 1, 25, 10000, 1050, 0);case 260:return new Monster(324, 1, 16432, 5767, 5702, 21930, 3812, 930617.2, 1522529.2, 35636248, 1, 800, 10000, 50, 0);case 261:return new Monster(325, 1, 16547, 5807, 5742, 22089, 3837, 940437.6, 1536489.6, 36005072, 1, 3, 10000, 50, 0);case 262:return new Monster(325, 1, 16611, 5830, 5764, 22173, 3851, 944072.8, 1542428.8, 36141992, 1, 94, 10000, 50, 0);case 263:return new Monster(325, 3, 4195, 16674, 4169, 16735, 6023, 1328046.4, 1928670.4, 21822440, 1, 212, 10000, 2050, 0);case 264:return new Monster(326, 1, 16790, 5892, 5826, 22414, 3891, 955920, 1564080, 36646888, 1, 864, 10000, 50, 0);case 265:return new Monster(326, 3, 4240, 16854, 4213, 16918, 6087, 1345747.2, 1956224, 22128744, 1, 472, 10000, 2050, 0);case 266:return new Monster(326, 1, 16918, 5937, 5871, 22584, 3921, 963203.2, 1575996.8, 36924840, 1, 879, 10000, 50, 0);case 267:return new Monster(327, 1, 17035, 5978, 5911, 22745, 3946, 974974, 1592003, 37301800, 1, 543, 10000, 50, 0);case 268:return new Monster(327, 1, 17098, 6001, 5934, 22830, 3961, 978577.6, 1597887.2, 37441200, 1, 438, 10000, 50, 0);case 269:return new Monster(327, 3, 4317, 17162, 4291, 17229, 6198, 1375477.2, 1997103.6, 22604448, 1, 837, 10000, 2050, 0);case 270:return new Monster(328, 1, 17280, 6064, 5997, 23077, 4001, 990717, 1620073, 37961664, 1, 899, 10000, 50, 0);case 271:return new Monster(328, 1, 17344, 6087, 6019, 23162, 4016, 994384.2, 1626069.8, 38101488, 1, 404, 10000, 50, 0);case 272:return new Monster(328, 1, 17408, 6109, 6041, 23248, 4031, 998051.4, 1632066.6, 38242960, 1, 594, 10000, 50, 0);case 273:return new Monster(329, 3, 4409, 17527, 4382, 17600, 6328, 1413482.2, 2051829, 23232000, 1, 43, 10000, 2050, 0);case 274:return new Monster(329, 3, 4425, 17591, 4398, 17665, 6351, 1418640.6, 2059317, 23317800, 1, 459, 10000, 2050, 0);case 275:return new Monster(329, 1, 17655, 6196, 6127, 23579, 4086, 1015737.5, 1658743.5, 38905352, 1, 14, 10000, 50, 0);case 276:return new Monster(330, 2, 4416, 4471, 17995, 17620, 6403, 2940216.5, 3599199.5, 11664440, 1, 599, 10000, 1050, 0);case 277:return new Monster(330, 2, 4432, 4487, 18060, 17684, 6426, 2950831, 3612193, 11706808, 1, 75, 10000, 1050, 0);case 278:return new Monster(330, 3, 4504, 17903, 4476, 17981, 6463, 1447370.4, 2102986.2, 23806844, 1, 138, 10000, 2050, 0);case 279:return new Monster(331, 3, 4534, 18023, 4506, 18104, 6506, 1460673, 2124287.4, 24042112, 1, 808, 10000, 2050, 0);case 280:return new Monster(331, 3, 4550, 18088, 4522, 18169, 6530, 1465938, 2131944.4, 24128432, 1, 168, 10000, 2050, 0);case 281:return new Monster(331, 1, 18153, 6370, 6300, 24250, 4198, 1049821.4, 1718219.8, 40255000, 1, 127, 10000, 50, 0);case 282:return new Monster(332, 1, 18274, 6413, 6342, 24417, 4224, 1060472, 1733323.2, 40654304, 1, 876, 10000, 50, 0);case 283:return new Monster(332, 2, 4556, 4613, 18565, 18186, 6605, 3051872.5, 3735432.5, 12111876, 1, 418, 10000, 1050, 0);case 284:return new Monster(332, 2, 4572, 4629, 18630, 18250, 6629, 3062552, 3748504, 12154500, 1, 821, 10000, 1050, 0);case 285:return new Monster(333, 2, 4603, 4660, 18753, 18374, 6672, 3090266.1, 3784497.1, 12273832, 1, 470, 10000, 1050, 0);case 286:return new Monster(333, 1, 18590, 6524, 6452, 24844, 4296, 1080660, 1768860, 41489480, 1, 834, 10000, 50, 0);case 287:return new Monster(333, 1, 18655, 6546, 6475, 24931, 4311, 1084436.5, 1775041.5, 41634768, 1, 526, 10000, 50, 0);case 288:return new Monster(334, 3, 4723, 18778, 4694, 18870, 6777, 1536858.4, 2232014.4, 25285800, 1, 543, 10000, 2050, 0);case 289:return new Monster(334, 1, 18843, 6612, 6540, 25183, 4352, 1101015.2, 1798576.2, 42181524, 1, 66, 10000, 50, 0);case 290:return new Monster(334, 1, 18908, 6635, 6563, 25270, 4367, 1104811.2, 1804777.2, 42327248, 1, 199, 10000, 50, 0);case 291:return new Monster(335, 2, 4729, 4787, 19264, 18883, 6853, 3193701.8, 3910694.6, 12689376, 1, 488, 10000, 1050, 0);case 292:return new Monster(335, 2, 4745, 4803, 19330, 18948, 6877, 3204638, 3924086, 12733056, 1, 171, 10000, 1050, 0);case 293:return new Monster(335, 2, 4761, 4820, 19397, 19012, 6900, 3215739.9, 3937680.3, 12776064, 1, 468, 10000, 1050, 0);case 294:return new Monster(336, 3, 4851, 19286, 4822, 19386, 6959, 1588060.8, 2305872, 26132328, 1, 841, 10000, 2050, 0);case 295:return new Monster(336, 2, 4809, 4868, 19588, 19205, 6968, 3259147.4, 3988193, 12944170, 1, 828, 10000, 1050, 0);case 296:return new Monster(336, 2, 4825, 4884, 19654, 19270, 6992, 3270123.2, 4001624, 12987980, 1, 580, 10000, 1050, 0);case 297:return new Monster(337, 1, 19543, 6858, 6783, 26130, 4508, 1151671.7, 1882953.9, 44159700, 1, 545, 10000, 50, 0);case 298:return new Monster(337, 3, 4932, 19608, 4902, 19713, 7075, 1618485, 2352198.2, 26651976, 1, 423, 10000, 2050, 0);case 299:return new Monster(337, 3, 4948, 19674, 4919, 19779, 7098, 1623930, 2360111.6, 26741208, 1, 229, 10000, 2050, 0);case 300:return new Monster(338, 1, 19800, 6948, 6873, 26479, 4566, 1170771, 1911665, 44881904, 1, 443, 10000, 50, 0);case 301:return new Monster(338, 3, 4997, 19866, 4966, 19974, 7167, 1645732.8, 2389095.2, 27084744, 1, 225, 10000, 2050, 0);case 302:return new Monster(338, 2, 4953, 5013, 20174, 19787, 7176, 3376783.2, 4131664.8, 13415586, 1, 225, 10000, 1050, 0);case 303:return new Monster(339, 1, 20059, 7039, 6963, 26826, 4624, 1188084.8, 1942679.2, 45604200, 1, 564, 10000, 50, 0);case 304:return new Monster(339, 3, 5062, 20125, 5031, 20238, 7260, 1671205, 2428281, 27523680, 1, 540, 10000, 2050, 0);case 305:return new Monster(339, 2, 5017, 5078, 20435, 20048, 7268, 3428626.5, 4197358.5, 13632640, 1, 121, 10000, 1050, 0);case 306:return new Monster(340, 2, 5049, 5110, 20563, 20178, 7313, 3460378.6, 4238038, 13761396, 1, 410, 10000, 1050, 0);case 307:return new Monster(340, 1, 20385, 7153, 7076, 27267, 4697, 1209423.5, 1980354.5, 46490236, 1, 486, 10000, 50, 0);case 308:return new Monster(340, 1, 20451, 7176, 7099, 27357, 4712, 1213337.3, 1986763.1, 46643684, 1, 852, 10000, 50, 0);case 309:return new Monster(341, 3, 5176, 20579, 5145, 20700, 7422, 1719181.5, 2497445.7, 28317600, 1, 530, 10000, 2050, 0);case 310:return new Monster(341, 1, 20646, 7245, 7167, 27619, 4755, 1231097.6, 2011894.4, 47228488, 1, 190, 10000, 50, 0);case 311:return new Monster(341, 3, 5209, 20713, 5178, 20834, 7470, 1730370.5, 2513699.9, 28500912, 1, 222, 10000, 2050, 0);case 312:return new Monster(341, 3, 5226, 20779, 5195, 20901, 7494, 1735881.5, 2521705.7, 28592568, 1, 98, 10000, 2050, 0);case 313:return new Monster(342, 1, 20908, 7337, 7258, 27975, 4814, 1248804.6, 2043688.6, 47977124, 1, 801, 10000, 50, 0);case 314:return new Monster(342, 1, 20975, 7360, 7282, 28064, 4829, 1252804.5, 2050234.5, 48129760, 1, 113, 10000, 50, 0);case 315:return new Monster(342, 3, 5292, 21042, 5260, 21168, 7588, 1762052.4, 2562028.4, 29042496, 1, 445, 10000, 2050, 0);case 316:return new Monster(342, 1, 21109, 7407, 7328, 28243, 4860, 1260804.3, 2063326.3, 48436744, 1, 451, 10000, 50, 0);case 317:return new Monster(343, 1, 21239, 7453, 7373, 28422, 4888, 1272815.1, 2080277.1, 48885840, 1, 452, 10000, 50, 0);case 318:return new Monster(343, 1, 21306, 7476, 7397, 28512, 4904, 1276828.4, 2086836.4, 49040640, 1, 427, 10000, 50, 0);case 319:return new Monster(343, 3, 5375, 21373, 5343, 21504, 7707, 1796172, 2608726, 29589504, 1, 421, 10000, 2050, 0);case 320:return new Monster(343, 2, 5328, 5392, 21696, 21302, 7715, 3683508.2, 4508336.2, 14655776, 1, 532, 10000, 1050, 0);case 321:return new Monster(344, 2, 5361, 5425, 21828, 21437, 7762, 3716827.6, 4551039.2, 14791530, 1, 468, 10000, 1050, 0);case 322:return new Monster(344, 3, 5442, 21638, 5410, 21774, 7802, 1822761.6, 2649715.2, 30048120, 1, 209, 10000, 2050, 0);case 323:return new Monster(344, 2, 5394, 5459, 21964, 21570, 7810, 3739974.8, 4579381.6, 14883300, 1, 508, 10000, 1050, 0);case 324:return new Monster(344, 3, 5476, 21773, 5443, 21909, 7851, 1834128.6, 2666239.2, 30234420, 1, 486, 10000, 2050, 0);case 325:return new Monster(345, 2, 5444, 5509, 22165, 21772, 7881, 3785272.5, 4632357.5, 15066224, 1, 191, 10000, 1050, 0);case 326:return new Monster(345, 1, 21972, 7710, 7628, 29411, 5053, 1325514.6, 2165227, 50881032, 1, 839, 10000, 50, 0);case 327:return new Monster(345, 2, 5477, 5543, 22301, 21906, 7930, 3808487.7, 4660767.9, 15158952, 1, 567, 10000, 1050, 0);case 328:return new Monster(345, 3, 22107, 7757, 7675, 29591, 5084, 656311.5, 953010.9, 51192432, 1, 833, 10000, 2050, 0);case 329:return new Monster(346, 2, 5527, 5593, 22504, 22109, 8001, 3854396.8, 4718934.4, 15343646, 1, 844, 10000, 1050, 0);case 330:return new Monster(346, 3, 5610, 22308, 5577, 22453, 8042, 1890334.6, 2747345.8, 31164764, 1, 893, 10000, 2050, 0);case 331:return new Monster(346, 1, 22376, 7851, 7769, 29952, 5144, 1352114.4, 2211736.8, 51966720, 1, 199, 10000, 50, 0);case 332:return new Monster(346, 1, 22443, 7875, 7792, 30043, 5159, 1356161.2, 2218356.4, 52124604, 1, 252, 10000, 50, 0);case 333:return new Monster(347, 1, 22577, 7922, 7839, 30227, 5188, 1371030.9, 2238371.7, 52594980, 1, 521, 10000, 50, 0);case 334:return new Monster(347, 3, 5695, 22645, 5661, 22796, 8163, 1925675, 2795627, 31732032, 1, 227, 10000, 2050, 0);case 335:return new Monster(347, 2, 5645, 5712, 22981, 22582, 8171, 3947554.7, 4830409.1, 15717072, 1, 222, 10000, 1050, 0);case 336:return new Monster(347, 3, 5729, 22781, 5695, 22932, 8212, 1937235, 2812409.4, 31921344, 1, 17, 10000, 2050, 0);case 337:return new Monster(348, 1, 22916, 8041, 7957, 30686, 5264, 1393900.8, 2278844.4, 53547072, 1, 90, 10000, 50, 0);case 338:return new Monster(348, 3, 5780, 22984, 5746, 23140, 8284, 1959088.8, 2846657.2, 32303440, 1, 176, 10000, 2050, 0);case 339:return new Monster(348, 3, 5797, 23052, 5763, 23208, 8309, 1964882.4, 2855075.6, 32398368, 1, 224, 10000, 2050, 0);case 340:return new Monster(348, 2, 5746, 5814, 23392, 22991, 8316, 4029824.4, 4933141.6, 16047718, 1, 433, 10000, 1050, 0);case 341:return new Monster(349, 1, 23256, 8160, 8075, 31143, 5340, 1419226, 2317293.6, 54500248, 1, 534, 10000, 50, 0);case 342:return new Monster(349, 3, 5865, 23324, 5831, 23485, 8406, 1995057, 2895749.4, 32879000, 1, 30, 10000, 2050, 0);case 343:return new Monster(349, 1, 23393, 8208, 8122, 31326, 5371, 1427583, 2330938.8, 54820500, 1, 536, 10000, 50, 0);case 344:return new Monster(349, 2, 5831, 5900, 23736, 23333, 8438, 4100934.2, 5017529.8, 16333100, 1, 251, 10000, 1050, 0);case 345:return new Monster(350, 3, 5934, 23598, 5900, 23764, 8504, 2023205.6, 2939196, 33364656, 1, 501, 10000, 2050, 0);case 346:return new Monster(350, 1, 23666, 8304, 8217, 31697, 5432, 1446603.6, 2365232.4, 55628236, 1, 67, 10000, 50, 0);case 347:return new Monster(350, 2, 5899, 5968, 24012, 23610, 8536, 4160610.4, 5092664, 16574220, 1, 79, 10000, 1050, 0);case 348:return new Monster(350, 1, 23803, 8352, 8265, 31881, 5464, 1454974.3, 2378918.7, 55951156, 1, 554, 10000, 50, 0);case 349:return new Monster(351, 3, 6373, 25351, 6338, 25593, 9119, 2178509.9, 3167588.9, 36034944, 1, 895, 10000, 2050, 0);case 350:return new Monster(351, 2, 6321, 6391, 25704, 25372, 9128, 4463950.4, 5466796.4, 17861888, 1, 447, 10000, 1050, 0);case 351:return new Monster(351, 1, 25497, 8943, 8856, 34234, 5809, 1563579.1, 2558352.1, 60251840, 1, 438, 10000, 50, 0);case 352:return new Monster(351, 1, 25569, 8969, 8881, 34332, 5826, 1567992.7, 2565573.7, 60424320, 1, 861, 10000, 50, 0);case 353:return new Monster(352, 3, 6467, 25727, 6432, 25975, 9256, 2218529.4, 3222272.4, 36676700, 1, 532, 10000, 2050, 0);case 354:return new Monster(352, 1, 25800, 9052, 8963, 34646, 5876, 1587315, 2593905, 61150192, 1, 70, 10000, 50, 0);case 355:return new Monster(352, 1, 25872, 9077, 8989, 34745, 5893, 1591743, 2601141, 61324924, 1, 894, 10000, 50, 0);case 356:return new Monster(352, 3, 6522, 25945, 6486, 26195, 9334, 2237321, 3249566, 36987340, 1, 869, 10000, 2050, 0);case 357:return new Monster(353, 2, 6490, 6562, 26389, 26060, 9371, 4609265.4, 5644106.2, 18450480, 1, 567, 10000, 1050, 0);case 358:return new Monster(353, 1, 26177, 9183, 9093, 35158, 5957, 1613119.2, 2639649.6, 62229660, 1, 855, 10000, 50, 0);case 359:return new Monster(353, 3, 6598, 26250, 6563, 26507, 9442, 2268864, 3298256, 37533912, 1, 448, 10000, 2050, 0);case 360:return new Monster(353, 1, 26323, 9234, 9144, 35355, 5990, 1622112.8, 2654366.4, 62578352, 1, 505, 10000, 50, 0);case 361:return new Monster(354, 1, 26483, 9292, 9202, 35570, 6025, 1639916.7, 2678442.3, 63136752, 1, 578, 10000, 50, 0);case 362:return new Monster(354, 2, 6603, 6675, 26846, 26516, 9535, 4705171.2, 5757926.4, 18826360, 1, 481, 10000, 1050, 0);case 363:return new Monster(354, 1, 26630, 9344, 9253, 35767, 6058, 1649016, 2693304, 63486424, 1, 3, 10000, 50, 0);case 364:return new Monster(354, 1, 26703, 9369, 9278, 35866, 6075, 1653534.7, 2700684.3, 63662152, 1, 103, 10000, 50, 0);case 365:return new Monster(355, 2, 6869, 6942, 27922, 27632, 9910, 4904859.2, 6005380, 19673984, 1, 597, 10000, 1050, 0);case 366:return new Monster(355, 2, 6888, 6961, 27999, 27708, 9937, 4918380.4, 6021935, 19728096, 1, 171, 10000, 1050, 0);case 367:return new Monster(355, 3, 6980, 27782, 6944, 28092, 9982, 2415124.8, 3510129.6, 40003008, 1, 558, 10000, 2050, 0);case 368:return new Monster(355, 2, 6926, 6999, 28152, 27860, 9991, 4945247.2, 6054830, 19836320, 1, 139, 10000, 1050, 0);case 369:return new Monster(356, 3, 6849, 27247, 6812, 27525, 9797, 2376810.4, 3450736.2, 39305700, 1, 25, 10000, 2050, 0);case 370:return new Monster(356, 1, 27321, 9583, 9491, 36706, 6212, 1699988.2, 2776829.6, 65520208, 1, 868, 10000, 50, 0);case 371:return new Monster(356, 1, 27395, 9609, 9516, 36805, 6229, 1704591, 2784348, 65696924, 1, 562, 10000, 50, 0);case 372:return new Monster(356, 2, 6830, 6904, 27766, 27435, 9858, 4894131.2, 5988505.6, 19588590, 1, 862, 10000, 1050, 0);case 373:return new Monster(357, 1, 27632, 9694, 9601, 37128, 6281, 1724860.8, 2819484, 66459120, 1, 577, 10000, 50, 0);case 374:return new Monster(357, 1, 27706, 9720, 9627, 37228, 6298, 1729478.4, 2827032, 66638120, 1, 199, 10000, 50, 0);case 375:return new Monster(357, 1, 27780, 9746, 9652, 37328, 6315, 1734096, 2834580, 66817, 1, 183, 10000, 50, 0);case 376:return new Monster(357, 3, 7001, 27854, 6964, 28141, 10017, 2435313.6, 3538728, 40297912, 1, 199, 10000, 2050, 0);case 377:return new Monster(358, 3, 7042, 28019, 7005, 28311, 10073, 2458143.3, 3568091.7, 40654596, 1, 453, 10000, 2050, 0);case 378:return new Monster(358, 2, 6985, 7061, 28395, 28069, 10081, 5033366, 6158204, 20153542, 1, 436, 10000, 1050, 0);case 379:return new Monster(358, 1, 28167, 9881, 9786, 37853, 6398, 1763880.2, 2879689.4, 67946136, 1, 1, 10000, 50, 0);case 380:return new Monster(358, 1, 28242, 9907, 9812, 37953, 6414, 1768575.2, 2887354.4, 68125632, 1, 1, 10000, 50, 0);case 381:return new Monster(359, 1, 28407, 9967, 9872, 38181, 6450, 1781745.9, 2912742.5, 68725800, 1, 1, 10000, 50, 0);case 382:return new Monster(359, 1, 28482, 9993, 9898, 38281, 6467, 1786448.4, 2920430, 68905800, 1, 1, 10000, 50, 0);case 383:return new Monster(359, 1, 28556, 10019, 9924, 38382, 6486, 1791088.2, 2928015, 69087600, 1, 1, 10000, 50, 0);case 384:return new Monster(359, 1, 28631, 10045, 9949, 38481, 6501, 1795790.7, 2935702.5, 69265800, 1, 1, 10000, 50, 0);case 385:return new Monster(360, 1, 30492, 10695, 10599, 41076, 6876, 1915525.6, 3135605.6, 74142176, 1, 1, 10000, 50, 0);case 386:return new Monster(360, 1, 30571, 10723, 10627, 41182, 6894, 1920486.8, 3143726.8, 74333512, 1, 1, 10000, 50, 0);case 387:return new Monster(360, 1, 30650, 10751, 10654, 41289, 6912, 1925448, 3151848, 74526648, 1, 2, 10000, 50, 0);case 388:return new Monster(360, 1, 30730, 10779, 10683, 41396, 6930, 1930472, 3160072, 74719776, 1, 3, 10000, 50, 0);case 389:return new Monster(361, 1, 29191, 10238, 10141, 39244, 6625, 1842583.1, 3010623.1, 71031640, 1, 50, 10000, 50, 0);case 390:return new Monster(361, 1, 29266, 10265, 10167, 39345, 6642, 1847315.6, 3018355.6, 71214448, 1, 535, 10000, 50, 0);case 391:return new Monster(361, 2, 7296, 7374, 29653, 29330, 10526, 5297811.8, 6484331.8, 21234920, 1, 161, 10000, 1050, 0);case 392:return new Monster(361, 1, 29416, 10317, 10219, 39546, 6676, 1856780.6, 3033820.6, 71578256, 1, 800, 10000, 50, 0);case 393:return new Monster(362, 1, 29585, 10379, 10281, 39779, 6712, 1870404, 3060123, 72198888, 1, 8, 10000, 50, 0);case 394:return new Monster(362, 1, 29660, 10406, 10307, 39881, 6730, 1875144, 3067878, 72384016, 1, 543, 10000, 50, 0);case 395:return new Monster(362, 1, 29736, 10432, 10333, 39982, 6747, 1879947.2, 3075736.4, 72567328, 1, 65, 10000, 50, 0);case 396:return new Monster(362, 2, 7413, 7492, 30128, 29804, 10696, 5397715.8, 6609263.4, 21637704, 1, 864, 10000, 1050, 0);case 397:return new Monster(363, 2, 7456, 7535, 30299, 29980, 10755, 5443496.4, 6661918.2, 21825440, 1, 842, 10000, 1050, 0);case 398:return new Monster(363, 1, 30057, 10543, 10444, 40420, 6814, 1906247.8, 3114941.2, 73564400, 1, 184, 10000, 50, 0);case 399:return new Monster(363, 1, 30132, 10570, 10470, 40521, 6831, 1911002.8, 3122711.2, 73748224, 1, 830, 10000, 50, 0);case 400:return new Monster(363, 2, 7512, 7592, 30528, 30206, 10836, 5484624.8, 6712252.4, 21989968, 1, 195, 10000, 1050, 0);case 401:return new Monster(364, 2, 7555, 7635, 30701, 30383, 10899, 5531051.1, 6771775.5, 22179590, 1, 891, 10000, 1050, 0);case 402:return new Monster(364, 2, 7574, 7654, 30777, 30458, 10926, 5544738.7, 6788533.5, 22234340, 1, 104, 10000, 1050, 0);case 403:return new Monster(364, 3, 7673, 30531, 7633, 30873, 10974, 2721203.1, 3955059.5, 45074580, 1, 130, 10000, 2050, 0);case 404:return new Monster(364, 1, 30607, 10738, 10637, 41164, 6937, 1947241.2, 3184168, 75124304, 1, 117, 10000, 50, 0);case 405:return new Monster(365, 1, 33574, 11777, 11672, 45302, 7533, 2142659.2, 3499452.8, 82902656, 1, 8, 10000, 50, 0);case 406:return new Monster(365, 1, 33657, 11806, 11701, 45414, 7552, 2147954.6, 3508101.4, 83107616, 1, 535, 10000, 50, 0);case 407:return new Monster(365, 3, 8474, 33740, 8433, 34231, 12096, 3017250, 4380750, 50114184, 1, 588, 10000, 2050, 0);case 408:return new Monster(365, 2, 8413, 8495, 34150, 33972, 12109, 6169296, 7549360, 24867504, 1, 809, 10000, 1050, 0);case 409:return new Monster(366, 3, 7836, 31182, 7796, 31539, 11203, 2794803.2, 4061198.4, 46299252, 1, 241, 10000, 2050, 0);case 410:return new Monster(366, 3, 7856, 31258, 7815, 31616, 11230, 2801612.8, 4071093.6, 46412288, 1, 13, 10000, 2050, 0);case 411:return new Monster(366, 2, 7793, 7875, 31663, 31348, 11237, 5735980.3, 7021904.1, 23009432, 1, 807, 10000, 1050, 0);case 412:return new Monster(366, 2, 7812, 7894, 31740, 31424, 11264, 5749925, 7038975, 23065216, 1, 576, 10000, 1050, 0);case 413:return new Monster(367, 3, 7938, 31586, 7897, 31952, 11349, 2840480.4, 4123278, 47033344, 1, 897, 10000, 2050, 0);case 414:return new Monster(367, 1, 31663, 11108, 11004, 42596, 7170, 2033406.6, 3319330.4, 78376640, 1, 202, 10000, 50, 0);case 415:return new Monster(367, 1, 31739, 11134, 11031, 42699, 7188, 2038285.8, 3327295.2, 78566160, 1, 106, 10000, 50, 0);case 416:return new Monster(367, 2, 7912, 7996, 32148, 31834, 11411, 5839892.8, 7145507.6, 23429824, 1, 232, 10000, 1050, 0);case 417:return new Monster(368, 3, 8040, 31992, 7998, 32366, 11493, 2883380.2, 4189061.8, 47772216, 1, 820, 10000, 2050, 0);case 418:return new Monster(368, 2, 7975, 8059, 32403, 32092, 11499, 5902407.3, 7224857.7, 23683896, 1, 868, 10000, 1050, 0);case 419:return new Monster(368, 1, 32146, 11275, 11171, 43252, 7274, 2067630.8, 3379595.6, 79799936, 1, 247, 10000, 50, 0);case 420:return new Monster(368, 2, 8014, 8098, 32558, 32246, 11554, 5930632.8, 7259407.2, 23797548, 1, 887, 10000, 1050, 0);case 421:return new Monster(369, 3, 8142, 32400, 8100, 32782, 11641, 2929864, 4252192, 48517360, 1, 459, 10000, 2050, 0);case 422:return new Monster(369, 2, 8077, 8161, 32815, 32506, 11647, 5993845, 7333105, 24054440, 1, 444, 10000, 1050, 0);case 423:return new Monster(369, 1, 32554, 11421, 11315, 43806, 7364, 2100378, 3428989.2, 81041104, 1, 31, 10000, 50, 0);case 424:return new Monster(369, 2, 8115, 8200, 32970, 32660, 11702, 6022148, 7367732, 24168400, 1, 466, 10000, 1050, 0);case 425:return new Monster(370, 2, 9180, 9265, 37230, 37128, 13192, 6818644, 8345484, 27548976, 1, 580, 10000, 1050, 0);case 426:return new Monster(370, 1, 36977, 12967, 12861, 49973, 8256, 2389360.2, 3905827.2, 92699912, 1, 243, 10000, 50, 0);case 427:return new Monster(370, 1, 37064, 12998, 12891, 50089, 8275, 2394980.4, 3915014.4, 92915096, 1, 102, 10000, 50, 0);case 428:return new Monster(370, 1, 37150, 13028, 12921, 50207, 8295, 2400536, 3924096, 93133984, 1, 885, 10000, 50, 0);case 429:return new Monster(371, 2, 8263, 8348, 33565, 33261, 11909, 6161012.5, 7544302.5, 24746184, 1, 817, 10000, 1050, 0);case 430:return new Monster(371, 1, 33299, 11679, 11571, 44820, 7529, 2158423.2, 3530754, 83365200, 1, 465, 10000, 50, 0);case 431:return new Monster(371, 3, 8387, 33377, 8344, 33779, 11986, 3031539.6, 4407084, 50263152, 1, 571, 10000, 2050, 0);case 432:return new Monster(371, 3, 8407, 33454, 8364, 33856, 12014, 3038531.2, 4417248, 50377728, 1, 897, 10000, 2050, 0);case 433:return new Monster(372, 3, 8452, 33635, 8409, 34044, 12081, 3065059.5, 4451233.5, 50793648, 1, 541, 10000, 2050, 0);case 434:return new Monster(372, 1, 33713, 11826, 11718, 45383, 7621, 2191995, 3581382.6, 84639296, 1, 75, 10000, 50, 0);case 435:return new Monster(372, 3, 8491, 33791, 8448, 34202, 12136, 3079271.1, 4471872.3, 51029384, 1, 166, 10000, 2050, 0);case 436:return new Monster(372, 1, 33868, 11881, 11772, 45592, 7656, 2202070, 3597843.6, 85029080, 1, 590, 10000, 50, 0);case 437:return new Monster(373, 3, 8556, 34051, 8513, 34468, 12227, 3109769.3, 4519894.7, 51564128, 1, 864, 10000, 2050, 0);case 438:return new Monster(373, 2, 8488, 8576, 34479, 34180, 12233, 6363220.5, 7791065.1, 25566640, 1, 252, 10000, 1050, 0);case 439:return new Monster(373, 2, 8508, 8596, 34558, 34257, 12261, 6377796, 7808911.2, 25624236, 1, 46, 10000, 1050, 0);case 440:return new Monster(373, 3, 8615, 34285, 8571, 34706, 12311, 3131133.5, 4550946.5, 51920176, 1, 5, 10000, 2050, 0);case 441:return new Monster(374, 1, 34469, 12092, 11982, 46411, 7784, 2254926.6, 3682357.2, 87020624, 1, 464, 10000, 50, 0);case 442:return new Monster(374, 2, 8592, 8681, 34900, 34604, 12385, 6461841, 7907115, 25953000, 1, 888, 10000, 1050, 0);case 443:return new Monster(374, 1, 34625, 12147, 12036, 46622, 7819, 2265129, 3699018, 87416248, 1, 248, 10000, 50, 0);case 444:return new Monster(374, 1, 34703, 12174, 12063, 46727, 7837, 2270230.2, 3707348.4, 87613128, 1, 195, 10000, 50, 0);case 445:return new Monster(375, 3, 10435, 41563, 10391, 42333, 14863, 3816401.4, 5545838.2, 63668832, 1, 521, 10000, 2050, 0);case 446:return new Monster(375, 2, 10369, 10459, 42013, 42054, 14874, 7795266.5, 9543423.3, 31624608, 1, 72, 10000, 1050, 0);case 447:return new Monster(375, 1, 41750, 14639, 14527, 56556, 9253, 2735280, 4472496, 106325280, 1, 36, 10000, 50, 0);case 448:return new Monster(375, 3, 10506, 41843, 10461, 42618, 14963, 3842105.4, 5583190.2, 64097472, 1, 164, 10000, 2050, 0);case 449:return new Monster(376, 1, 35309, 12383, 12271, 47556, 7970, 2320458.3, 3789728.7, 89643056, 1, 2, 10000, 50, 0);case 450:return new Monster(376, 1, 35388, 12411, 12298, 47662, 7988, 2325648.6, 3798205.4, 89842872, 1, 10, 10000, 50, 0);case 451:return new Monster(376, 1, 35467, 12439, 12326, 47767, 8005, 2330838.9, 3806682.1, 90040792, 1, 33, 10000, 50, 0);case 452:return new Monster(376, 3, 8932, 35545, 8896, 35994, 12760, 3274615.5, 4753703.5, 54278952, 1, 442, 10000, 2050, 0);case 453:return new Monster(377, 1, 35733, 12535, 12421, 48131, 8063, 2355463.7, 3849521.1, 90967592, 1, 169, 10000, 50, 0);case 454:return new Monster(377, 1, 35812, 12562, 12449, 48237, 8081, 2360669.8, 3858029.4, 91167928, 1, 582, 10000, 50, 0);case 455:return new Monster(377, 3, 9018, 35890, 8973, 36347, 12886, 3313570, 4814190, 54956664, 1, 415, 10000, 2050, 0);case 456:return new Monster(377, 2, 8947, 9038, 36334, 36044, 12891, 6778156, 8297335.2, 27249264, 1, 843, 10000, 1050, 0);case 457:return new Monster(378, 3, 9085, 36158, 9039, 36622, 12979, 3349156.8, 4860979.2, 55518952, 1, 511, 10000, 2050, 0);case 458:return new Monster(378, 2, 9013, 9105, 36603, 36317, 12984, 6850292.3, 8380715.7, 27528286, 1, 873, 10000, 1050, 0);case 459:return new Monster(378, 2, 9033, 9125, 36683, 36397, 13013, 6865260.3, 8399027.7, 27588926, 1, 203, 10000, 1050, 0);case 460:return new Monster(378, 1, 36395, 12765, 12650, 49030, 8206, 2406370.5, 3928099.5, 92911848, 1, 853, 10000, 50, 0);case 461:return new Monster(379, 3, 9192, 36585, 9146, 37059, 13134, 3396016, 4933006, 56329680, 1, 584, 10000, 2050, 0);case 462:return new Monster(379, 2, 9120, 9212, 37034, 36751, 13139, 6945750, 8501598, 27930760, 1, 132, 10000, 1050, 0);case 463:return new Monster(379, 1, 36744, 12890, 12774, 49500, 8283, 2433114.8, 3976782.8, 94050000, 1, 566, 10000, 50, 0);case 464:return new Monster(379, 3, 9252, 36823, 9206, 37300, 13219, 3418102.4, 4965088.4, 56696000, 1, 192, 10000, 2050, 0);case 465:return new Monster(380, 2, 12378, 12471, 50081, 50437, 17707, 9417108, 11530948.2, 38432992, 1, 233, 10000, 1050, 0);case 466:return new Monster(380, 3, 12498, 49815, 12452, 50937, 17764, 4633725, 6736340, 77627984, 1, 31, 10000, 2050, 0);case 467:return new Monster(380, 2, 12432, 12525, 50296, 50653, 17783, 9457528, 11580441.2, 38597584, 1, 868, 10000, 1050, 0);case 468:return new Monster(380, 2, 12458, 12552, 50404, 50761, 17821, 9477832, 11605302.8, 38679880, 1, 894, 10000, 1050, 0);case 469:return new Monster(381, 1, 37445, 13132, 13015, 50457, 8437, 2494503, 4075104, 96372872, 1, 64, 10000, 50, 0);case 470:return new Monster(381, 1, 37525, 13160, 13043, 50564, 8455, 2499831, 4083808, 96577240, 1, 3, 10000, 50, 0);case 471:return new Monster(381, 1, 37605, 13188, 13070, 50672, 8473, 2505159, 4092512, 96783520, 1, 67, 10000, 50, 0);case 472:return new Monster(381, 1, 37684, 13216, 13098, 50779, 8491, 2510420.4, 4101107.2, 96987888, 1, 891, 10000, 50, 0);case 473:return new Monster(382, 1, 37878, 13287, 13168, 51046, 8533, 2527129.6, 4133580.8, 97753088, 1, 818, 10000, 50, 0);case 474:return new Monster(382, 2, 9442, 9537, 38337, 38065, 13599, 7247583, 8873495.8, 29157790, 1, 64, 10000, 1050, 0);case 475:return new Monster(382, 1, 38038, 13343, 13224, 51261, 8569, 2537801.6, 4151036.8, 98164816, 1, 522, 10000, 50, 0);case 476:return new Monster(382, 1, 38118, 13371, 13252, 51369, 8587, 2543137.6, 4159764.8, 98371632, 1, 131, 10000, 50, 0);case 477:return new Monster(383, 1, 38313, 13437, 13318, 51638, 8624, 2563808.7, 4188703.9, 99144960, 1, 465, 10000, 50, 0);case 478:return new Monster(383, 2, 9550, 9646, 38775, 38506, 13752, 7349757.5, 8994241.5, 29572608, 1, 804, 10000, 1050, 0);case 479:return new Monster(383, 1, 38473, 13493, 13374, 51854, 8660, 2574512.7, 4206191.9, 99559680, 1, 573, 10000, 50, 0);case 480:return new Monster(383, 3, 9686, 38554, 9638, 39071, 13834, 3617303.2, 5252416.8, 60013056, 1, 845, 10000, 2050, 0);case 481:return new Monster(384, 1, 38749, 13593, 13473, 52232, 8721, 2600728.9, 4251862.3, 100546600, 1, 828, 10000, 50, 0);case 482:return new Monster(384, 2, 9659, 9756, 39216, 38950, 13911, 7452940, 9123967.6, 29991500, 1, 221, 10000, 1050, 0);case 483:return new Monster(384, 3, 9776, 38910, 9728, 39436, 13964, 3658480, 5316472, 60731440, 1, 502, 10000, 2050, 0);case 484:return new Monster(384, 1, 38991, 13678, 13557, 52558, 8775, 2616967.1, 4278409.7, 101174152, 1, 171, 10000, 50, 0);case 485:return new Monster(385, 3, 14104, 56211, 14055, 57596, 20021, 5301640.3, 7696654.9, 88928224, 1, 894, 10000, 2050, 0);case 486:return new Monster(385, 1, 56327, 19741, 19625, 76759, 12247, 3791480.1, 6191436.3, 148144864, 1, 32, 10000, 50, 0);case 487:return new Monster(385, 3, 14162, 56443, 14113, 57834, 20103, 5323517.9, 7728415.7, 89295696, 1, 243, 10000, 2050, 0);case 488:return new Monster(385, 1, 56559, 19823, 19705, 77075, 12298, 3807093.7, 6216933.1, 148754752, 1, 416, 10000, 50, 0);case 489:return new Monster(386, 2, 9858, 9956, 40020, 39761, 14191, 7645730, 9359014, 30775014, 1, 518, 10000, 1050, 0);case 490:return new Monster(386, 2, 9878, 9976, 40102, 39843, 14220, 7661392, 9378185.6, 30838482, 1, 11, 10000, 1050, 0);case 491:return new Monster(386, 2, 9899, 9997, 40183, 39924, 14249, 7676863, 9397123.4, 30901176, 1, 19, 10000, 1050, 0);case 492:return new Monster(386, 1, 39872, 13983, 13860, 53758, 8969, 2688046.8, 4394996.4, 104021728, 1, 184, 10000, 50, 0);case 493:return new Monster(387, 2, 9968, 10067, 40465, 40211, 14351, 7750962.5, 9483292.5, 31203736, 1, 185, 10000, 1050, 0);case 494:return new Monster(387, 2, 9989, 10087, 40548, 40293, 14380, 7766857, 9502739.4, 31267368, 1, 444, 10000, 1050, 0);case 495:return new Monster(387, 1, 40234, 14112, 13989, 54251, 9049, 2724518.8, 4446962, 105246944, 1, 124, 10000, 50, 0);case 496:return new Monster(387, 2, 10029, 10128, 40712, 40455, 14439, 7798263, 9541164.6, 31393080, 1, 210, 10000, 1050, 0);case 497:return new Monster(388, 3, 10179, 40515, 10129, 41080, 14532, 3849875, 5592450, 63920480, 1, 842, 10000, 2050, 0);case 498:return new Monster(388, 1, 40597, 14238, 14113, 54748, 9123, 2753154.6, 4499255.6, 106484864, 1, 207, 10000, 50, 0);case 499:return new Monster(388, 1, 40678, 14266, 14142, 54857, 9142, 2758646.4, 4508230.4, 106696864, 1, 802, 10000, 50, 0);case 500:return new Monster(388, 1, 40760, 14295, 14170, 54968, 9160, 2764206, 4517316, 106912760, 1, 403, 10000, 50, 0);case 501:return new Monster(389, 1, 40962, 14369, 14243, 55246, 9203, 2786096, 4547892, 107729696, 1, 885, 10000, 50, 0);case 502:return new Monster(389, 3, 10311, 41044, 10261, 41620, 14724, 3912446.2, 5677768.2, 64927200, 1, 76, 10000, 2050, 0);case 503:return new Monster(389, 3, 10332, 41125, 10281, 41703, 14753, 3920165.5, 5688970.5, 65056680, 1, 199, 10000, 2050, 0);case 504:return new Monster(389, 2, 10251, 10352, 41610, 41363, 14757, 8011850, 9801510, 32263140, 1, 859, 10000, 1050, 0);case 505:return new Monster(390, 3, 15882, 63327, 15832, 65009, 22523, 6048683.5, 8784841.9, 101674080, 1, 895, 10000, 2050, 0);case 506:return new Monster(390, 1, 63452, 22239, 22112, 86633, 13713, 4321762.2, 7063320.6, 169367520, 1, 87, 10000, 50, 0);case 507:return new Monster(390, 3, 15945, 63578, 15894, 65266, 22612, 6072654, 8819655.6, 102076024, 1, 7, 10000, 2050, 0);case 508:return new Monster(390, 1, 63703, 22327, 22200, 86976, 13767, 4338855.3, 7091256.9, 170038080, 1, 190, 10000, 50, 0);case 509:return new Monster(391, 3, 10516, 41860, 10465, 42457, 15010, 4006959, 5824117, 66572576, 1, 892, 10000, 2050, 0);case 510:return new Monster(391, 2, 10435, 10537, 42350, 42111, 15014, 8192424, 10030848, 33015024, 1, 146, 10000, 1050, 0);case 511:return new Monster(391, 1, 42025, 14737, 14609, 56692, 9438, 2870990.5, 4695309.5, 111116320, 1, 11, 10000, 50, 0);case 512:return new Monster(391, 2, 10476, 10578, 42516, 42277, 15073, 8224528.4, 10070156.8, 33145168, 1, 837, 10000, 1050, 0);case 513:return new Monster(392, 3, 10629, 42312, 10578, 42920, 15175, 4062912, 5899686.8, 67470240, 1, 558, 10000, 2050, 0);case 514:return new Monster(392, 1, 42395, 14870, 14742, 57192, 9519, 2904742.5, 4745119.5, 112382280, 1, 595, 10000, 50, 0);case 515:return new Monster(392, 2, 10568, 10671, 42889, 42654, 15208, 8322406, 10184222.6, 33526044, 1, 881, 10000, 1050, 0);case 516:return new Monster(392, 3, 10692, 42560, 10640, 43171, 15263, 4086720, 5934258, 67864816, 1, 201, 10000, 2050, 0);case 517:return new Monster(393, 2, 10640, 10743, 43180, 42950, 15308, 8396136, 10279220, 33844600, 1, 840, 10000, 1050, 0);case 518:return new Monster(393, 2, 10660, 10764, 43263, 43033, 15338, 8412271.2, 10298974, 33910004, 1, 828, 10000, 1050, 0);case 519:return new Monster(393, 1, 42932, 15056, 14926, 57923, 9633, 2945821.2, 4818092.4, 114108312, 1, 82, 10000, 50, 0);case 520:return new Monster(393, 3, 10806, 43014, 10754, 43636, 15423, 4138908.8, 6014755.2, 68770336, 1, 185, 10000, 2050, 0);case 521:return new Monster(394, 3, 10858, 43222, 10806, 43851, 15500, 4171888, 6056803.2, 69284576, 1, 506, 10000, 2050, 0);case 522:return new Monster(394, 2, 10774, 10878, 43723, 43497, 15503, 8527935, 10434693.8, 34362632, 1, 12, 10000, 1050, 0);case 523:return new Monster(394, 2, 10795, 10899, 43806, 43580, 15533, 8544120, 10454497.6, 34428200, 1, 855, 10000, 1050, 0);case 524:return new Monster(394, 1, 43471, 15248, 15117, 58657, 9752, 2995840.9, 4891612.5, 115847576, 1, 813, 10000, 50, 0);case 525:return new Monster(395, 3, 17824, 71085, 17771, 73096, 25252, 6874886.5, 9988847.5, 115784064, 1, 14, 10000, 2050, 0);case 526:return new Monster(395, 2, 17752, 17858, 71641, 72793, 25274, 14000605.4, 17138919.2, 57652056, 1, 181, 10000, 1050, 0);case 527:return new Monster(395, 3, 17892, 71356, 17839, 73374, 25349, 6901092.2, 10026923, 116224416, 1, 182, 10000, 2050, 0);case 528:return new Monster(395, 1, 71491, 25054, 24922, 97774, 15365, 4933569, 8065312.8, 193592512, 1, 453, 10000, 50, 0);case 529:return new Monster(396, 1, 44140, 15479, 15346, 59572, 9898, 3055180, 4988950, 118250416, 1, 12, 10000, 50, 0);case 530:return new Monster(396, 2, 11003, 11109, 44647, 44431, 15826, 8752772, 10708748.6, 35278216, 1, 171, 10000, 1050, 0);case 531:return new Monster(396, 3, 11130, 44307, 11077, 44961, 15882, 4298749, 6239833.6, 71398064, 1, 51, 10000, 2050, 0);case 532:return new Monster(396, 2, 11044, 11151, 44816, 44599, 15886, 8785896, 10749274.8, 35411608, 1, 201, 10000, 1050, 0);case 533:return new Monster(397, 3, 11204, 44601, 11150, 45264, 15990, 4336189.2, 6299073.2, 72060288, 1, 548, 10000, 2050, 0);case 534:return new Monster(397, 2, 11118, 11225, 45112, 44901, 15993, 8861960.8, 10847328.8, 35741196, 1, 459, 10000, 1050, 0);case 535:return new Monster(397, 3, 11246, 44769, 11192, 45435, 16050, 4352518.8, 6322794.8, 72332520, 1, 213, 10000, 2050, 0);case 536:return new Monster(397, 3, 11267, 44852, 11213, 45520, 16080, 4360586.4, 6334514.4, 72467840, 1, 445, 10000, 2050, 0);case 537:return new Monster(398, 1, 45065, 15804, 15670, 60834, 10096, 3137220, 5120520, 121363832, 1, 7, 10000, 50, 0);case 538:return new Monster(398, 1, 45149, 15833, 15699, 60947, 10114, 3143066.4, 5130062.4, 121589264, 1, 195, 10000, 50, 0);case 539:return new Monster(398, 1, 45233, 15863, 15728, 61061, 10133, 3148912.8, 5139604.8, 121816696, 1, 412, 10000, 50, 0);case 540:return new Monster(398, 2, 11275, 11383, 45749, 45542, 16216, 9014523, 11027919, 36342516, 1, 553, 10000, 1050, 0);case 541:return new Monster(399, 1, 45531, 15970, 15835, 61469, 10198, 3174207.7, 5187119.9, 122938000, 1, 218, 10000, 50, 0);case 542:return new Monster(399, 1, 45615, 16000, 15864, 61583, 10217, 3180062.5, 5196687.5, 123166000, 1, 90, 10000, 50, 0);case 543:return new Monster(399, 1, 45699, 16029, 15894, 61696, 10236, 3185917.3, 5206255.1, 123392000, 1, 194, 10000, 50, 0);case 544:return new Monster(399, 3, 11500, 45783, 11446, 46473, 16412, 4473976.1, 6498026.7, 74356800, 1, 197, 10000, 2050, 0);case 545:return new Monster(400, 2, 22890, 22999, 92214, 94307, 32482, 18251129.6, 22345875.2, 75634216, 1, 475, 10000, 1050, 0);case 546:return new Monster(400, 1, 91946, 32214, 32077, 126269, 19492, 6418528.8, 10501375.2, 253169344, 1, 196, 10000, 50, 0);
					default:
						$hpmulti = 1.1;
						$sel = 0;
						$sel2 = 1;
						
						for($i = 545; $i < $stage; $i++)
						{
							if(($i - 545) > 200)
								$hpmulti += 0.01;
							else
								$hpmulti += 0.13;
							
							$sel++;
							
							if($sel == 15)
								$sel = 1;
							
							$sel2++;
							
							if($sel2 == 11)
								$sel2 = 1;
						}
						
						$id = self::getDungMonster($sel, $sel2)->ID * -1;
						
						
						return new Monster(400, 1, 91946, 32214, 32077, 126269, 19492, 6418528.8, 10501375.2, (253169344 * $hpmulti), 1, $id, 10000, 50, 0);
				}
			case 16:
				switch($stage){
					case 1:
					   return new Monster(250, 3, 1400, 11000, 1400, 35000, 4500, 89817, 107865, 62500000, 1000, 1100, 31862139, 2050);
					case 2:
					   return new Monster(257, 1, 9722, 2404, 2426, 43730, 4764, 511903, 640365, 79681528, 1000, 1101, 36305620, 50);
					case 3:
					   return new Monster(265, 3, 1550, 11290, 1560, 44000, 4800, 105975, 127327, 68425000, 1000, 1102, 42016588, 2050);
					case 4:
					   return new Monster(272, 3, 1965, 12320, 1980, 46000, 5940, 137708, 165568, 73970000, 1000, 1103, 47615630, 2050);
					case 5:
					   return new Monster(280, 2, 3869, 3865, 12249, 49255, 7662, 569237, 625037, 39995056, 1000, 1104, 54764113, 1050);
					case 6:
					   return new Monster(287, 3, 4465, 12440, 4430, 54100, 7960, 324564, 389388, 94220000, 1000, 1105, 61727510, 2050);
					case 7:
					   return new Monster(295, 3, 3910, 12980, 3850, 54500, 7970, 290272, 348172, 96325000, 1000, 1106, 70595045, 2050);
					case 8:
					   return new Monster(302, 1, 14874, 3132, 1986, 58295, 8022, 919831, 1149044, 138640080, 1000, 1107, 79213665, 50);
					case 9:
					   return new Monster(310, 1, 14470, 5540, 5569, 70050, 10197, 919480, 1148264, 174284400, 1000, 1108, 90125436, 50);
					case 10:
					   return new Monster(317, 2, 5911, 4338, 12174, 70050, 8540, 723072, 793510, 71282872, 1000, 1109, 100672054, 1050);
					case 11:
					   return new Monster(325, 2, 3221, 3221, 16577, 61790, 8964, 550885, 604520, 64459324, 1000, 1110, 113997992, 1050);
					case 12:
					   return new Monster(332, 2, 6128, 6057, 17028, 76695, 10905, 1056871, 1160010, 83003160, 1000, 1111, 126854805, 1050);
					case 13:
					   return new Monster(340, 2, 5151, 5237, 18553, 79880, 12130, 936064, 1027362, 90152560, 1000, 1112, 143018630, 1050);
					case 14:
					   return new Monster(347, 3, 5875, 20170, 5870, 72300, 9320, 519792, 623280, 168640000, 1000, 1113, 158537364, 2050);
					case 15:
					   return new Monster(355, 2, 5650, 5744, 19876, 86520, 12519, 1071970, 1175542, 104723808, 1000, 1114, 178017293, 1050);
					case 16:
					   return new Monster(362, 1, 19163, 9228, 9077, 96410, 13359, 1420719, 1773502, 306222272, 1000, 1115, 196694080, 50);
					case 17:
					   return new Monster(370, 2, 7773, 7772, 19358, 91315, 13191, 1511264, 1657566, 116878632, 1000, 1116, 220033230, 1050);
					case 18:
					   return new Monster(377, 2, 5774, 5775, 24520, 96430, 13751, 1144273, 1255345, 125754360, 1000, 1117, 242313317, 1050);
					case 19:
					   return new Monster(385, 3, 12400, 29300, 12600, 130350, 18640, 1237041, 1484197, 379430016, 1000, 1118, 270120546, 2050);
					case 20:
					   return new Monster(400, 2, 8447, 8378, 30585, 126470, 18375, 1760641, 1931756, 190324704, 1000, 1119, 300000000, 1050);
				}
		}
		
		return null;
	}

	public static function getShadowMonster($dung, $stage){
		switch ($dung) {
			case 1:
				switch ($stage) {
					case 1:
						return new Monster(172, 2, 825, 894, 1788, 7282, 808, 300000, 450000, 2519572, 85, 129, 5873522, -2);
					case 2:
						return new Monster(174, 1, 1740, 986, 855, 8052, 739, 125000, 170000, 7045500, 510, 112, 6175189, -1);
					case 3:
						return new Monster(176, 1, 1873, 980, 867, 8569, 817, 135000, 180000, 7583565, 595, 6, 6489101, -1);
					case 4:
						return new Monster(178, 3, 934, 2169, 923, 8014, 1045, 170000, 230000, 5738024, 340, 84, 6816906, -1);
					case 5:
						return new Monster(180, 1, 2140, 1010, 890, 9295, 930, 169000, 200000, 8411975, 187, 31, 7157815, -1);
					case 6:
						return new Monster(182, 2, 802, 819, 2506, 9009, 1133, 540000, 780000, 3297294, 187, 74, 7512244, -2);
					case 7:
						return new Monster(184, 1, 2540, 955, 863, 10120, 1004, 190000, 220000, 9361000, 1105, 116, 7882016, 24);
					case 8:
						return new Monster(186, 2, 781, 806, 2852, 9510, 1196, 600000, 810000, 3556740, 255, 114, 8266192, 1004);
					case 9:
						return new Monster(188, 1, 2885, 972, 897, 11500, 1118, 220000, 290000, 10867500, 1700, 4, 8665213, -1);
					case 10:
						return new Monster(190, 3, 839, 3218, 809, 11720, 1109, 300000, 440000, 8954080, 1065, 166, 9081081, -1);
				}
			case 2:
				switch ($stage) {
					case 1:
						return new Monster(192, 3, 969, 2534, 969, 9185, 1142, 310000, 452000, 7090820, 425, 131, 9512780, -1);
					case 2:
						return new Monster(194, 1, 2562, 1018, 945, 10576, 1050, 250000, 350000, 10311600, 1020, 38, 9960804, -5);
					case 3:
						return new Monster(196, 1, 2751, 966, 875, 10934, 1064, 265000, 365000, 10769990, 1190, 112, 10427272, -1);
					case 4:
						return new Monster(198, 3, 832, 3226, 838, 9702, 1257, 440000, 600000, 7722792, 722, 86, 10911106, -1);
					case 5:
						return new Monster(200, 1, 3115, 936, 852, 11517, 1026, 300000, 410000, 11574585, 1615, 51, 11412835, -1);
					case 6:
						return new Monster(202, 2, 876, 872, 3580, 10373, 1189, 910000, 1200000, 4211438, 374, 102, 11934768, -2);
					case 7:
						return new Monster(204, 1, 3162, 1032, 977, 13156, 1045, 340000, 460000, 13484900, 2040, 23, 12475687, -4);
					case 8:
						return new Monster(206, 3, 919, 3531, 882, 13756, 1269, 420000, 600000, 11389968, 1190, 67, 13036143, 9);
					case 9:
						return new Monster(208, 3, 945, 3655, 913, 15252, 1323, 435000, 620000, 12750672, 1420, 92, 13618707, 8);
					case 10:
						return new Monster(210, 1, 3720, 1155, 1080, 15840, 1020, 397000, 510000, 16711200, 2975, 169, 14222021, -2);
				}
			case 3:
				switch ($stage) {
					case 1:
						return new Monster(212, 3, 1026, 3219, 1066, 10054, 1358, 460000, 660000, 8566008, 680, 28, 14846670, -1);
					case 2:
						return new Monster(214, 3, 838, 3578, 885, 11242, 1367, 475000, 680000, 9668120, 765, 3, 15495311, -1);
					case 3:
						return new Monster(216, 3, 1054, 3733, 1152, 11396, 1270, 485000, 690000, 9891728, 892, 57, 16166597, -1);
					case 4:
						return new Monster(218, 1, 3639, 1018, 867, 14047, 1180, 430000, 550000, 15381465, 2295, 94, 16861182, 9);
					case 5:
						return new Monster(220, 1, 3748, 1079, 977, 14338, 1059, 440000, 561500, 15843490, 1955, 140, 17581974, 7);
					case 6:
						return new Monster(222, 3, 999, 3848, 962, 15466, 1387, 520000, 700000, 13795672, 1275, 78, 18327374, -1);
					case 7:
						return new Monster(224, 1, 3920, 1190, 1102, 16170, 1085, 470000, 600000, 18191250, 2720, 93, 19098075, 9);
					case 8:
						return new Monster(226, 3, 1040, 4044, 1011, 17660, 1471, 540000, 740000, 16035280, 1615, 162, 19897276, -1);
					case 9:
						return new Monster(228, 1, 4135, 1338, 1272, 18662, 1113, 490000, 625000, 21367990, 3655, 142, 20723258, 7);
					case 10:
						return new Monster(230, 1, 4191, 1367, 1303, 19112, 1124, 505000, 632000, 22074360, 3825, 170, 21576743, 50);
				}
			case 4:
				switch ($stage) {
					case 1:
						return new Monster(232, 3, 1026, 3926, 981, 14746, 1405, 580000, 800000, 13743272, 1105, 124, 22461095, -2);
					case 2:
						return new Monster(234, 3, 1048, 4034, 1008, 15972, 1452, 600000, 810000, 15013680, 1232, 45, 23374540, 7);
					case 3:
						return new Monster(236, 1, 4110, 1237, 1141, 16748, 1141, 540000, 750000, 19846380, 2635, 94, 24317845, 9);
					case 4:
						return new Monster(238, 1, 4200, 1295, 1207, 17710, 1155, 565000, 760000, 21163450, 2890, 107, 25294600, -1);
					case 5:
						return new Monster(240, 1, 4281, 1345, 1264, 18546, 1167, 575000, 772000, 22347930, 3145, 46, 26302843, 21);
					case 6:
						return new Monster(242, 3, 1121, 4367, 1091, 19476, 1593, 650000, 880000, 18930672, 1742, 39, 27343418, 9);
					case 7:
						return new Monster(244, 1, 4415, 1423, 1350, 19806, 1190, 600000, 800000, 24262350, 3570, 141, 28420280, 7);
					case 8:
						return new Monster(246, 1, 4510, 1486, 1422, 20856, 1204, 620000, 820400, 25757160, 2167, 47, 29531221, 21);
					case 9:
						return new Monster(248, 3, 1167, 4570, 1142, 21395, 1677, 700000, 900000, 21309420, 4080, 137, 30677131, -1);
					case 10:
						return new Monster(250, 3, 1181, 4636, 1159, 22000, 1704, 720000, 921000, 22088000, 2337, 172, 31862139, 24);
				}
			case 5:
				switch ($stage) {
					case 1:
						return new Monster(252, 3, 1155, 4480, 1120, 19250, 1627, 740000, 942000, 19481000, 1530, 9, 33084028, -1);
					case 2:
						return new Monster(254, 3, 1172, 4558, 1139, 20058, 1660, 760000, 965000, 20459160, 1657, 150, 34343729, 27);
					case 3:
						return new Monster(256, 3, 1184, 4608, 1152, 20416, 1680, 780000, 985000, 20987648, 1700, 36, 35645713, -1);
					case 4:
						return new Monster(258, 3, 1202, 4690, 1172, 21285, 1715, 805000, 1010000, 22051260, 1870, 153, 36987473, 27);
					case 5:
						return new Monster(260, 1, 4757, 1562, 1493, 21901, 1272, 750000, 1000000, 28580804, 3995, 17, 38369989, -1);
					case 6:
						return new Monster(262, 3, 1231, 4820, 1205, 22478, 1768, 840000, 1040000, 23646856, 2125, 151, 39798074, 27);
					case 7:
						return new Monster(264, 1, 4888, 1637, 1576, 23122, 1295, 810000, 1007000, 30636650, 4590, 161, 41269055, -1);
					case 8:
						return new Monster(266, 2, 1213, 1260, 5133, 22583, 1808, 2400000, 3000000, 12059322, 969, 118, 42784003, -1);
					case 9:
						return new Monster(268, 1, 5008, 1702, 1647, 24162, 1318, 860000, 1006000, 32497890, 5185, 160, 44347963, -1);
					case 10:
						return new Monster(270, 3, 1287, 5067, 1266, 24673, 1869, 993000, 1215000, 26745532, 2762, 171, 45958126, 20);
				}
			case 6:
				switch ($stage) {
					case 1:
						return new Monster(272, 1, 4966, 1626, 1552, 22764, 1330, 920000, 1100000, 31072860, 3910, 128, 47615630, -1);
					case 2:
						return new Monster(274, 3, 1286, 5032, 1258, 23370, 1845, 1020304, 1400000, 25707000, 2082, 86, 49325889, -1);
					case 3:
						return new Monster(276, 2, 1247, 1300, 5307, 22770, 1857, 2850000, 3500000, 12614580, 884, 77, 51085818, -1);
					case 4:
						return new Monster(278, 3, 1311, 5140, 1285, 24233, 1888, 1050000, 1420000, 27044028, 2252, 81, 52896592, -3);
					case 5:
						return new Monster(280, 3, 1328, 5220, 1305, 25052, 1922, 1080000, 1450000, 28158448, 2507, 89, 54764113, -1);
					case 6:
						return new Monster(282, 1, 5276, 1796, 1739, 25514, 1387, 1000000, 1300000, 36102312, 5270, 16, 56685021, -1);
					case 7:
						return new Monster(284, 3, 1353, 5325, 1331, 25866, 1963, 1120000, 1500000, 29487240, 2720, 88, 58660548, -1);
					case 8:
						return new Monster(286, 2, 1324, 1366, 5551, 25443, 1976, 3140000, 3800000, 16604282, 1156, 30, 60696773, -1);
					case 9:
						return new Monster(288, 3, 1380, 5440, 1360, 26840, 2010, 1140000, 1520000, 31027040, 3060, 87, 62790319, -1);
					case 10:
						return new Monster(290, 3, 1392, 5490, 1372, 27220, 2030, 1170000, 1540000, 31684080, 3187, 167, 64942539, -1);
				}
			case 7:
				switch ($stage) {
					case 1:
						return new Monster(292, 3, 1381, 5422, 1355, 25806, 1994, 1185000, 1550000, 30244632, 2380, 66, 67159972, -1);
					case 2:
						return new Monster(294, 3, 1393, 5474, 1368, 26202, 2014, 1200000, 1565000, 30918360, 2465, 97, 69438784, -1);
					case 3:
						return new Monster(296, 2, 1356, 1406, 5722, 25504, 2022, 3300000, 4000000, 15149376, 1020, 82, 71780394, -3);
					case 4:
						return new Monster(298, 1, 5581, 1903, 1844, 27054, 1466, 1130000, 1350000, 40445728, 5355, 52, 74191870, -6);
					case 5:
						return new Monster(300, 1, 5641, 1936, 1880, 27577, 1477, 1140000, 1356000, 41503384, 5865, 158, 76669139, -1);
					case 6:
						return new Monster(302, 1, 5689, 1958, 1903, 27924, 1488, 1150000, 1370000, 42304860, 5695, 135, 79213665, -1);
					case 7:
						return new Monster(304, 2, 1412, 1455, 5908, 27313, 2108, 3500000, 4200000, 16660930, 1207, 102, 81832831, -2);
					case 8:
						return new Monster(306, 1, 5784, 2001, 1949, 28584, 1509, 1210000, 1380000, 43876440, 6205, 52, 84522443, -6);
					case 9:
						return new Monster(308, 1, 5827, 2018, 1966, 28842, 1519, 1220000, 1385000, 44560888, 6290, 149, 87284046, -1);
					case 10:
						return new Monster(310, 1, 5908, 2069, 2024, 29684, 1531, 1250000, 1395000, 46158620, 7225, 168, 90125436, -6);
				}
			case 8:
				switch ($stage) {
					case 1:
						return new Monster(312, 1, 5861, 2009, 1950, 28600, 1536, 1260000, 1400000, 44759000, 5610, 38, 93042060, -5);
					case 2:
						return new Monster(314, 3, 1502, 5921, 1480, 29112, 2186, 1340000, 1600000, 36681120, 2975, 143, 96035589, -2);
					case 3:
						return new Monster(316, 1, 5991, 2082, 2031, 29794, 1559, 1300000, 1420000, 47223488, 6545, 147, 99114456, -1);
					case 4:
						return new Monster(318, 3, 1529, 6037, 1509, 30107, 2234, 1370000, 1630000, 38416532, 3357, 144, 102273668, -2);
					case 5:
						return new Monster(320, 3, 1541, 6087, 1521, 30476, 2253, 1385000, 1660000, 39131184, 3485, 99, 105514978, -1);
					case 6:
						return new Monster(322, 2, 1514, 1552, 6286, 29936, 2261, 3400000, 4300000, 19338656, 1428, 154, 108847145, -3);
					case 7:
						return new Monster(324, 1, 6178, 2166, 2119, 31080, 1601, 1360000, 1500000, 50505000, 7310, 146, 112265131, -1);
					case 8:
						return new Monster(326, 3, 1575, 6230, 1557, 31476, 2309, 1420000, 1680000, 41170608, 3825, 98, 115770753, -1);
					case 9:
						return new Monster(328, 2, 1551, 1586, 6418, 31009, 2313, 3700000, 4620000, 20403922, 1572, 156, 119373368, -3);
					case 10:
						return new Monster(330, 2, 1567, 1600, 6468, 31581, 2326, 3850000, 4700000, 20906622, 1700, 164, 123067419, 2051);
				}
			case 9:
				switch ($stage) {
					case 1:
						return new Monster(332, 1, 6290, 2184, 2129, 31229, 1638, 1420000, 1600000, 51996284, 6460, 136, 126854805, -1);
					case 2:
						return new Monster(334, 2, 1562, 1605, 6508, 30613, 2333, 3890000, 4900000, 20510710, 1326, 125, 130745487, -2);
					case 3:
						return new Monster(336, 3, 1617, 6384, 1596, 31878, 2362, 1540000, 1750000, 42971544, 3400, 99, 134733596, -1);
					case 4:
						return new Monster(338, 1, 6426, 2242, 2190, 32126, 1669, 1490000, 1700000, 54453568, 6885, 37, 138821184, -5);
					case 5:
						return new Monster(340, 2, 1597, 1638, 6636, 31537, 2386, 3900000, 4930000, 21508234, 1411, 129, 143018630, -2);
					case 6:
						return new Monster(342, 1, 6525, 2289, 2240, 32862, 1690, 1520000, 1724000, 56358328, 7395, 138, 147319803, 2004);
					case 7:
						return new Monster(344, 3, 1661, 6567, 1641, 33110, 2433, 1700000, 2000000, 45691800, 3740, 90, 151726857, 8);
					case 8:
						return new Monster(346, 3, 1671, 6608, 1652, 33352, 2449, 1750000, 2050000, 46292576, 3782, 42, 156250805, 9);
					case 9:
						return new Monster(348, 2, 1648, 1685, 6813, 33038, 2454, 4200000, 5400000, 23060524, 1615, 74, 160885033, -2);
				}
			case 10:
				switch ($stage) {
					case 1:
						return new Monster(352, 3, 1708, 6765, 1691, 34562, 2489, 1840000, 2200000, 48801544, 4356, 101, 170502819, 24);
					case 2:
						return new Monster(354, 1, 6810, 2393, 2351, 34859, 1702, 1800000, 2000000, 61874724, 8925, 115, 175491135, 24);
					case 3:
						return new Monster(356, 1, 6855, 2409, 2367, 35150, 1705, 1850000, 2050000, 62742752, 9137, 159, 180599019, 13);
					case 4:
						return new Monster(358, 1, 6899, 2424, 2383, 35442, 1708, 1900000, 2110000, 63618392, 9350, 21, 185838637, -4);
					case 5:
						return new Monster(360, 3, 1752, 6944, 1736, 35728, 2544, 3000000, 4000000, 51591232, 4781, 61, 191202824, -1);
					case 6:
						return new Monster(362, 3, 1762, 6988, 1747, 36008, 2557, 3400000, 4000000, 52283616, 4887, 163, 196694080, -1);
					case 7:
						return new Monster(364, 2, 1742, 1773, 7156, 35607, 2563, 7000000, 9000000, 25993110, 1997, 161, 202325345, -1);
					case 8:
						return new Monster(366, 1, 7076, 2485, 2447, 36570, 1723, 2900000, 3500000, 67105952, 10200, 159, 208088681, 13);
					case 9:
						return new Monster(368, 1, 7119, 2500, 2463, 36844, 1727, 3000000, 3600000, 67977184, 10412, 158, 213986701, -1);
					case 10:
						return new Monster(370, 1, 7163, 2516, 2479, 37114, 1731, 3100000, 3700000, 68846472, 10625, 165, 220033230, 10);
				}
			case 11:
				switch ($stage) {
					case 1:
						return new Monster(372, 1, 7206, 2531, 2494, 37389, 1736, 3200000, 3750000, 69730488, 10837, 173, 226219912, 20);
					case 2:
						return new Monster(374, 3, 1826, 7249, 1812, 37658, 2639, 4000000, 5000000, 56487000, 5525, 174, 232549429, 7);
					case 3:
						return new Monster(376, 1, 7292, 2561, 2525, 37922, 1745, 3500000, 4200000, 71482968, 11262, 175, 239026142, 12);
					case 4:
						return new Monster(378, 1, 7336, 2576, 2541, 38192, 1750, 3700000, 4400000, 72373840, 11475, 176, 245671462, 6);
					case 5:
						return new Monster(380, 2, 1830, 1858, 7489, 37846, 2673, 10000000, 12500000, 28838652, 2337, 177, 252458197, -1);
					case 6:
						return new Monster(382, 3, 1869, 7421, 1855, 38714, 2694, 4000000, 5100000, 59309848, 5950, 178, 259411408, -4);
					case 7:
						return new Monster(384, 1, 7464, 2620, 2586, 38978, 1765, 4000000, 4800000, 75032648, 12112, 179, 266521891, 20);
					case 8:
						return new Monster(386, 3, 1890, 7507, 1876, 39237, 2721, 4400000, 5200000, 60738876, 6162, 180, 273792656, 29);
					case 9:
						return new Monster(388, 2, 1874, 1900, 7654, 38918, 2729, 10100000, 12500000, 30278204, 2507, 181, 281239819, 6);
					case 10:
						return new Monster(390, 1, 7592, 2665, 2632, 39754, 1781, 4200000, 5000000, 77719072, 12750, 182, 288853442, -1);
				}
			case 12:
				switch ($stage) {
					case 1:
						return new Monster(392, 2, 1895, 1921, 7737, 39440, 2756, 10300000, 13000000, 30999840, 2592, 183, 296636662, -1);
					case 2:
						return new Monster(394, 2, 1906, 1931, 7778, 39704, 2770, 10500000, 13200000, 31366160, 2635, 184, 300000000, -1);
					case 3:
						return new Monster(396, 1, 7718, 2709, 2677, 40513, 1797, 4200000, 5500000, 80418304, 13387, 185, 300000000, -1);
					case 4:
						return new Monster(398, 3, 1952, 7761, 1940, 40766, 2804, 5000000, 7000000, 65062536, 6800, 186, 300000000, -5);
					case 5:
						return new Monster(400, 2, 1938, 1963, 7901, 40480, 2812, 11000000, 14000000, 32464960, 2762, 187, 300000000, -1);
					case 6:
						return new Monster(404, 1, 7884, 2766, 2736, 41476, 1824, 4800000, 6000000, 83988896, 14025, 188, 300000000, 30);
					case 7:
						return new Monster(408, 3, 2003, 7965, 1991, 41932, 2874, 5300000, 7000000, 68600752, 7118, 189, 300000000, -1);
					case 8:
						return new Monster(412, 1, 8046, 2823, 2793, 42383, 1854, 5200000, 6300000, 87520896, 14450, 190, 300000000, -5);
					case 9:
						return new Monster(416, 1, 8127, 2851, 2821, 42840, 1868, 5400000, 6550000, 89321400, 14662, 191, 300000000, 53);
					case 10:
						return new Monster(420, 1, 8208, 2880, 2850, 43296, 1884, 5700000, 6750000, 91138080, 14875, 192, 300000000, 51);
				}
			case 13:
				switch ($stage) {
					case 1:
						return new Monster(424, 1, 9041, 3171, 3141, 47883, 2049, 6000000, 7200000, 101751376, 15087, 243, 300000000, -1);
					case 2:
						return new Monster(428, 2, 2342, 2365, 9511, 49432, 3374, 11500000, 14300000, 42414372, 3060, 244, 300000000, 1003);
					case 3:
						return new Monster(432, 1, 9811, 3441, 3411, 52140, 2201, 7000000, 8500000, 112883104, 15512, 245, 300000000, -1);
					case 4:
						return new Monster(436, 2, 2545, 2568, 10322, 53922, 3657, 12500000, 16000000, 47127828, 3145, 246, 300000000, 1008);
					case 5:
						return new Monster(440, 1, 10958, 3842, 3813, 58465, 2428, 7600000, 9000000, 128915328, 15937, 247, 300000000, 0);
					case 6:
						return new Monster(444, 3, 3133, 12490, 3122, 66896, 4454, 8400000, 11000000, 119074880, 8075, 248, 300000000, 2056);
					case 7:
						return new Monster(448, 2, 3360, 3383, 13579, 71868, 4796, 14000000, 18000000, 64537464, 3272, 249, 300000000, 1056);
					case 8:
						return new Monster(452, 1, 14533, 5093, 5064, 78150, 3140, 8700000, 11000000, 177009744, 16575, 250, 300000000, 55);
					case 9:
						return new Monster(456, 1, 15630, 5477, 5448, 84188, 3359, 9000000,11250000, 192369584, 16787, 251, 300000000, 11);
					case 10:
						return new Monster(460, 1, 19366, 6785, 6756, 104742, 4105, 10000000, 12000000, 241430304, 17000, 252, 300000000, 22);
				}
			case 14:
				switch($stage){
					// ($lvl, $class, $str, $agi, $int, $wit, $luck, $dmg_min, $dmg_max, $hp, $armor, $id, $exp, $weapon_id, $shield_id = 0)
					case 1:
						return new Monster(464, 1, 9040, 3173, 3135, 47416, 2110, 10500000, 12100000, 110242200, 1, 600, 300000000, 0);
					case 2:
						return new Monster(468, 1, 9126, 3202, 3166, 47938, 2120, 11000000, 12500000, 112414608, 1, 601, 300000000, 0);
					case 3:
						return new Monster(472, 2, 4576, 4634, 18651, 95656, 6636, 23000000, 26000000, 90490576, 1, 602, 300000000, 0);
					case 4:
						return new Monster(476, 1, 18592, 6524, 6454, 97944, 4284, 12300000, 13600000, 233596448, 1, 603, 300000000, 0);
					case 5:
						return new Monster(480, 1, 18761, 6582, 6514, 98962, 4306, 12600000, 14200000, 238003616, 1, 604, 300000000, 0);
					case 6:
						return new Monster(484, 2, 7945, 8026, 32266, 167706, 11446, 28000000, 32700000, 162674816, 1, 605, 300000000, 0);
					case 7:
						return new Monster(488, 3, 8625, 34344, 8586, 182798, 12301, 16000000, 19000000, 357552896, 1, 606, 300000000, 0);
					case 8:
						return new Monster(492, 1, 41522, 14558, 14457, 222387, 9089, 15000000, 17000000, 548183936, 1, 607, 300000000, 0);
					case 9:
						return new Monster(496, 1, 63793, 22358, 22230, 343024, 13786, 15300000, 17700000, 852414656, 1, 608, 300000000, 0);
						//UNKNOWN DATA
					case 10:
						return new Monster(500, 2, 24000, 24000, 61000, 55000, 13800, 30000000, 36000000, 298351043, 1, 609, 300000000, 0);
					case 11:
						return new Monster(500, 1, 64000, 21200, 20950, 57600, 14100, 15600000, 18100000, 969568000, 1, 610, 300000000, 0);
					case 12:
						return new Monster(500, 2, 62400, 21900, 21650, 59600, 14500, 32000000, 37000000, 1085658000, 1, 611, 300000000, 0);
					case 13:
						return new Monster(500, 1, 32000, 32400, 130400, 121600, 46400, 16300000, 17800000, 396031069, 1, 612, 300000000, 0);
					case 14:
						return new Monster(500, 3, 132800, 46600, 46100, 127200, 30600, 20000000, 25000000, 1026876000, 1, 613, 300000000, 0);
					case 15:
						return new Monster(500, 1, 136800, 48000, 47500, 131200, 31400, 18000000, 20000000, 1310256000, 1, 614, 300000000, 0);
					case 16:
						return new Monster(500, 1, 59100, 59700, 240000, 226800, 85140, 19200000, 21900000, 1394583200, 1, 615, 300000000, 0);
					case 17:
						return new Monster(500, 2, 65400, 260400, 65100, 252000, 93270, 40000000, 48000000, 506984000, 1, 616, 300000000, 0);
					case 18:
						return new Monster(500, 2, 320700, 112440, 111660, 312300, 70200, 42000000, 50000000, 564931520, 1, 617, 300000000, 0);
					case 19:
						return new Monster(500, 1, 501600, 175800, 174480, 490400, 108400, 21000000, 24000000, 1708732000, 1, 618, 300000000, 0);
					case 20:
						return new Monster(500, 3, 168000, 168000, 676800, 659200, 238400, 30000000, 35000000, 1500000000, 1, 619, 300000000, 0);
				}
		}
		
		return null;
	}

	public static function getTowerMonster($stage){
		//raw stange +1
		$stage++;
		switch ($stage) {
			case 1:
				return new Monster((198 + 2 * $stage) , 1, 4194, 1697, 1665, 3985, 2589, 365356, 548792, 16019700, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 2:
				return new Monster((198 + 2 * $stage) , 2, 1714, 1682, 4240, 4034, 2621, 365356, 548792, 6551216, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 3:
				return new Monster((198 + 2 * $stage) , 3, 1733, 4288, 1696, 4081, 2655, 365356, 548792, 13385680, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 4:
				return new Monster((198 + 2 * $stage) , 1, 4340, 1746, 1715, 4128, 2690, 365356, 548792, 17089920, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 5:
				return new Monster((198 + 2 * $stage) , 1, 4385, 1763, 1733, 4178, 2726, 365356, 548792, 17464040, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 6:
				return new Monster((198 + 2 * $stage) , 2, 1780, 1750, 4434, 4228, 2756, 365356, 548792, 7136864, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 7:
				return new Monster((198 + 2 * $stage) , 1, 4482, 1794, 1766, 4275, 2790, 365356, 548792, 18211500, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 8:
				return new Monster((198 + 2 * $stage) , 2, 1811, 1784, 4532, 4321, 2826, 365356, 548792, 7432120, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 9:
				return new Monster((198 + 2 * $stage) , 2, 1828, 1804, 4577, 4370, 2857, 365356, 548792, 7586320, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 10:
				return new Monster((198 + 2 * $stage) , 1, 4627, 1847, 1818, 4420, 2891, 365356, 548792, 19359600, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 11:
				return new Monster((198 + 2 * $stage) , 2, 1864, 1835, 4678, 4463, 2925, 365356, 548792, 7890584, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 12:
				return new Monster((198 + 2 * $stage) , 2, 1877, 1853, 4721, 4513, 2960, 365356, 548792, 8051192, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 13:
				return new Monster((198 + 2 * $stage) , 1, 4771, 1898, 1869, 4561, 2991, 365356, 548792, 20524500, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 14:
				return new Monster((198 + 2 * $stage) , 1, 4820, 1909, 1887, 4610, 3027, 365356, 548792, 20929400, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 15:
				return new Monster((198 + 2 * $stage) , 1, 4870, 1928, 1907, 4655, 3060, 365356, 548792, 21319900, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 16:
				return new Monster((198 + 2 * $stage) , 2, 1943, 1925, 4914, 4705, 3092, 365356, 548792, 8694840, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 17:
				return new Monster((198 + 2 * $stage) , 1, 4964, 1962, 1940, 4755, 3126, 365356, 548792, 22158300, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 18:
				return new Monster((198 + 2 * $stage) , 3, 1976, 5013, 1958, 4800, 3163, 365356, 548792, 18048000, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 19:
				return new Monster((198 + 2 * $stage) , 1, 5059, 1993, 1975, 4848, 3198, 365356, 548792, 22979520, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 20:
				return new Monster((198 + 2 * $stage) , 3, 2010, 5107, 1992, 4897, 3228, 365356, 548792, 18726128, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 21:
				return new Monster((198 + 2 * $stage) , 1, 5157, 2024, 2009, 4945, 3262, 365356, 548792, 23834900, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 22:
				return new Monster((198 + 2 * $stage) , 1, 5206, 2043, 2028, 4990, 3295, 365356, 548792, 24251400, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 23:
				return new Monster((198 + 2 * $stage) , 1, 5252, 2058, 2042, 5040, 3330, 365356, 548792, 24696000, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 24:
				return new Monster((198 + 2 * $stage) , 1, 5302, 2077, 2061, 5090, 3362, 365356, 548792, 25144600, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 25:
				return new Monster((198 + 2 * $stage) , 2, 2092, 2078, 5352, 5135, 3397, 365356, 548792, 10228920, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 26:
				return new Monster((198 + 2 * $stage) , 3, 2108, 5400, 2094, 5183, 3429, 365356, 548792, 20814928, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 27:
				return new Monster((198 + 2 * $stage) , 3, 2141, 5446, 2129, 5237, 3475, 365356, 548792, 21199376, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 28:
				return new Monster((198 + 2 * $stage) , 1, 5498, 2173, 2162, 5290, 3522, 365356, 548792, 26979000, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 29:
				return new Monster((198 + 2 * $stage) , 1, 5549, 2207, 2198, 5339, 3567, 365356, 548792, 27442460, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 30:
				return new Monster((198 + 2 * $stage) , 1, 5596, 2241, 2228, 5393, 3613, 365356, 548792, 27935740, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 31:
				return new Monster((198 + 2 * $stage) , 1, 5646, 2275, 2263, 5448, 3657, 365356, 548792, 28438560, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 32:
				return new Monster((198 + 2 * $stage) , 2, 2309, 2296, 5698, 5497, 3703, 365356, 548792, 11565688, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 33:
				return new Monster((198 + 2 * $stage) , 1, 5744, 2340, 2331, 5551, 3751, 365356, 548792, 29420300, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 34:
				return new Monster((198 + 2 * $stage) , 1, 5796, 2377, 2362, 5603, 3794, 365356, 548792, 29920020, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 35:
				return new Monster((198 + 2 * $stage) , 1, 5846, 2405, 2396, 5657, 3840, 365356, 548792, 30434660, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 36:
				return new Monster((198 + 2 * $stage) , 3, 2438, 5895, 2429, 5708, 3886, 365356, 548792, 24749888, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 37:
				return new Monster((198 + 2 * $stage) , 3, 2473, 5947, 2464, 5763, 3930, 365356, 548792, 25172784, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 38:
				return new Monster((198 + 2 * $stage) , 1, 5995, 2507, 2498, 5816, 3975, 365356, 548792, 31988000, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 39:
				return new Monster((198 + 2 * $stage) , 1, 6046, 2538, 2531, 5863, 4022, 365356, 548792, 32481020, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 40:
				return new Monster((198 + 2 * $stage) , 1, 6092, 2572, 2566, 5917, 4069, 365356, 548792, 33016860, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 41:
				return new Monster((198 + 2 * $stage) , 2, 2606, 2600, 6144, 5972, 4112, 365356, 548792, 13425056, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 42:
				return new Monster((198 + 2 * $stage) , 2, 2641, 2631, 6194, 6021, 4158, 365356, 548792, 13631544, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 43:
				return new Monster((198 + 2 * $stage) , 1, 6245, 2671, 2668, 6073, 4203, 365356, 548792, 34616100, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 44:
				return new Monster((198 + 2 * $stage) , 3, 2705, 6295, 2699, 6130, 4248, 365356, 548792, 28148960, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 45:
				return new Monster((198 + 2 * $stage) , 3, 2741, 6342, 2733, 6178, 4295, 365356, 548792, 28567072, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 46:
				return new Monster((198 + 2 * $stage) , 1, 6396, 2771, 2765, 6231, 4340, 365356, 548792, 36264420, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 47:
				return new Monster((198 + 2 * $stage) , 3, 2804, 6444, 2798, 6284, 4385, 365356, 548792, 29459392, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 48:
				return new Monster((198 + 2 * $stage) , 1, 2838, 2834, 6492, 6340, 4430, 365356, 548792, 14962400, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 49:
				return new Monster((198 + 2 * $stage) , 2, 2874, 2866, 6542, 6388, 4477, 365356, 548792, 15177888, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 50:
				return new Monster((198 + 2 * $stage) , 1, 6593, 2905, 2902, 6441, 4523, 365356, 548792, 38517180, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 51:
				return new Monster((198 + 2 * $stage) , 1, 6640, 2937, 2932, 6494, 4569, 365356, 548792, 39093880, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 52:
				return new Monster((198 + 2 * $stage) , 1, 2977, 6707, 2973, 6555, 4612, 365356, 548792, 31778640, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 53:
				return new Monster((198 + 2 * $stage) , 3, 6776, 3010, 3013, 6616, 4654, 365356, 548792, 40357600, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 54:
				return new Monster((198 + 2 * $stage) , 2, 3047, 3052, 6839, 6679, 4699, 365356, 548792, 16403624, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 55:
				return new Monster((198 + 2 * $stage) , 1, 6906, 3089, 3091, 6741, 4741, 365356, 548792, 41659380, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 56:
				return new Monster((198 + 2 * $stage) , 1, 6973, 3121, 3132, 6805, 4784, 365356, 548792, 42327100, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 57:
				return new Monster((198 + 2 * $stage) , 1, 7040, 3160, 3173, 6864, 4828, 365356, 548792, 42968640, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 58:
				return new Monster((198 + 2 * $stage) , 1, 3197, 7106, 3211, 6930, 4871, 365356, 548792, 34927200, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 59:
				return new Monster((198 + 2 * $stage) , 3, 3235, 3249, 7171, 6990, 4915, 365356, 548792, 17726640, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 60:
				return new Monster((198 + 2 * $stage) , 1, 7240, 3270, 3291, 7049, 4958, 365356, 548792, 44972620, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 61:
				return new Monster((198 + 2 * $stage) , 1, 7303, 3309, 3331, 7112, 5005, 365356, 548792, 45659040, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 62:
				return new Monster((198 + 2 * $stage) , 3, 7370, 3348, 3368, 7173, 5043, 365356, 548792, 46337580, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 63:
				return new Monster((198 + 2 * $stage) , 2, 7436, 3382, 3409, 7236, 5088, 365356, 548792, 47034000, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 64:
				return new Monster((198 + 2 * $stage) , 1, 3148, 7502, 3447, 7298, 5134, 365356, 548792, 38183136, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 65:
				return new Monster((198 + 2 * $stage) , 1, 7567, 3458, 3487, 7359, 5177, 365356, 548792, 48422220, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 66:
				return new Monster((198 + 2 * $stage) , 1, 7634, 3495, 3528, 7424, 5217, 365356, 548792, 49146880, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 67:
				return new Monster((198 + 2 * $stage) , 1, 3531, 7701, 3568, 7483, 5265, 365356, 548792, 39869424, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 68:
				return new Monster((198 + 2 * $stage) , 2, 3567, 3607, 7767, 7544, 5307, 365356, 548792, 20217920, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 69:
				return new Monster((198 + 2 * $stage) , 1, 7833, 3609, 3645, 7606, 5347, 365356, 548792, 51264440, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 70:
				return new Monster((198 + 2 * $stage) , 1, 7900, 3641, 3687, 7669, 5392, 365356, 548792, 51995820, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 71:
				return new Monster((198 + 2 * $stage) , 1, 7967, 3680, 3729, 7728, 5436, 365356, 548792, 52704960, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 72:
				return new Monster((198 + 2 * $stage) , 1, 8031, 3717, 3764, 7792, 5480, 365356, 548792, 53453120, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 73:
				return new Monster((198 + 2 * $stage) , 1, 3755, 3804, 8098, 7855, 5523, 365356, 548792, 21679800, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 74:
				return new Monster((198 + 2 * $stage) , 3, 8167, 3790, 3845, 7914, 5566, 365356, 548792, 54923160, 15087, -1 * (399 + $stage) , 178017293, -1);
			case 75:
				return new Monster((198 + 2 * $stage) , 1, 8229, 3829, 3886, 7977, 5611, 365356, 548792, 55679460, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 76:
				return new Monster((198 + 2 * $stage) , 1, 8297, 3868, 3923, 8038, 5651, 365356, 548792, 56426760, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 77:
				return new Monster((198 + 2 * $stage) , 1, 8541, 3976, 4007, 8268, 5767, 365356, 548792, 58372080, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 78:
				return new Monster((198 + 2 * $stage) , 1, 8787, 4088, 4093, 8494, 5881, 365356, 548792, 60307400, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 79:
				return new Monster((198 + 2 * $stage) , 1, 4200, 9030, 4174, 8726, 5993, 365356, 548792, 49842912, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 80:
				return new Monster((198 + 2 * $stage) , 1, 9274, 4313, 4256, 8956, 6107, 365356, 548792, 64304080, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 81:
				return new Monster((198 + 2 * $stage) , 1, 9996, 4642, 4556, 9639, 6534, 365356, 548792, 69593584, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 82:
				return new Monster((198 + 2 * $stage) , 1, 10761, 4999, 4877, 10373, 6989, 365356, 548792, 75311608, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 83:
				return new Monster((198 + 2 * $stage) , 1, 11583, 5380, 5215, 11157, 7466, 365356, 548792, 81447928, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 84:
				return new Monster((198 + 2 * $stage) , 1, 12460, 5781, 5578, 11994, 7980, 365356, 548792, 88041464, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 85:
				return new Monster((198 + 2 * $stage) , 3, 6214, 5957, 12883, 8525, 11994, 365356, 548792, 95076544, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 86:
				return new Monster((198 + 2 * $stage) , 2, 3567, 3607, 7767, 7544, 5307, 365356, 548792, 39498144, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 87:
				return new Monster((198 + 2 * $stage) , 1, 12410, 5781, 5578, 11994, 7980, 365356, 548792, 45123431, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 88:
				return new Monster((198 + 2 * $stage) , 1, 12820, 5781, 5578, 11994, 7980, 365356, 548792, 57432123, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 89:
				return new Monster((198 + 2 * $stage) , 1, 13230, 5781, 5578, 12394, 7980, 365356, 548792, 75123785, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 90:
				return new Monster((198 + 2 * $stage) , 1, 14360, 5781, 5578, 12994, 7980, 365356, 548792, 95126412, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 91:
				return new Monster((198 + 2 * $stage) , 1, 14440, 5781, 5578, 13594, 7980, 365356, 548792, 63234112, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 92:
				return new Monster((198 + 2 * $stage) , 1, 14830, 5781, 5578, 13994, 7980, 365356, 548792, 84412354, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 93:
				return new Monster((198 + 2 * $stage) , 1, 15020, 5781, 5578, 14994, 7980, 365356, 548792, 96543213, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 94:
				return new Monster((198 + 2 * $stage) , 1, 15430, 5781, 5578, 14394, 7980, 365356, 548792, 80541035, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 95:
				return new Monster((198 + 2 * $stage) , 1, 15680, 5781, 5578, 15994, 7980, 365356, 548792, 93312345, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 96:
				return new Monster((198 + 2 * $stage) , 1, 16070, 5781, 5578, 15994, 7980, 365356, 548792, 53354621, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 97:
				return new Monster((198 + 2 * $stage) , 1, 16210, 5781, 5578, 16494, 7980, 365356, 548792, 65432163, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 98:
				return new Monster((198 + 2 * $stage) , 1, 16420, 5781, 5578, 16994, 7980, 365356, 548792, 85531567, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 99:
				return new Monster((198 + 2 * $stage) , 1, 17450, 5781, 5578, 17594, 7980, 365356, 548792, 98543123, 15087, -1 *(399 + $stage) , 178017293, -1);
			case 100:
				return new Monster((198 + 2 * $stage) , 1, 18000, 5781, 5578, 18994, 7980, 365356, 548792, 100000000, 15087, -1 *(399 + $stage) , 178017293, -1);
		}
		
		return null;
	}

	public static function getGuildPortalMonster($lvl){
		$stage = (($lvl - 1) % 10) + 1;
		// $lvl++;
		// var_dump($stage);
		// var_dump($lvl);
		$lvl++;
		switch($lvl){
			case 1:
				return new Monster(200, 3, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 500, 178017293, -1);
			case 2:
				return new Monster(206, 3, 1057, 4257, 1057, 1394050, 1570, 365356, 548792, 1154273408, 15087, 501, 178017293, -1);
			case 3:
				return new Monster(212, 1, 4644, 1648, 1619, 1504650, 1141, 365356, 548792, 1602452224, 15087, 502, 178017293, -1);
			case 4:
				return new Monster(218, 1, 4989, 1755, 1737, 1638000, 1257, 365356, 548792, 1793609984, 15087, 503, 178017293, -1);
			case 5:
				return new Monster(224, 1, 5359, 1867, 1847, 1761200, 1324, 365356, 548792, 1981350016, 15087, 504, 178017293, -1);
			case 6:
				return new Monster(230, 1, 6394, 2047, 2013, 1703665, 1405, 365356, 548792, 1967733120, 15087, 505, 178017293, -1);
			case 7:
				return new Monster(236, 1, 7864, 2215, 2192, 1664159, 1556, 365356, 548792, 1972028416, 15087, 506, 178017293, -1);
			case 8:
				return new Monster(242, 3, 1675, 7273, 1671, 2044152, 2455, 365356, 548792, 1986915712, 15087, 507, 178017293, -1);
			case 9:
				return new Monster(248, 1, 10527, 2536, 2458, 1603929, 1721, 365356, 548792, 1996891648, 15087, 508, 178017293, -1);
			case 10:
				return new Monster(254, 2, 1879, 1909, 7710, 2465050, 2774, 365356, 548792, 1257175552, 15087, 509, 178017293, -1);
			
			case 11:
				return new Monster(260 , 3, 2011, 11354, 2005, 1890766, 2947, 365356, 548792, 1973959680, 15087, 510, 178017293, -1);
			case 12:
				return new Monster(266, 1, 16374, 3029, 2946, 1481540, 2038, 365356, 548792, 1977855872, 15087, 511, 178017293, -1);
			case 13:
				return new Monster(274, 2, 2254, 2288, 9230, 2969400, 3313, 365356, 548792, 1621292416, 15087, 512, 178017293, -1);
			case 14:
				return new Monster(280, 2, 2365, 2412, 9744, 3140200, 3494, 365356, 548792, 1752231552, 15087, 513, 178017293, -1);
			case 15:
				return new Monster(286, 1, 24734, 3588, 3501, 1384461, 2394, 365356, 548792, 1972856960, 15087, 514, 178017293, -1);
			case 16:
				return new Monster(292, 3, 2700, 22630, 2691, 1691729, 3907, 365356, 548792, 1969172608, 15087, 515, 178017293, -1);
			case 17:
				return new Monster(298, 3, 2823, 25316, 2813, 1675855, 4104, 365356, 548792, 1990915712, 15087, 516, 178017293, -1);
			case 18:
				return new Monster(304, 1, 35079, 4151, 4060, 1315900, 2748, 365356, 548792, 1993588480, 15087, 517, 178017293, -1);
			case 19:
				return new Monster(310, 1, 37208, 4226, 4175, 1294388, 2787, 365356, 548792, 1999829504, 15087, 518, 178017293, -1);
			case 20:
				return new Monster(314, 2, 3022, 3073, 15808, 3164802, 4430, 365356, 548792, 1993825280, 15087, 519, 178017293, -1);
		
			case 21:
				return new Monster(320, 1, 42026, 4404, 4313, 1240767, 2893, 365356, 548792, 1991431040, 15087, 520, 178017293, -1);
			case 22:
				return new Monster(326, 2, 3164, 3215, 17814, 3046282, 4568, 365356, 548792, 1992268416, 15087, 521, 178017293, -1);
			case 23:
				return new Monster(332, 2, 3203, 3254, 18881, 2978933, 4683, 365356, 548792, 1983969408, 15087, 522, 178017293, -1);
			case 24:
				return new Monster(338, 1, 50181, 4657, 4566, 1165639, 3038, 365356, 548792, 1975758080, 15087, 523, 178017293, -1);
			case 25:
				return new Monster(344, 3, 3385, 42562, 3375, 1428058, 4831, 365356, 548792, 1970720000, 15087, 524, 178017293, -1);
			case 26:
				return new Monster(350, 1, 56194, 4795, 4756, 1117865, 3156, 365356, 548792, 1961853056, 15087, 525, 178017293, -1);
			case 27:
				return new Monster(356, 1, 73865, 5464, 5413, 1111913, 3535, 365356, 548792, 1984764672, 15087, 526, 178017293, -1);
			case 28:
				return new Monster(362, 3, 4126, 66187, 4076, 1373206, 5868, 365356, 548792, 1993895168, 15087, 527, 178017293, -1);
			case 29:
				return new Monster(368, 1, 94038, 6040, 6001, 1070322, 3867, 365356, 548792, 1974744064, 15087, 528, 178017293, -1);
			case 30:
				return new Monster(374, 2, 4484, 4535, 41801, 2658346, 6480, 365356, 548792, 1993759488, 15087, 529, 178017293, -1);
				// end of known data
		
			case 31:
				return new Monster(380, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 530, 178017293, -1);
			case 32:
				return new Monster(386, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 531, 178017293, -1);
			case 33:
				return new Monster(392, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 532, 178017293, -1);
			case 34:
				return new Monster(398, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 533, 178017293, -1);
			case 35:
				return new Monster(404, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 534, 178017293, -1);
			case 36:
				return new Monster(410, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 535, 178017293, -1);
			case 37:
				return new Monster(416, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 536, 178017293, -1);
			case 38:
				return new Monster(422, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 537, 178017293, -1);
			case 39:
				return new Monster(428, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 538, 178017293, -1);
			case 40:
				return new Monster(434, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 539, 178017293, -1);
		
			case 41:
				return new Monster(440, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 540, 178017293, -1);
			case 42:
				return new Monster(446, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 541, 178017293, -1);
			case 43:
				return new Monster(452, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 542, 178017293, -1);
			case 44:
				return new Monster(458, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 543, 178017293, -1);
			case 45:
				return new Monster(464, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 544, 178017293, -1);
			case 46:
				return new Monster(470, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 545, 178017293, -1);
			case 47:
				return new Monster(476, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 546, 178017293, -1);
			case 48:
				return new Monster(482, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 547, 178017293, -1);
			case 49:
				return new Monster(488, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 548, 178017293, -1);
			case 50:
				return new Monster(494, 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, 549, 178017293, -1);
		
		}
	}

	public static function getPortalMonster($lvl){
		$stage = (($lvl - 1) % 10) + 1;
		switch ($lvl) {
				case 1:
					return new Monster((194 + 6 * $stage) , 1, 3835, 1344, 1330, 35760, 945, 365356, 548792, 35938800, 15087, (549 + $stage) , 178017293, -1);
				case 2:
					return new Monster((194 + 6 * $stage) , 1, 4308, 1490, 1475, 39810, 1077, 365356, 548792, 41203352, 15087, (549 + $stage) , 178017293, -1);
				case 3:
					return new Monster((194 + 6 * $stage) , 1, 4654, 1646, 1577, 43090, 1141, 365356, 548792, 45890848, 15087, (549 + $stage) , 178017293, -1);
				case 4:
					return new Monster((194 + 6 * $stage) , 3, 1259, 5010, 1257, 46900, 1811, 365356, 548792, 41084400, 15087, (549 + $stage) , 178017293, -1);
				case 5:
					return new Monster((194 + 6 * $stage) , 1, 5357, 1877, 1857, 50300, 1334, 365356, 548792, 56587500, 15087, (549 + $stage) , 178017293, -1);
				case 6:
					return new Monster((194 + 6 * $stage) , 2, 1448, 1473, 5852, 52910, 2092, 365356, 548792, 24444420, 15087, (549 + $stage) , 178017293, -1);
				case 7:
					return new Monster((194 + 6 * $stage) , 1, 6307, 2225, 2190, 59480, 1514, 365356, 548792, 70483800, 15087, (549 + $stage) , 178017293, -1);
				case 8:
					return new Monster((194 + 6 * $stage) , 1, 6707, 2351, 2327, 63300, 1641, 365356, 548792, 76909504, 15087, (549 + $stage) , 178017293, -1);
				case 9:
					return new Monster((194 + 6 * $stage) , 3, 1825, 7181, 1768, 67370, 2599, 365356, 548792, 67100520, 15087, (549 + $stage) , 178017293, -1);
				case 10:
					return new Monster((194 + 6 * $stage) , 1, 7575, 2670, 2643, 71650, 1804, 365356, 548792, 91353752, 15087, (549 + $stage) , 178017293, -1);
				
				case 11:
					return new Monster((254 + 6 * $stage) , 3, 2021, 8052, 2015, 76260, 2945, 365356, 548792, 79615440, 15087, (559 + $stage) , 178017293, -1);
				case 12:
					return new Monster((254 + 6 * $stage) , 2, 2145, 2137, 8676, 79570, 3108, 365356, 548792, 42490380, 15087, (559 + $stage) , 178017293, -1);
				case 13:
					return new Monster((254 + 6 * $stage) , 2, 2252, 2298, 9240, 84820, 3271, 365356, 548792, 46311720, 15087, (559 + $stage) , 178017293, -1);
				case 14:
					return new Monster((254 + 6 * $stage) , 3, 2411, 9601, 2403, 91250, 3501, 365356, 548792, 101835000, 15087, (559 + $stage) , 178017293, -1);
				case 15:
					return new Monster((254 + 6 * $stage) , 1, 10178, 3546, 3499, 96320, 2404, 365356, 548792, 137256000, 15087, (559 + $stage) , 178017293, -1);
				case 16:
					return new Monster((254 + 6 * $stage) , 1, 10716, 3773, 3736, 102050, 2507, 365356, 548792, 148482752, 15087, (559 + $stage) , 178017293, -1);
				case 17:
					return new Monster((254 + 6 * $stage) , 3, 2833, 11280, 2823, 107530, 4102, 365356, 548792, 127745640, 15087, (559 + $stage) , 178017293, -1);
				case 18:
					return new Monster((254 + 6 * $stage) , 2, 2942, 2941, 11900, 110310, 4250, 365356, 548792, 66847860, 15087, (559 + $stage) , 178017293, -1);
				case 19:
					return new Monster((254 + 6 * $stage) , 2, 2993, 3032, 12183, 112620, 4313, 365356, 548792, 69599160, 15087, (559 + $stage) , 178017293, -1);
				case 20:
					return new Monster((254 + 6 * $stage) , 2, 3032, 3083, 12402, 115330, 4440, 365356, 548792, 72657904, 15087, (559 + $stage) , 178017293, -1);
			
				case 21:
					return new Monster((314 + 6 * $stage) , 3, 3163, 12462, 3113, 119120, 4513, 365356, 548792, 152950080, 15087, (569 + $stage) , 178017293, -1);
				case 22:
					return new Monster((314 + 6 * $stage) , 3, 3214, 12733, 3204, 121430, 4576, 365356, 548792, 158830432, 15087, (569 + $stage) , 178017293, -1);
				case 23:
					return new Monster((314 + 6 * $stage) , 3, 3253, 12964, 3243, 124140, 4703, 365356, 548792, 165354480, 15087, (569 + $stage) , 178017293, -1);
				case 24:
					return new Monster((314 + 6 * $stage) , 2, 3304, 3303, 13354, 124730, 4756, 365356, 548792, 84566944, 15087, (569 + $stage) , 178017293, -1);
				case 25:
					return new Monster((314 + 6 * $stage) , 3, 3395, 13454, 3385, 128640, 4829, 365356, 548792, 177853200, 15087, (569 + $stage) , 178017293, -1);
				case 26:
					return new Monster((314 + 6 * $stage) , 1, 13674, 4805, 4754, 131350, 3166, 365356, 548792, 230519248, 15087, (569 + $stage) , 178017293, -1);
				case 27:
					return new Monster((314 + 6 * $stage) , 3, 3909, 15600, 3899, 150620, 5613, 365356, 548792, 215085360, 15087, (569 + $stage) , 178017293, -1);
				case 28:
					return new Monster((314 + 6 * $stage) , 1, 16416, 5727, 5728, 158250, 3680, 365356, 548792, 287223744, 15087, (569 + $stage) , 178017293, -1);
				case 29:
					return new Monster((314 + 6 * $stage) , 2, 4283, 4334, 17409, 165280, 6139, 365356, 548792, 121976640, 15087, (569 + $stage) , 178017293, -1);
				case 30:
					return new Monster((314 + 6 * $stage) , 2, 4494, 4533, 18268, 173990, 6478, 365356, 548792, 130492496, 15087, (569 + $stage) , 178017293, -1);
			
				case 31:
					return new Monster((374 + 6 * $stage) , 3, 4733, 18756, 4671, 182060, 6713, 365356, 548792, 277459456, 15087, (579 + $stage) , 178017293, -1);
				case 32:
					return new Monster((374 + 6 * $stage) , 1, 19740, 6929, 6890, 192010, 4328, 365356, 548792, 371539360, 15087, (579 + $stage) , 178017293, -1);
				case 33:
					return new Monster((374 + 6 * $stage) , 1, 20459, 7164, 7125, 199200, 4505, 365356, 548792, 391428000, 15087, (579 + $stage) , 178017293, -1);
				case 34:
					return new Monster((374 + 6 * $stage) , 1, 21242, 7417, 7366, 206510, 4646, 365356, 548792, 411987456, 15087, (579 + $stage) , 178017293, -1);
				case 35:
					return new Monster((374 + 6 * $stage) , 2, 5477, 5528, 22179, 212580, 7809, 365356, 548792, 172189792, 15087, (579 + $stage) , 178017293, -1);
					// end of known data :(
				case 36:
					return new Monster((374 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (579 + $stage) , 178017293, -1);
				case 37:
					return new Monster((374 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (579 + $stage) , 178017293, -1);
				case 38:
					return new Monster((374 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (579 + $stage) , 178017293, -1);
				case 39:
					return new Monster((374 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (579 + $stage) , 178017293, -1);
				case 40:
					return new Monster((374 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (579 + $stage) , 178017293, -1);
			
				case 41:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 42:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 43:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 44:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 45:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 46:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 47:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 48:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 49:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				case 50:
					return new Monster((434 + 6 * $stage) , 2, 955, 3836, 967, 1248100, 1432, 365356, 548792, 1003472384, 15087, (589 + $stage) , 178017293, -1);
				
		}
	}

	public static function getGuildRaid($lvl){
		switch ($lvl) {
			case 0:
			return [new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(16, 3, 79, 185, 78, 373, 89, 266, 798, 25364, 400, 74, 0, 0),
					new Monster(26, 1, 341, 128, 115, 741, 134, 735, 2205, 100035, 1300, 24, 0, 0),
					new Monster(36, 3, 133, 571, 141, 1634, 218, 2262, 6786, 241832, 900, 74, 0, 0),
					new Monster(50, 3, 209, 804, 202, 5329, 277, 4536, 13608, 1087116, 1250, 195, 0, 0)];
			case 1:
			return [new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(12, 1, 114, 64, 56, 191, 48, 84, 252, 12415, 600, 74, 0, 0),
					new Monster(16, 3, 79, 185, 78, 248, 89, 266, 798, 16864, 400, 24, 0, 0),
					new Monster(26, 1, 341, 128, 115, 741, 134, 735, 2205, 100035, 1300, 74, 0, 0),
					new Monster(36, 3, 133, 571, 141, 980, 218, 2262, 6786, 145040, 900, 24, 0, 0),
					new Monster(46, 1, 729, 204, 173, 2048, 236, 2993, 8979, 481280, 2300, 74, 0, 0),
					new Monster(60, 3, 256, 988, 247, 7220, 356, 6831, 20493, 1761680, 1500, 193, 0, 0)];
			case 2:
			return [new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 74, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 24, 0, 0),
					new Monster(14, 1, 141, 74, 65, 235, 61, 135, 405, 17625, 700, 74, 0, 0),
					new Monster(18, 1, 203, 95, 84, 321, 88, 273, 819, 30495, 900, 24, 0, 0),
					new Monster(22, 2, 92, 94, 287, 376, 130, 1131, 3393, 17296, 220, 74, 0, 0),
					new Monster(26, 1, 341, 128, 115, 494, 134, 735, 2205, 66690, 1300, 24, 0, 0),
					new Monster(36, 3, 133, 571, 141, 980, 218, 2262, 6786, 145040, 900, 74, 0, 0),
					new Monster(46, 1, 729, 204, 173, 1536, 236, 2993, 8979, 360960, 2300, 24, 0, 0),
					new Monster(56, 3, 237, 912, 228, 2584, 327, 5888, 17664, 589152, 1400, 74, 0, 0),
					new Monster(70, 1, 1178, 365, 342, 9120, 323, 7670, 23010, 3237600, 3500, 194, 0, 0)];
			case 3:
			return [new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 10, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 19, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 41, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 11, 0, 0),
					new Monster(12, 1, 114, 64, 56, 191, 48, 84, 252, 12415, 600, 39, 0, 0),
					new Monster(16, 3, 79, 185, 78, 248, 89, 266, 798, 16864, 400, 10, 0, 0),
					new Monster(20, 3, 95, 250, 95, 330, 113, 494, 1482, 27720, 500, 19, 0, 0),
					new Monster(24, 1, 301, 119, 111, 452, 123, 589, 1767, 56500, 1200, 41, 0, 0),
					new Monster(28, 1, 373, 131, 118, 539, 144, 874, 2622, 78155, 1400, 11, 0, 0),
					new Monster(32, 3, 147, 461, 152, 524, 194, 1598, 4794, 69168, 800, 39, 0, 0),
					new Monster(36, 3, 133, 571, 141, 653, 218, 2262, 6786, 96644, 900, 10, 0, 0),
					new Monster(46, 1, 729, 204, 173, 1024, 236, 2993, 8979, 240640, 2300, 19, 0, 0),
					new Monster(56, 3, 237, 912, 228, 1938, 327, 5888, 17664, 441864, 1400, 41, 0, 0),
					new Monster(66, 3, 285, 1102, 275, 3344, 399, 8436, 25308, 896192, 1650, 11, 0, 0),
					new Monster(80, 3, 351, 1368, 342, 11020, 498, 12878, 38634, 3570480, 2000, 196, 0, 0)];
			case 4:
			return [new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 86, 0, 0),
					new Monster(10, 2, 45, 49, 98, 146, 44, 130, 390, 3212, 100, 144, 0, 0),
					new Monster(14, 1, 141, 74, 65, 235, 61, 135, 405, 17625, 700, 87, 0, 0),
					new Monster(18, 1, 203, 95, 84, 321, 88, 273, 819, 30495, 900, 121, 0, 0),
					new Monster(22, 2, 92, 94, 287, 376, 130, 1160, 3480, 17296, 220, 191, 0, 0),
					new Monster(26, 1, 341, 128, 115, 494, 134, 735, 2205, 66690, 1300, 86, 0, 0),
					new Monster(30, 2, 119, 123, 437, 530, 183, 2552, 7656, 32860, 300, 53, 0, 0),
					new Monster(34, 3, 135, 526, 136, 575, 205, 1961, 5883, 80500, 850, 191, 0, 0),
					new Monster(38, 1, 562, 169, 153, 756, 185, 1881, 5643, 147420, 1900, 86, 0, 0),
					new Monster(42, 3, 194, 689, 212, 765, 234, 3243, 9729, 131580, 1050, 53, 0, 0),
					new Monster(46, 1, 729, 204, 173, 1024, 236, 2993, 8979, 240640, 2300, 191, 0, 0),
					new Monster(56, 3, 237, 912, 228, 1292, 327, 5888, 17664, 294576, 1400, 86, 0, 0),
					new Monster(66, 3, 285, 1102, 275, 2508, 399, 8547, 25641, 672144, 1650, 144, 0, 0),
					new Monster(76, 3, 332, 1292, 323, 4104, 470, 11570, 34710, 1264032, 1900, 130, 0, 0),
					new Monster(90, 1, 1558, 508, 484, 12920, 418, 13260, 39780, 5878600, 4500, 197, 0, 0)];
			case 5:
			return [new Monster(16, 3, 79, 185, 78, 248, 89, 266, 798, 16864, 400, 74, 0, 0),
					new Monster(20, 3, 95, 250, 95, 330, 113, 494, 1482, 27720, 500, 136, 0, 0),
					new Monster(24, 1, 301, 119, 111, 452, 123, 589, 1767, 56500, 1200, 71, 0, 0),
					new Monster(28, 1, 373, 131, 118, 539, 144, 874, 2622, 78155, 1400, 71, 0, 0),
					new Monster(32, 3, 147, 461, 152, 524, 194, 1598, 4794, 69168, 800, 50, 0, 0),
					new Monster(36, 3, 133, 571, 141, 653, 218, 2262, 6786, 96644, 900, 134, 0, 0),
					new Monster(40, 1, 583, 196, 181, 845, 226, 2065, 6195, 173225, 2000, 57, 0, 0),
					new Monster(44, 2, 181, 180, 741, 780, 246, 6675, 20025, 70200, 440, 74, 0, 0),
					new Monster(48, 1, 706, 230, 218, 1069, 233, 3053, 9159, 261905, 2400, 136, 0, 0),
					new Monster(52, 3, 218, 836, 209, 1141, 299, 4956, 14868, 241892, 1300, 71, 0, 0),
					new Monster(56, 3, 237, 912, 228, 1292, 327, 5888, 17664, 294576, 1400, 71, 0, 0),
					new Monster(66, 3, 285, 1102, 275, 1672, 399, 8547, 25641, 448096, 1650, 71, 0, 0),
					new Monster(76, 3, 332, 1292, 323, 3078, 470, 11570, 34710, 948024, 1900, 74, 0, 0),
					new Monster(86, 1, 1482, 479, 456, 4864, 399, 12069, 36207, 2115840, 4300, 112, 0, 0),
					new Monster(100, 3, 446, 1748, 437, 14820, 641, 20825, 62475, 5987280, 2500, 198, 0, 0)];
			case 6:
			return [new Monster(26, 1, 341, 128, 115, 494, 134, 735, 2205, 66690, 1300, 186, 0, 0),
					new Monster(30, 2, 119, 123, 437, 530, 183, 2552, 7656, 32860, 300, 104, 0, 0),
					new Monster(34, 3, 135, 526, 136, 575, 205, 1961, 5883, 80500, 850, 117, 0, 0),
					new Monster(38, 1, 562, 169, 153, 756, 185, 1881, 5643, 147420, 1900, 124, 0, 0),
					new Monster(42, 3, 194, 689, 212, 765, 234, 3243, 9729, 131580, 1050, 113, 0, 0),
					new Monster(46, 1, 729, 204, 173, 1024, 236, 2993, 8979, 240640, 2300, 3, 0, 0),
					new Monster(50, 3, 209, 804, 202, 1065, 277, 4617, 13851, 217260, 1250, 1, 0, 0),
					new Monster(54, 1, 874, 251, 228, 1216, 247, 4312, 12936, 334400, 2700, 113, 0, 0),
					new Monster(58, 3, 247, 950, 237, 1368, 342, 6432, 19296, 322848, 1450, 3, 0, 0),
					new Monster(62, 1, 1026, 308, 285, 1520, 285, 5871, 17613, 478800, 3100, 1, 0, 0),
					new Monster(66, 3, 285, 1102, 275, 1672, 399, 8547, 25641, 448096, 1650, 124, 0, 0),
					new Monster(76, 3, 332, 1292, 323, 2052, 470, 11570, 34710, 632016, 1900, 186, 0, 0),
					new Monster(86, 1, 1482, 479, 456, 3648, 399, 12069, 36207, 1586880, 4300, 104, 0, 0),
					new Monster(96, 1, 1672, 551, 527, 5624, 446, 15288, 45864, 2727640, 4800, 117, 0, 0),
					new Monster(110, 3, 494, 1938, 484, 16720, 712, 25608, 76824, 7423680, 2750, 199, 0, 0)];
			case 7:
			return [new Monster(36, 3, 133, 571, 141, 653, 218, 2262, 6786, 96644, 900, 106, 0, 0),
					new Monster(40, 1, 583, 196, 181, 845, 226, 2065, 6195, 173225, 2000, 5, 0, 0),
					new Monster(44, 2, 181, 180, 741, 780, 246, 6675, 20025, 70200, 440, 95, 0, 0),
					new Monster(48, 1, 706, 230, 218, 1069, 233, 3053, 9159, 261905, 2400, 191, 0, 0),
					new Monster(52, 3, 218, 836, 209, 1141, 299, 4956, 14868, 241892, 1300, 95, 0, 0),
					new Monster(56, 3, 237, 912, 228, 1292, 327, 5888, 17664, 294576, 1400, 86, 0, 0),
					new Monster(60, 3, 256, 988, 247, 1444, 356, 6831, 20493, 352336, 1500, 108, 0, 0),
					new Monster(64, 1, 1064, 323, 299, 1596, 294, 6313, 18939, 518700, 3200, 6, 0, 0),
					new Monster(68, 1, 1140, 351, 327, 1748, 313, 7245, 21735, 603060, 3400, 106, 0, 0),
					new Monster(72, 3, 313, 1216, 304, 1900, 441, 10248, 30744, 554800, 1800, 5, 0, 0),
					new Monster(76, 3, 332, 1292, 323, 2052, 470, 11570, 34710, 632016, 1900, 95, 0, 0),
					new Monster(86, 1, 1482, 479, 456, 2432, 399, 12069, 36207, 1057920, 4300, 191, 0, 0),
					new Monster(96, 1, 1672, 551, 527, 4218, 446, 15288, 45864, 2045730, 4800, 95, 0, 0),
					new Monster(106, 3, 475, 1862, 465, 6384, 684, 23749, 71247, 2732352, 2650, 86, 0, 0),
					new Monster(120, 2, 522, 541, 2204, 17860, 779, 57460, 172380, 4322120, 1200, 200, 0, 0)];
			case 8:
			return [new Monster(46, 1, 729, 204, 173, 1024, 236, 2993, 8979, 240640, 2300, 84, 0, 0),
					new Monster(50, 3, 209, 804, 202, 1065, 277, 4617, 13851, 217260, 1250, 6, 0, 0),
					new Monster(54, 1, 874, 251, 228, 1216, 247, 4312, 12936, 334400, 2700, 90, 0, 0),
					new Monster(58, 3, 247, 950, 237, 1368, 342, 6432, 19296, 322848, 1450, 84, 0, 0),
					new Monster(62, 1, 1026, 308, 285, 1520, 285, 5871, 17613, 478800, 3100, 122, 0, 0),
					new Monster(66, 3, 285, 1102, 275, 1672, 399, 8547, 25641, 448096, 1650, 6, 0, 0),
					new Monster(70, 1, 1178, 365, 342, 1824, 323, 7670, 23010, 647520, 3500, 31, 0, 0),
					new Monster(74, 1, 1254, 394, 370, 1976, 342, 8694, 26082, 741000, 3700, 32, 0, 0),
					new Monster(78, 3, 342, 1330, 332, 2128, 484, 12328, 36984, 672448, 1950, 32, 0, 0),
					new Monster(82, 3, 361, 1406, 351, 2280, 513, 13677, 41031, 756960, 2050, 3, 0, 0),
					new Monster(86, 1, 1482, 479, 456, 2432, 399, 12069, 36207, 1057920, 4300, 1, 0, 0),
					new Monster(96, 1, 1672, 551, 527, 2812, 446, 15288, 45864, 1363820, 4800, 57, 0, 0),
					new Monster(106, 3, 475, 1862, 465, 4788, 684, 23749, 71247, 2049264, 2650, 92, 0, 0),
					new Monster(116, 3, 522, 2052, 513, 7144, 779, 28634, 85902, 3343392, 2900, 85, 0, 0),
					new Monster(130, 3, 589, 2318, 579, 20520, 855, 36424, 109272, 10752480, 3250, 201, 0, 0)];
			case 9:
			return [new Monster(56, 3, 237, 912, 228, 1292, 327, 5888, 17664, 294576, 1400, 88, 0, 0),
					new Monster(60, 3, 256, 988, 247, 1444, 356, 6831, 20493, 352336, 1500, 86, 0, 0),
					new Monster(64, 1, 1064, 323, 299, 1596, 294, 6313, 18939, 518700, 3200, 155, 0, 0),
					new Monster(68, 1, 1140, 351, 327, 1748, 313, 7245, 21735, 603060, 3400, 167, 0, 0),
					new Monster(72, 3, 313, 1216, 304, 1900, 441, 10248, 30744, 554800, 1800, 88, 0, 0),
					new Monster(76, 3, 332, 1292, 323, 2052, 470, 11570, 34710, 632016, 1900, 86, 0, 0),
					new Monster(80, 3, 351, 1368, 342, 2204, 498, 12878, 38634, 714096, 2000, 155, 0, 0),
					new Monster(84, 1, 1444, 465, 441, 2356, 389, 11455, 34365, 1001300, 4200, 167, 0, 0),
					new Monster(88, 3, 389, 1520, 380, 2660, 555, 15912, 47736, 946960, 2200, 88, 0, 0),
					new Monster(92, 1, 1596, 522, 498, 2660, 427, 13920, 41760, 1236900, 4600, 86, 0, 0),
					new Monster(96, 1, 1672, 551, 527, 2660, 446, 15288, 45864, 1290100, 4800, 155, 0, 0),
					new Monster(106, 3, 475, 1862, 465, 3192, 684, 23749, 71247, 1366176, 2650, 167, 0, 0),
					new Monster(116, 3, 522, 2052, 513, 5358, 779, 28634, 85902, 2507544, 2900, 88, 0, 0),
					new Monster(126, 1, 2242, 764, 741, 7904, 589, 27225, 81675, 5019040, 6300, 156, 0, 0),
					new Monster(140, 3, 636, 2508, 627, 22420, 926, 42419, 127257, 12644880, 3500, 202, 0, 0)];
			case 10:
			return [new Monster(66, 3, 285, 1102, 275, 1672, 399, 8547, 25641, 448096, 1650, 9, 0, 0),
					new Monster(70, 1, 1178, 365, 342, 1824, 323, 7670, 23010, 647520, 3500, 12, 0, 0),
					new Monster(74, 1, 1254, 394, 370, 1976, 342, 8694, 26082, 741000, 3700, 97, 0, 0),
					new Monster(78, 3, 342, 1330, 332, 2128, 484, 12328, 36984, 672448, 1950, 112, 0, 0),
					new Monster(82, 3, 361, 1406, 351, 2280, 513, 13677, 41031, 756960, 2050, 115, 0, 0),
					new Monster(86, 1, 1482, 479, 456, 2432, 399, 12069, 36207, 1057920, 4300, 9, 0, 0),
					new Monster(90, 1, 1558, 508, 484, 2584, 418, 13260, 39780, 1175720, 4500, 12, 0, 0),
					new Monster(94, 1, 1634, 536, 513, 2736, 437, 14596, 43788, 1299600, 4700, 97, 0, 0),
					new Monster(98, 3, 437, 1710, 427, 2888, 627, 20124, 60372, 1143648, 2450, 112, 0, 0),
					new Monster(102, 3, 480, 1880, 470, 3192, 655, 23058, 69174, 1315104, 2550, 115, 0, 0),
					new Monster(106, 3, 475, 1862, 465, 3344, 684, 23749, 71247, 1431232, 2650, 9, 0, 0),
					new Monster(116, 3, 522, 2052, 513, 3572, 779, 28634, 85902, 1671696, 2900, 12, 0, 0),
					new Monster(126, 1, 2242, 764, 741, 5928, 589, 27225, 81675, 3764280, 6300, 97, 0, 0),
					new Monster(136, 2, 598, 617, 2508, 8360, 893, 74296, 222888, 2290640, 1360, 112, 0, 0),
					new Monster(150, 3, 684, 2698, 674, 24320, 997, 49140, 147420, 14689280, 3750, 203, 0, 0)];
			case 11:
			return [new Monster(76, 3, 332, 1292, 323, 2052, 470, 11570, 34710, 632016, 1900, 9, 0, 0),
					new Monster(80, 3, 351, 1368, 342, 2204, 498, 12878, 38634, 714096, 2000, 12, 0, 0),
					new Monster(84, 1, 1444, 465, 441, 2356, 389, 11455, 34365, 1001300, 4200, 97, 0, 0),
					new Monster(88, 3, 389, 1520, 380, 2660, 555, 15912, 47736, 946960, 2200, 112, 0, 0),
					new Monster(92, 1, 1596, 522, 498, 2660, 427, 13920, 41760, 1236900, 4600, 115, 0, 0),
					new Monster(96, 1, 1672, 551, 527, 2812, 446, 15288, 45864, 1363820, 4800, 9, 0, 0),
					new Monster(100, 3, 446, 1748, 437, 2964, 641, 20825, 62475, 1197456, 2500, 12, 0, 0),
					new Monster(104, 2, 446, 465, 2000, 2964, 665, 45024, 135072, 622440, 1040, 97, 0, 0),
					new Monster(108, 1, 1900, 636, 612, 3268, 503, 19673, 59019, 1781060, 5400, 112, 0, 0),
					new Monster(112, 3, 503, 1976, 494, 3420, 726, 26532, 79596, 1545840, 2800, 115, 0, 0),
					new Monster(116, 3, 522, 2052, 513, 3572, 779, 28634, 85902, 1671696, 2900, 9, 0, 0),
					new Monster(126, 1, 2242, 764, 741, 3952, 589, 27225, 81675, 2509520, 6300, 12, 0, 0),
					new Monster(136, 2, 598, 617, 2508, 6270, 893, 74296, 222888, 1717980, 1360, 97, 0, 0),
					new Monster(146, 1, 2622, 907, 883, 9576, 684, 37083, 111249, 7038360, 7300, 112, 0, 0),
					new Monster(160, 3, 731, 2888, 722, 26220, 1068, 56066, 168198, 16885680, 4000, 204, 0, 0)];
			case 12:
			return [new Monster(86, 1, 1482, 479, 456, 2432, 399, 12069, 36207, 1057920, 4300, 15, 0, 0),
					new Monster(90, 1, 1558, 508, 484, 2584, 418, 13260, 39780, 1175720, 4500, 16, 0, 0),
					new Monster(94, 1, 1634, 536, 513, 2736, 437, 14596, 43788, 1299600, 4700, 4, 0, 0),
					new Monster(98, 3, 437, 1710, 427, 2888, 627, 20124, 60372, 1143648, 2450, 14, 0, 0),
					new Monster(102, 3, 480, 1880, 470, 3040, 655, 23058, 69174, 1252480, 2550, 135, 0, 0),
					new Monster(106, 3, 475, 1862, 465, 3192, 684, 23749, 71247, 1366176, 2650, 133, 0, 0),
					new Monster(110, 3, 494, 1938, 484, 3344, 712, 25608, 76824, 1484736, 2750, 51, 0, 0),
					new Monster(114, 2, 494, 513, 2090, 3344, 736, 51870, 155610, 769120, 1140, 22, 0, 0),
					new Monster(118, 3, 532, 2090, 522, 3648, 769, 29820, 89460, 1736448, 2950, 16, 0, 0),
					new Monster(122, 1, 2166, 736, 712, 3800, 570, 25389, 76167, 2337000, 6100, 4, 0, 0),
					new Monster(126, 1, 2242, 764, 741, 3952, 589, 27225, 81675, 2509520, 6300, 14, 0, 0),
					new Monster(136, 2, 598, 617, 2508, 4180, 893, 74296, 222888, 1145320, 1360, 135, 0, 0),
					new Monster(146, 1, 2622, 907, 883, 7068, 684, 37083, 111249, 5194980, 7300, 133, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 9880, 1035, 98549, 295647, 3102320, 1560, 51, 0, 0),
					new Monster(170, 1, 3078, 1078, 1054, 28120, 798, 50820, 152460, 24042600, 8500, 205, 0, 0)];
			case 13:
			return [new Monster(96, 1, 1672, 551, 527, 2812, 446, 15288, 45864, 1363820, 4800, 6, 0, 0),
					new Monster(100, 3, 446, 1748, 437, 2964, 641, 20825, 62475, 1197456, 2500, 11, 0, 0),
					new Monster(104, 2, 446, 465, 2000, 2964, 665, 45024, 135072, 622440, 1040, 5, 0, 0),
					new Monster(108, 1, 1900, 636, 612, 3268, 503, 19673, 59019, 1781060, 5400, 10, 0, 0),
					new Monster(112, 3, 503, 1976, 494, 3420, 726, 26532, 79596, 1545840, 2800, 5, 0, 0),
					new Monster(116, 3, 522, 2052, 513, 3572, 779, 28634, 85902, 1671696, 2900, 10, 0, 0),
					new Monster(120, 2, 522, 541, 2204, 3572, 779, 57460, 172380, 864424, 1200, 96, 0, 0),
					new Monster(124, 1, 2204, 750, 726, 3876, 579, 26299, 78897, 2422500, 6200, 6, 0, 0),
					new Monster(128, 3, 579, 2280, 570, 4028, 840, 35266, 105798, 2078448, 3200, 11, 0, 0),
					new Monster(132, 1, 2356, 807, 783, 4180, 617, 29972, 89916, 2779700, 6600, 5, 0, 0),
					new Monster(136, 2, 598, 617, 2508, 4180, 893, 74296, 222888, 1145320, 1360, 10, 0, 0),
					new Monster(146, 1, 2622, 907, 883, 4712, 684, 37083, 111249, 3463320, 7300, 5, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 7410, 1035, 98549, 295647, 2326740, 1560, 10, 0, 0),
					new Monster(166, 2, 741, 760, 3078, 10640, 1106, 112112, 336336, 3553760, 1660, 5, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 30210, 1211, 71613, 214839, 21872040, 4500, 206, 0, 0)];
			case 14:
			return [new Monster(106, 3, 475, 1862, 465, 3192, 684, 23749, 71247, 1366176, 2650, 115, 0, 0),
					new Monster(110, 3, 494, 1938, 484, 3344, 712, 25608, 76824, 1484736, 2750, 117, 0, 0),
					new Monster(114, 2, 494, 513, 2090, 3344, 736, 51870, 155610, 769120, 1140, 85, 0, 0),
					new Monster(118, 3, 532, 2090, 522, 3648, 769, 29820, 89460, 1736448, 2950, 115, 0, 0),
					new Monster(122, 1, 2166, 736, 712, 3800, 570, 25389, 76167, 2337000, 6100, 84, 0, 0),
					new Monster(126, 1, 2242, 764, 741, 3952, 589, 27225, 81675, 2509520, 6300, 84, 0, 0),
					new Monster(130, 3, 589, 2318, 579, 4104, 855, 36424, 109272, 2150496, 3250, 112, 0, 0),
					new Monster(134, 1, 2394, 821, 798, 4256, 627, 30960, 92880, 2872800, 6700, 6, 0, 0),
					new Monster(138, 1, 2470, 850, 826, 4408, 646, 32984, 98952, 3063560, 6900, 112, 0, 0),
					new Monster(142, 2, 627, 646, 2622, 4408, 935, 81530, 244590, 1260688, 1420, 6, 0, 0),
					new Monster(146, 1, 2622, 907, 883, 4712, 684, 37083, 111249, 3463320, 7300, 27, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 4940, 1035, 98549, 295647, 1551160, 1560, 113, 0, 0),
					new Monster(166, 2, 741, 760, 3078, 7980, 1106, 112112, 336336, 2665320, 1660, 122, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 11704, 1182, 68480, 205440, 8286432, 4400, 114, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 31160, 1273, 147972, 443916, 11903120, 1900, 207, 0, 0)];
			case 15:
			return [new Monster(116, 3, 522, 2052, 513, 3572, 779, 28634, 85902, 1671696, 2900, 73, 0, 0),
					new Monster(120, 2, 522, 541, 2204, 3572, 779, 57460, 172380, 864424, 1200, 71, 0, 0),
					new Monster(124, 1, 2204, 750, 726, 3876, 579, 26299, 78897, 2422500, 6200, 24, 0, 0),
					new Monster(128, 3, 579, 2280, 570, 4028, 840, 35266, 105798, 2078448, 3200, 63, 0, 0),
					new Monster(132, 1, 2356, 807, 783, 4180, 617, 29972, 89916, 2779700, 6600, 50, 0, 0),
					new Monster(136, 2, 598, 617, 2508, 4180, 893, 74296, 222888, 1145320, 1360, 63, 0, 0),
					new Monster(140, 3, 636, 2508, 627, 4484, 926, 42419, 127257, 2528976, 3500, 50, 0, 0),
					new Monster(144, 3, 655, 2584, 646, 4636, 954, 45066, 135198, 2688880, 3600, 63, 0, 0),
					new Monster(148, 1, 2800, 970, 945, 4788, 730, 40183, 120549, 3567060, 7400, 50, 0, 0),
					new Monster(152, 1, 2736, 950, 926, 4940, 712, 40278, 120834, 3779100, 7600, 63, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 4940, 1035, 98549, 295647, 1551160, 1560, 66, 0, 0),
					new Monster(166, 2, 741, 760, 3078, 5320, 1106, 112112, 336336, 1776880, 1660, 65, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 8778, 1182, 68480, 205440, 6214824, 4400, 25, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 12084, 1239, 140008, 420024, 4495248, 1850, 71, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 33060, 1339, 164120, 492360, 13290120, 2000, 208, 0, 0)];
			case 16:
			return [new Monster(126, 1, 2242, 764, 741, 3952, 589, 27225, 81675, 2509520, 6300, 153, 0, 0),
					new Monster(130, 3, 589, 2318, 579, 4104, 855, 36424, 109272, 2150496, 3250, 151, 0, 0),
					new Monster(134, 1, 2394, 821, 798, 4256, 627, 30960, 92880, 2872800, 6700, 150, 0, 0),
					new Monster(138, 1, 2470, 850, 826, 4408, 646, 32984, 98952, 3063560, 6900, 150, 0, 0),
					new Monster(142, 2, 627, 646, 2622, 4408, 935, 81530, 244590, 1260688, 1420, 109, 0, 0),
					new Monster(146, 1, 2622, 907, 883, 4712, 684, 37083, 111249, 3463320, 7300, 131, 0, 0),
					new Monster(150, 3, 684, 2698, 674, 4864, 997, 49140, 147420, 2937856, 3750, 153, 0, 0),
					new Monster(154, 1, 2774, 964, 940, 5016, 722, 41422, 124266, 3887400, 7700, 151, 0, 0),
					new Monster(158, 3, 722, 2850, 712, 5168, 1054, 54912, 164736, 3286848, 3950, 150, 0, 0),
					new Monster(162, 1, 2926, 1021, 997, 5320, 760, 46001, 138003, 4335800, 8100, 150, 0, 0),
					new Monster(166, 2, 741, 760, 3078, 5320, 1106, 112112, 336336, 1776880, 1660, 109, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 131, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 9063, 1239, 140008, 420024, 3371436, 1850, 153, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 12844, 1306, 155727, 467181, 5034848, 1950, 111, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 35720, 959, 78720, 236160, 37684600, 10500, 209, 0, 0)];
			case 17:
			return [new Monster(136, 2, 598, 617, 2508, 4180, 893, 74296, 222888, 1145320, 1360, 37, 0, 0),
					new Monster(140, 3, 636, 2508, 627, 4484, 926, 42419, 127257, 2528976, 3500, 74, 0, 0),
					new Monster(144, 3, 655, 2584, 646, 4636, 954, 45066, 135198, 2688880, 3600, 67, 0, 0),
					new Monster(148, 1, 2800, 970, 945, 4788, 730, 40183, 120549, 3567060, 7400, 68, 0, 0),
					new Monster(152, 1, 2736, 950, 926, 4940, 712, 40278, 120834, 3779100, 7600, 37, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 4940, 1035, 98549, 295647, 1551160, 1560, 74, 0, 0),
					new Monster(160, 3, 731, 2888, 722, 5244, 1068, 56066, 168198, 3377136, 4000, 67, 0, 0),
					new Monster(164, 3, 750, 2964, 741, 5396, 1097, 59103, 177309, 3561360, 4100, 68, 0, 0),
					new Monster(168, 2, 750, 769, 3116, 5396, 1121, 114816, 344448, 1823848, 1680, 37, 0, 0),
					new Monster(172, 1, 3116, 1092, 1068, 5700, 807, 52104, 156312, 4930500, 8600, 74, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 13, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 23, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 9633, 1306, 155727, 467181, 3776136, 1950, 21, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 13908, 1377, 94125, 282375, 11460192, 5125, 4, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 37620, 997, 86645, 259935, 41570100, 11000, 210, 0, 0)];
			case 18:
			return [new Monster(144, 3, 655, 2584, 646, 4636, 954, 45066, 135198, 2688880, 3600, 155, 0, 0),
					new Monster(148, 1, 2800, 970, 945, 4788, 730, 40183, 120549, 3567060, 7400, 155, 0, 0),
					new Monster(152, 1, 2736, 950, 926, 4940, 712, 40278, 120834, 3779100, 7600, 155, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 4940, 1035, 98549, 295647, 1551160, 1560, 155, 0, 0),
					new Monster(160, 3, 731, 2888, 722, 5244, 1068, 56066, 168198, 3377136, 4000, 155, 0, 0),
					new Monster(164, 3, 750, 2964, 741, 5396, 1097, 59103, 177309, 3561360, 4100, 155, 0, 0),
					new Monster(168, 2, 750, 769, 3116, 5396, 1121, 114816, 344448, 1823848, 1680, 157, 0, 0),
					new Monster(172, 1, 3116, 1092, 1068, 5700, 807, 52104, 156312, 4930500, 8600, 155, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 155, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 6004, 1211, 71613, 214839, 4346896, 4500, 155, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 155, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 155, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 10431, 1377, 94125, 282375, 8595144, 5125, 155, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 14668, 978, 82740, 248220, 15841440, 10750, 155, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 39520, 1543, 119004, 357012, 36516480, 5750, 213, 0, 0)];
			case 19:
			return [new Monster(152, 1, 2736, 950, 926, 4940, 712, 40278, 120834, 3779100, 7600, 114, 0, 0),
					new Monster(156, 2, 693, 712, 2888, 4940, 1035, 98549, 295647, 1551160, 1560, 67, 0, 0),
					new Monster(160, 3, 731, 2888, 722, 5244, 1068, 56066, 168198, 3377136, 4000, 116, 0, 0),
					new Monster(164, 3, 750, 2964, 741, 5396, 1097, 59103, 177309, 3561360, 4100, 114, 0, 0),
					new Monster(168, 2, 750, 769, 3116, 5396, 1121, 114816, 344448, 1823848, 1680, 67, 0, 0),
					new Monster(172, 1, 3116, 1092, 1068, 5700, 807, 52104, 156312, 4930500, 8600, 116, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 114, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 6004, 1211, 71613, 214839, 4346896, 4500, 67, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 116, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 6232, 1273, 147972, 443916, 2380624, 1900, 114, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 67, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 116, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 11001, 978, 82740, 248220, 11881080, 10750, 68, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 15428, 1510, 113988, 341964, 13946912, 5625, 102, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 41420, 1073, 103635, 310905, 49911100, 12000, 211, 0, 0)];
			case 20:
			return [new Monster(160, 3, 731, 2888, 722, 5244, 1068, 56066, 168198, 3377136, 4000, 168, 0, 0),
					new Monster(164, 3, 750, 2964, 741, 5396, 1097, 59103, 177309, 3561360, 4100, 168, 0, 0),
					new Monster(168, 2, 750, 769, 3116, 5396, 1121, 114816, 344448, 1823848, 1680, 166, 0, 0),
					new Monster(172, 1, 3116, 1092, 1068, 5700, 807, 52104, 156312, 4930500, 8600, 168, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 168, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 6004, 1211, 71613, 214839, 4346896, 4500, 166, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 168, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 6232, 1273, 147972, 443916, 2380624, 1900, 168, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 166, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 6612, 1339, 164120, 492360, 2658024, 2000, 168, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 168, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 166, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 11571, 1510, 113988, 341964, 10460184, 5625, 168, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 17556, 1572, 227841, 683523, 8286432, 2350, 168, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 43320, 1111, 112700, 338100, 54366600, 12500, 212, 0, 0)];
			case 21:
			return [new Monster(168, 2, 750, 769, 3116, 5396, 1121, 114816, 344448, 1823848, 1680, 44, 0, 0),
					new Monster(172, 1, 3116, 1092, 1068, 5700, 807, 52104, 156312, 4930500, 8600, 41, 0, 0),
					new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 120, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 6004, 1211, 71613, 214839, 4346896, 4500, 40, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 110, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 6232, 1273, 147972, 443916, 2380624, 1900, 110, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 110, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 6612, 1339, 164120, 492360, 2658024, 2000, 110, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 42, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 7144, 959, 78720, 236160, 7536920, 10500, 40, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 39, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 44, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 11913, 1572, 227841, 683523, 5622936, 2350, 41, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 16948, 1092, 108240, 324720, 20846040, 12250, 42, 0, 0),
					new Monster(260, 3, 1206, 4788, 1197, 45220, 1743, 152801, 458403, 47209680, 6500, 214, 0, 0)];
			case 22:
			return [new Monster(176, 3, 807, 3192, 798, 5852, 1182, 68480, 205440, 4143216, 4400, 91, 0, 0),
					new Monster(180, 3, 826, 3268, 817, 6004, 1211, 71613, 214839, 4346896, 4500, 91, 0, 0),
					new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 91, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 6232, 1273, 147972, 443916, 2380624, 1900, 91, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 91, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 6612, 1339, 164120, 492360, 2658024, 2000, 91, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 90, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 7144, 959, 78720, 236160, 7536920, 10500, 96, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 92, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 7524, 997, 86645, 259935, 8314020, 11000, 97, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 147, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 90, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 12711, 1092, 108240, 324720, 15634530, 12250, 90, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 17708, 1130, 117500, 352500, 22666240, 12750, 96, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 47120, 1187, 131970, 395910, 63847600, 13500, 215, 0, 0)];
			case 23:
			return [new Monster(185, 2, 831, 850, 3439, 6042, 1239, 140008, 420024, 2247624, 1850, 79, 0, 0),
					new Monster(190, 2, 855, 874, 3534, 6232, 1273, 147972, 443916, 2380624, 1900, 79, 0, 0),
					new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 79, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 6612, 1339, 164120, 492360, 2658024, 2000, 79, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 79, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 7144, 959, 78720, 236160, 7536920, 10500, 79, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 79, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 7524, 997, 86645, 259935, 8314020, 11000, 79, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 79, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 7904, 1543, 119004, 357012, 7303296, 5750, 79, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 79, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 79, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 13281, 1130, 117500, 352500, 16999680, 12750, 79, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 18468, 1168, 127140, 381420, 24562440, 13250, 79, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 49020, 1876, 177848, 533544, 55098480, 7000, 216, 0, 0)];
			case 24:
			return [new Monster(195, 2, 878, 897, 3629, 6422, 1306, 155727, 467181, 2517424, 1950, 88, 0, 0),
					new Monster(200, 2, 902, 921, 3724, 6612, 1339, 164120, 492360, 2658024, 2000, 132, 0, 0),
					new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 88, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 7144, 959, 78720, 236160, 7536920, 10500, 88, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 88, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 7524, 997, 86645, 259935, 8314020, 11000, 132, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 88, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 7904, 1543, 119004, 357012, 7303296, 5750, 88, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 88, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 8284, 1073, 103635, 310905, 9982220, 12000, 132, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 132, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 103, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 13851, 1168, 127140, 381420, 18421830, 13250, 133, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 18924, 1838, 313635, 940905, 10446048, 2750, 130, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 50920, 1942, 191352, 574056, 59270880, 7250, 217, 0, 0)];
			case 25:
			return [new Monster(205, 3, 945, 3743, 935, 6954, 1377, 94125, 282375, 5730096, 5125, 56, 0, 0),
					new Monster(210, 1, 3838, 1349, 1325, 7144, 959, 78720, 236160, 7536920, 10500, 3, 0, 0),
					new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 2, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 7524, 997, 86645, 259935, 8314020, 11000, 1, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 122, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 7904, 1543, 119004, 357012, 7303296, 5750, 56, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 3, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 8284, 1073, 103635, 310905, 9982220, 12000, 2, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 1, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 8664, 1111, 112700, 338100, 10873320, 12500, 122, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 56, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 3, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 14193, 1838, 313635, 940905, 7834536, 2750, 2, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 19988, 1244, 147560, 442680, 28582840, 14250, 1, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 52820, 1301, 163725, 491175, 79494100, 15000, 218, 0, 0)];
			case 26:
			return [new Monster(215, 1, 3933, 1382, 1358, 7334, 978, 82740, 248220, 7920720, 10750, 4, 0, 0),
					new Monster(220, 1, 4028, 1415, 1391, 7524, 997, 86645, 259935, 8314020, 11000, 21, 0, 0),
					new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 23, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 7904, 1543, 119004, 357012, 7303296, 5750, 23, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 37, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 8284, 1073, 103635, 310905, 9982220, 12000, 48, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 37, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 8664, 1111, 112700, 338100, 10873320, 12500, 4, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 21, 0, 0),
					new Monster(260, 3, 1206, 4788, 1197, 9044, 1743, 152801, 458403, 9441936, 6500, 23, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 21, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 37, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 14991, 1244, 147560, 442680, 21437130, 14250, 48, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 20444, 1971, 361662, 1084986, 12102848, 2950, 37, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 53960, 2071, 400416, 1201248, 33563120, 3100, 219, 0, 0)];
			case 27:
			return [new Monster(225, 3, 1040, 4123, 1030, 7714, 1510, 113988, 341964, 6973456, 5625, 93, 0, 0),
					new Monster(230, 3, 1064, 4218, 1054, 7904, 1543, 119004, 357012, 7303296, 5750, 115, 0, 0),
					new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 93, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 8284, 1073, 103635, 310905, 9982220, 12000, 115, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 93, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 8664, 1111, 112700, 338100, 10873320, 12500, 115, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 93, 0, 0),
					new Monster(260, 3, 1206, 4788, 1197, 9044, 1743, 152801, 458403, 9441936, 6500, 115, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 93, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 9424, 1187, 131970, 395910, 12769520, 13500, 115, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 93, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 141, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 15333, 1971, 361662, 1084986, 9077136, 2950, 140, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 21204, 2037, 387244, 1161732, 12976848, 3050, 94, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 56620, 2142, 233642, 700926, 72700080, 8000, 220, 0, 0)];
			case 28:
			return [new Monster(235, 2, 1068, 1087, 4389, 7942, 1572, 227841, 683523, 3748624, 2350, 25, 0, 0),
					new Monster(240, 1, 4408, 1548, 1524, 8284, 1073, 103635, 310905, 9982220, 12000, 25, 0, 0),
					new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 33, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 8664, 1111, 112700, 338100, 10873320, 12500, 28, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 24, 0, 0),
					new Monster(260, 3, 1206, 4788, 1197, 9044, 1743, 152801, 458403, 9441936, 6500, 26, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 32, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 9424, 1187, 131970, 395910, 12769520, 13500, 25, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 25, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 9804, 1876, 177848, 533544, 11019696, 7000, 33, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 28, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 24, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 15903, 2037, 387244, 1161732, 9732636, 3050, 26, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 22268, 1358, 181040, 543120, 35183440, 15750, 32, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 58520, 1415, 198900, 596700, 96850600, 16500, 221, 0, 0)];
			case 29:
			return [new Monster(245, 1, 4503, 1581, 1558, 8474, 1092, 108240, 324720, 10423020, 12250, 48, 0, 0),
					new Monster(250, 1, 4598, 1615, 1591, 8664, 1111, 112700, 338100, 10873320, 12500, 54, 0, 0),
					new Monster(255, 1, 4693, 1648, 1624, 8854, 1130, 117500, 352500, 11333120, 12750, 51, 0, 0),
					new Monster(260, 3, 1206, 4788, 1197, 9044, 1743, 152801, 458403, 9441936, 6500, 50, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 92, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 9424, 1187, 131970, 395910, 12769520, 13500, 48, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 54, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 9804, 1876, 177848, 533544, 11019696, 7000, 51, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 50, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 10184, 1942, 191352, 574056, 11854176, 7250, 92, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 48, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 54, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 16701, 1358, 181040, 543120, 26387580, 15750, 51, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 22724, 2170, 440420, 1321260, 14816048, 3250, 50, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 60420, 1453, 211385, 634155, 103016100, 17000, 222, 0, 0)];
			case 30:
			return [new Monster(260, 3, 1206, 4788, 1197, 9044, 1743, 152801, 458403, 9441936, 6500, 129, 0, 0),
					new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 137, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 9424, 1187, 131970, 395910, 12769520, 13500, 13, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 67, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 9804, 1876, 177848, 533544, 11019696, 7000, 129, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 137, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 10184, 1942, 191352, 574056, 11854176, 7250, 13, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 67, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 10564, 1301, 163725, 491175, 15898820, 15000, 129, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 156, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 7, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 17043, 2170, 440420, 1321260, 11112036, 3250, 129, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 23788, 2242, 256886, 770658, 31971072, 8375, 137, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 223, 0, 0)];
			case 31:
			return [new Monster(265, 1, 4883, 1714, 1691, 9234, 1168, 127140, 381420, 12281220, 13250, 132, 0, 0),
					new Monster(270, 1, 4978, 1748, 1724, 9424, 1187, 131970, 395910, 12769520, 13500, 144, 0, 0),
					new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 68, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 9804, 1876, 177848, 533544, 11019696, 7000, 144, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 59, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 10184, 1942, 191352, 574056, 11854176, 7250, 61, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 68, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 10564, 1301, 163725, 491175, 15898820, 15000, 144, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 68, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 10792, 2071, 400416, 1201248, 6712624, 3100, 144, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 59, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 61, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 17841, 2242, 256886, 770658, 23978304, 8375, 59, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 24548, 1472, 217940, 653820, 42468040, 17250, 61, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 224, 0, 0)];
			case 32:
			return [new Monster(275, 2, 1258, 1277, 5149, 9462, 1838, 313635, 940905, 5223024, 2750, 110, 0, 0),
					new Monster(280, 3, 1301, 5168, 1292, 9804, 1876, 177848, 533544, 11019696, 7000, 79, 0, 0),
					new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 108, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 10184, 1942, 191352, 574056, 11854176, 7250, 110, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 79, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 10564, 1301, 163725, 491175, 15898820, 15000, 108, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 110, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 10792, 2071, 400416, 1201248, 6712624, 3100, 79, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 108, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 11324, 2142, 233642, 700926, 14540016, 8000, 110, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 79, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 108, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 18411, 1472, 217940, 653820, 31851030, 17250, 62, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 29, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 225, 0, 0)];
			case 33:
			return [new Monster(285, 1, 5263, 1847, 1824, 9994, 1244, 147560, 442680, 14291420, 14250, 60, 0, 0),
					new Monster(290, 3, 1349, 5358, 1339, 10184, 1942, 191352, 574056, 11854176, 7250, 110, 0, 0),
					new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 106, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 10564, 1301, 163725, 491175, 15898820, 15000, 105, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 60, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 10792, 2071, 400416, 1201248, 6712624, 3100, 62, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 121, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 11324, 2142, 233642, 700926, 14540016, 8000, 62, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 105, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 11704, 1415, 198900, 596700, 19370120, 16500, 60, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 62, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 105, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 9, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 107, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 226, 0, 0)];
			case 34:
			return [new Monster(295, 2, 1353, 1372, 5529, 10222, 1971, 361662, 1084986, 6051424, 2950, 157, 0, 0),
					new Monster(300, 1, 5548, 1947, 1923, 10564, 1301, 163725, 491175, 15898820, 15000, 161, 0, 0),
					new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 157, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 10792, 2071, 400416, 1201248, 6712624, 3100, 161, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 157, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 11324, 2142, 233642, 700926, 14540016, 8000, 161, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 157, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 11704, 1415, 198900, 596700, 19370120, 16500, 161, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 157, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 12084, 1453, 211385, 634155, 20603220, 17000, 161, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 157, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 161, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 81, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 70, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 227, 0, 0)];
			case 35:
			return [new Monster(305, 2, 1401, 1420, 5719, 10602, 2037, 387244, 1161732, 6488424, 3050, 150, 0, 0),
					new Monster(310, 2, 1425, 1444, 5814, 10792, 2071, 400416, 1201248, 6712624, 3100, 69, 0, 0),
					new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 40, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 11324, 2142, 233642, 700926, 14540016, 8000, 152, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 43, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 11704, 1415, 198900, 596700, 19370120, 16500, 142, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 41, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 12084, 1453, 211385, 634155, 20603220, 17000, 153, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 43, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 142, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 41, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 141, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 41, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 141, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 228, 0, 0)];
			case 36:
			return [new Monster(315, 1, 5833, 2047, 2023, 11134, 1358, 181040, 543120, 17591720, 15750, 12, 0, 0),
					new Monster(320, 3, 1491, 5928, 1482, 11324, 2142, 233642, 700926, 14540016, 8000, 3, 0, 0),
					new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 12, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 11704, 1415, 198900, 596700, 19370120, 16500, 3, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 104, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 12084, 1453, 211385, 634155, 20603220, 17000, 12, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 3, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 104, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 3, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 3, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 104, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 229, 0, 0)];
			case 37:
			return [new Monster(325, 2, 1496, 1515, 6099, 11362, 2170, 440420, 1321260, 7408024, 3250, 149, 0, 0),
					new Monster(330, 1, 6118, 2147, 2123, 11704, 1415, 198900, 596700, 19370120, 16500, 149, 0, 0),
					new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 149, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 12084, 1453, 211385, 634155, 20603220, 17000, 149, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 149, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 230, 0, 0)];
			case 38:
			return [new Monster(335, 3, 1562, 6213, 1553, 11894, 2242, 256886, 770658, 15985536, 8375, 29, 0, 0),
					new Monster(340, 1, 6308, 2213, 2189, 12084, 1453, 211385, 634155, 20603220, 17000, 14, 0, 0),
					new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 2, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 1, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 29, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 14, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 2, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 1, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 29, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 14, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 2, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 1, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 29, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 14, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 231, 0, 0)];
			case 39:
			return [new Monster(345, 1, 6403, 2246, 2223, 12274, 1472, 217940, 653820, 21234020, 17250, 18, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 106, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 18, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 34, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 106, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 18, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 106, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 18, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 12, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 105, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 9, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 18, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 232, 0, 0)];
			case 40:
			return [new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 132, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 16, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 233, 0, 0)];
			case 41:
			return [new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 31, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 51, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 31, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 31, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 51, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 31, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 31, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 91, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 51, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 234, 0, 0)];
			case 42:
			return [new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 25, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 4, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 69, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 5, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 67, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 4, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 24, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 68, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 72, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 72, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 6, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 71, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 25, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 72, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 235, 0, 0)];
			case 43:
			return [new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 12464, 1491, 224250, 672750, 21874320, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 18696, 1491, 224250, 672750, 32811480, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 24928, 1491, 224250, 672750, 43748640, 17500, 49, 0, 0),
					new Monster(350, 1, 6498, 2280, 2256, 62320, 1491, 224250, 672750, 109371600, 17500, 236, 0, 0)];
			case 44:
			return [new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 16446, 2072, 692289, 1395927, 29685030, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 24670, 2072, 692289, 1395927, 44529352, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 24670, 2072, 692289, 1395927, 44529352, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 32893, 2072, 692289, 1395927, 59371864, 0, 119, 0, 0),
					new Monster(360, 1, 9025, 3167, 3134, 82232, 2072, 692289, 1395927, 146750800, 0, 237, 0, 0)];
			case 45:
			return [new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 12, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 3, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 2, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 1, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 10, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 2, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 1, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 10, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 2, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 1, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 35879408, 0, 10, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 53819116, 0, 2, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 53819116, 0, 12, 0, 0),
					new Monster(370, 1, 0, 0, 0, 0, 0, 598598, 1105104, 71758816, 0, 3, 0, 0),
					new Monster(370, 2, 0, 0, 0, 0, 0, 1790789, 2283281, 178586064, 0, 238, 0, 0)];
			case 46:
			return [new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 31, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 115, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 113, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 31, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 115, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 113, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 113, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 101, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 129, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 115, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 21701, 2734, 960882, 1243346, 41340404, 0, 113, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 32552, 2734, 960882, 1243346, 62011560, 0, 31, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 32552, 2734, 960882, 1243346, 62011560, 0, 33, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 43402, 2734, 960882, 1243346, 82680808, 0, 129, 0, 0),
					new Monster(380, 1, 11909, 4179, 4135, 108505, 2734, 960882, 1243346, 206702032, 0, 239, 0, 0)];
			case 47:
			return [new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 56, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 65, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 155, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 66, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 53, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 66, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 53, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 65, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 63, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 155, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 46386284, 0, 66, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 69580408, 0, 53, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 69580408, 0, 65, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 92772568, 0, 64, 0, 0),
					new Monster(390, 1, 0, 0, 0, 0, 0, 789386, 1472848, 231933376, 0, 240, 0, 0)];
			case 48:
			return [new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 99, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 99, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 99, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 156, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 154, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 100, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 115, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 113, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 154, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 157, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 50533560, 0, 154, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 75800336, 0, 116, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 75800336, 0, 98, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 101067120, 0, 114, 0, 0),
					new Monster(395, 1, 0, 0, 0, 0, 0, 865046, 1427452, 252669776, 0, 241, 0, 0)];
			case 49:
			return [new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 27145, 3419, 1046630, 1273610, 54425724, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 40718, 3419, 1046630, 1273610, 81639592, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 40718, 3419, 1046630, 1273610, 81639592, 0, 165, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 54291, 3419, 1046630, 1273610, 108853456, 0, 143, 0, 0),
					new Monster(400, 1, 14897, 5227, 5173, 135727, 3419, 1046630, 1273610, 272132640, 0, 242, 0, 0)];
			}
	}
}

//tower helpers
class Copycat extends Entity{

	//set from account class
	public $equip;
	public $data;

	//items are set in account class c
	function __construct($data, $items){
		$this->data = $data;
		$this->equip = $items;

		// var_dump($items);

		$this->class = $data['class'];
		$this->ID = -390 - $this->class;
		$this->lvl = $data['lvl'];

		$this->baseStats = [
			"str" => $data['str'],
			"dex" => $data['dex'],
			"int" => $data['intel'],
			"wit" => $data['wit'],
			"luck" => $data['luck']];

			
		if($this->class == 1){
			//TODO: get shield block
			$this->block = 0;
			$mainStat = "str";
		}else if($this->class == 3){
			$this->block = 50;
			$mainStat = "dex";
		}else{
			$this->block = 0;
			$mainStat = "int";
		}



		if($weapon = $this->getWeapon()){
			$dmgStat = $this->getTotalStats()[$mainStat];
			$this->dmg_min = floor($weapon->raw['dmg_min'] * (1 + $dmgStat/10));
			$this->dmg_max = floor($weapon->raw['dmg_max'] * (1 + $dmgStat/10));
		}else{
			//default dmg without weapon 1-2
			$dmgStat = $this->getTotalStats()[$mainStat];
			$this->dmg_min = floor(1 + $dmgStat/10);
			$this->dmg_max = floor(2 * (1 + $dmgStat/10));
		}

		parent::NewEntity();
	}

	public function getSave(){
		$ret = [];
		for($i = 0; $i <= 147;$i++)
			$ret[] = 0;

		$ret[0] = $this->data['lvl'];
		$ret[1] = $this->data['class'];
		$ret[2] = 0;
		$ret[3] = 0;


		//base stats
		$ret[4] = $this->baseStats['str'];
		$ret[5] = $this->baseStats['dex'];
		$ret[6] = $this->baseStats['int'];
		$ret[7] = $this->baseStats['wit'];
		$ret[8] = $this->baseStats['luck'];

		//equip stats
		$eqStats = $this->getEquipStats();
		$ret[9] = $eqStats['str'];
		$ret[10] = $eqStats['dex'];
		$ret[11] = $eqStats['int'];
		$ret[12] = $eqStats['wit'];
		$ret[13] = $eqStats['luck'];

		//potion stats? prolly not, dunno what this is
		// $ret[14] = 0;
		// $ret[15] = 0;
		// $ret[16] = 0;
		// $ret[17] = 0;
		// $ret[18] = 0;

		//armor
		$ret[19] = 0; // Base

		//weapon dmgs
		if(($weapon = $this->getWeapon()) !== false){
			$ret[20] = $weapon->raw['dmg_min'];
			$ret[21] = $weapon->raw['dmg_max'];
		}else{
			$ret[20] = 1;
			$ret[21] = 2;
		}


		//items start 22
		foreach($this->equip as $item){
			$slot = $item->slot * 12;
			// $slot = 1*12;
			$itemSave = $item->getSave();
			if ($item->type > 2 && $item->type < 8) {
				$ret[19] += $itemSave[2];
			}
			for($i = 0; $i < 12; $i++)
				$ret[22 + $slot + $i] = $itemSave[$i];
		}

		//cena lvla
		$ret[142] = Copycat::getLvlCost($this->data['lvl']);

		//chuj wi
		// $ret[143] = 0;
		// $ret[144] = 0;
		// $ret[145] = 0;
		// $ret[146] = 0;
		// $ret[147] = 0;

		return join("/", $ret);
	}

	public function getFightHeader(){
		$ret = [];
		for($i = 0; $i < 47; $i++)
			$ret[] = 0;
		$ret[47] = "";

		$ret[0] = $this->ID;
		$ret[1] = $this->ID;

		$ret[2] = $this->lvl;
		$ret[3] = $this->maxHp;
		$ret[4] = $this->hp;

		$stats = $this->getTotalStats();
		$ret[5] = $stats['str'];
		$ret[6] = $stats['dex'];
		$ret[7] = $stats['int'];
		$ret[8] = $stats['wit'];
		$ret[9] = $stats['luck'];

		$ret[10] = $this->ID;
		// $ret[11] = 0;
		// $ret[12] = 0;
		// $ret[13] = 0;
		// $ret[14] = 0;
		// $ret[15] = 0;
		// $ret[16] = 0;
		// $ret[17] = 0;
		// $ret[18] = 0;
		// $ret[19] = 0;
		// $ret[20] = 0;
		// $ret[21] = 0;
		//tu bylo 1 chuj wie czemu, to jest raczej tylko dla potworow
		//class z tego co wynika
		$ret[22] = $this->class;
		//bron
		if($weapon = $this->getWeapon()){
			$ret[23] = 1;
			$ret[24] = $weapon->raw['item_id'];
			$ret[25] = $weapon->raw['dmg_min'];
			$ret[26] = $weapon->raw['dmg_max'];
			$ret[27] = $weapon->raw['a1'];
			$ret[28] = $weapon->raw['a2'];
			$ret[29] = $weapon->raw['a3'];
			$ret[30] = $weapon->raw['a4'];
			$ret[31] = $weapon->raw['a5'];
			$ret[32] = $weapon->raw['a6'];
			$ret[33] = $weapon->raw['value_silver'];
			$ret[34] = $weapon->raw['value_mush'];
		}

		// $ret[27] = 0;
		// $ret[28] = 0;
		// $ret[29] = 0;
		// $ret[30] = 0;
		// $ret[31] = 0;
		// $ret[32] = 0;
		// $ret[33] = 0;
		// $ret[34] = 0;
		// $ret[35] = 0;
		// $ret[36] = 0;
		// $ret[37] = 0;
		// $ret[38] = 0;
		// $ret[39] = 0;
		// $ret[40] = 0;
		// $ret[41] = 0;
		// $ret[42] = 0;
		// $ret[43] = 0;
		// $ret[44] = 0;
		// $ret[45] = 0;
		// $ret[46] = 0;
		

		return join("/", $ret);
	}

	public function lvlUp(){
		//warrior lvls starting from 150
		//1046, 358, 531, 1065, 547
		//1053, 360, 535, 1072, 551
		//1060, 363, 539, 1080, 555

		// var_dump($this->data);

		$this->data['lvl']++;

		$this->baseStats['str'] += 5;
		$this->baseStats['dex'] += 5;
		$this->baseStats['int'] += 5;
		$this->baseStats['wit'] += 5;
		$this->baseStats['luck'] += 5;

		switch($this->class){
			case 1:
				$this->baseStats['str'] += 5;
				$this->baseStats['wit'] += 5;
				break;
			case 2:
				$this->baseStats['int'] += 7;
				break;
			case 3:
				$this->baseStats['dex'] += 7;
				break;
		}

		$GLOBALS['db']->exec('UPDATE copycats SET lvl = '.$this->data['lvl'].', str = '.$this->baseStats['str'].', dex = '.$this->baseStats['dex'].', intel = '.$this->baseStats['int'].', wit = '.$this->baseStats['wit'].', luck = '.$this->baseStats['luck'].' WHERE ID = '.$this->data['ID']);

	}

	public function getWeapon(){
		foreach($this->equip as $item)
			if($item->type == 1)
				return $item;
		return false;
	}

	//copycat can't use shield
	public function getShield(){
		return false;
	}

	public function getEquipStats(){
		$stats = [
		"str" => "0",
		"dex" => "0",
		"int" => "0",
		"wit" => "0",
		"luck" => "0"];
		foreach($this->equip as $item){
			$itemStats = $item->stats;

			$stats['str'] += $itemStats['str'];
			$stats['dex'] += $itemStats['dex'];
			$stats['int'] += $itemStats['int'];
			$stats['wit'] += $itemStats['wit'];
			$stats['luck'] += $itemStats['luck'];
		}

		return $stats;
	}

	public function getTotalStats(){
		$stats = $this->baseStats;
		$equipStats = $this->getEquipStats();

		$stats['str'] += $equipStats['str'];
		$stats['dex'] += $equipStats['dex'];
		$stats['int'] += $equipStats['int'];
		$stats['wit'] += $equipStats['wit'];
		$stats['luck'] += $equipStats['luck'];

		return $stats;
	}

	public static function getLvlCost($lvl){
		return $lvl * 10000;
	}
}